in_source: |-
  # Тестируем 22 выражения, печатаем то, что они возвращают
  (print_int (defvar a 10))
  (print_char 10)

  (print_int (setq a 33))
  (print_char 10)

  (print_int a)
  (print_char 10)

  (print_int (defun my_function(x y z) (+ x y z ) ) )
  (print_char 10)

  (print_int (my_function 10 20 40))
  (print_char 10)

  (print_int (+ a 54 3 6 -999))
  (print_char 10)

  (print_int (- 78 a 98))
  (print_char 10)

  (print_int (*))
  (print_char 10)

  (print_int (/ 45 2))
  (print_char 10)

  (print_int (mod 10 3))
  (print_char 10)

  (print_int (= 21 21))
  (print_char 10)

  (print_int (> 23 43))
  (print_char 10)

  (print_int (< 234 234))
  (print_char 10)

  (print_int (if 1 3 6))
  (print_char 10)

  (print_int (and 12 23 88))
  (print_char 10)

  (print_int (or 234 34 23 23 22))
  (print_char 10)

  (print_int (not 0))
  (print_char 10)

  (print_int (print_str "hello word"))
  (print_char 10)

  (print_int (print_char 37))
  (print_char 10)

  (print_int (print_int 98765))
  (print_char 10)

  (print_int (read_char))
  (print_char 10)

  (print_int (read_str))
  (print_char 10)

  (print_int (loop_while 0 12))
  (print_char 10)

  (print_int "HELLO WORLD")
  (print_char 10)

  (print_int 1234)

in_stdin: |-
  This is a test
out_stdout: |
  ============================================================
  program counter: 808, ticks: 1312.
  Вывод:
  10
  33
  33
  0
  70
  -903
  -53
  1
  22
  1
  1
  0
  0
  3
  88
  234
  1
  hello word10
  %37
  98765-1
  84
  23
  0
  11
  1234
out_code: |-
  {
    "static_data": [
      104,
      101,
      108,
      108,
      111,
      32,
      119,
      111,
      114,
      100,
      0,
      72,
      69,
      76,
      76,
      79,
      32,
      87,
      79,
      82,
      76,
      68,
      0
    ],
    "code": [
      {
        "opcode": "jump",
        "arg": 18,
        "term": null
      },
      {
        "opcode": "push",
        "arg": 65,
        "term": "call"
      },
      {
        "opcode": "store",
        "arg": null,
        "term": "call"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "call"
      },
      {
        "opcode": "push",
        "arg": 66,
        "term": "call"
      },
      {
        "opcode": "store",
        "arg": null,
        "term": "call"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "call"
      },
      {
        "opcode": "push",
        "arg": 67,
        "term": "call"
      },
      {
        "opcode": "store",
        "arg": null,
        "term": "call"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "call"
      },
      {
        "opcode": "push",
        "arg": 67,
        "term": "(variable: x)"
      },
      {
        "opcode": "load",
        "arg": null,
        "term": "(variable: x)"
      },
      {
        "opcode": "push",
        "arg": 66,
        "term": "(variable: y)"
      },
      {
        "opcode": "load",
        "arg": null,
        "term": "(variable: y)"
      },
      {
        "opcode": "add",
        "arg": null,
        "term": "+"
      },
      {
        "opcode": "push",
        "arg": 65,
        "term": "(variable: z)"
      },
      {
        "opcode": "load",
        "arg": null,
        "term": "(variable: z)"
      },
      {
        "opcode": "add",
        "arg": null,
        "term": "+"
      },
      {
        "opcode": "ret",
        "arg": null,
        "term": "ret"
      },
      {
        "opcode": "push",
        "arg": -1,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "(number literal: 10)"
      },
      {
        "opcode": "push",
        "arg": 64,
        "term": "defvar"
      },
      {
        "opcode": "store",
        "arg": null,
        "term": "defvar"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_plus",
        "arg": 3,
        "term": "print_int"
      },
      {
        "opcode": "neg",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 45,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "mod",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 48,
        "term": "print_int"
      },
      {
        "opcode": "add",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "swap",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "div",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_non_zero",
        "arg": -10,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_minus",
        "arg": 2,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "jump",
        "arg": -4,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "(number literal: 10)"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_char"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_char"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": -1,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 33,
        "term": "(number literal: 33)"
      },
      {
        "opcode": "push",
        "arg": 64,
        "term": "setq"
      },
      {
        "opcode": "store",
        "arg": null,
        "term": "setq"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_plus",
        "arg": 3,
        "term": "print_int"
      },
      {
        "opcode": "neg",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 45,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "mod",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 48,
        "term": "print_int"
      },
      {
        "opcode": "add",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "swap",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "div",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_non_zero",
        "arg": -10,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_minus",
        "arg": 2,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "jump",
        "arg": -4,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "(number literal: 10)"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_char"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_char"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": -1,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 64,
        "term": "(variable: a)"
      },
      {
        "opcode": "load",
        "arg": null,
        "term": "(variable: a)"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_plus",
        "arg": 3,
        "term": "print_int"
      },
      {
        "opcode": "neg",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 45,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "mod",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 48,
        "term": "print_int"
      },
      {
        "opcode": "add",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "swap",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "div",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_non_zero",
        "arg": -10,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_minus",
        "arg": 2,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "jump",
        "arg": -4,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "(number literal: 10)"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_char"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_char"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": -1,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 0,
        "term": "defun"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_plus",
        "arg": 3,
        "term": "print_int"
      },
      {
        "opcode": "neg",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 45,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "mod",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 48,
        "term": "print_int"
      },
      {
        "opcode": "add",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "swap",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "div",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_non_zero",
        "arg": -10,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_minus",
        "arg": 2,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "jump",
        "arg": -4,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "(number literal: 10)"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_char"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_char"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": -1,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "(number literal: 10)"
      },
      {
        "opcode": "push",
        "arg": 20,
        "term": "(number literal: 20)"
      },
      {
        "opcode": "push",
        "arg": 40,
        "term": "(number literal: 40)"
      },
      {
        "opcode": "call",
        "arg": 1,
        "term": "call my_function"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_plus",
        "arg": 3,
        "term": "print_int"
      },
      {
        "opcode": "neg",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 45,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "mod",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 48,
        "term": "print_int"
      },
      {
        "opcode": "add",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "swap",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "div",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_non_zero",
        "arg": -10,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_minus",
        "arg": 2,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "jump",
        "arg": -4,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "(number literal: 10)"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_char"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_char"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": -1,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 64,
        "term": "(variable: a)"
      },
      {
        "opcode": "load",
        "arg": null,
        "term": "(variable: a)"
      },
      {
        "opcode": "push",
        "arg": 54,
        "term": "(number literal: 54)"
      },
      {
        "opcode": "add",
        "arg": null,
        "term": "+"
      },
      {
        "opcode": "push",
        "arg": 3,
        "term": "(number literal: 3)"
      },
      {
        "opcode": "add",
        "arg": null,
        "term": "+"
      },
      {
        "opcode": "push",
        "arg": 6,
        "term": "(number literal: 6)"
      },
      {
        "opcode": "add",
        "arg": null,
        "term": "+"
      },
      {
        "opcode": "push",
        "arg": -999,
        "term": "(number literal: -999)"
      },
      {
        "opcode": "add",
        "arg": null,
        "term": "+"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_plus",
        "arg": 3,
        "term": "print_int"
      },
      {
        "opcode": "neg",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 45,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "mod",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 48,
        "term": "print_int"
      },
      {
        "opcode": "add",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "swap",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "div",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_non_zero",
        "arg": -10,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_minus",
        "arg": 2,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "jump",
        "arg": -4,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "(number literal: 10)"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_char"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_char"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": -1,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 78,
        "term": "(number literal: 78)"
      },
      {
        "opcode": "push",
        "arg": 64,
        "term": "(variable: a)"
      },
      {
        "opcode": "load",
        "arg": null,
        "term": "(variable: a)"
      },
      {
        "opcode": "sub",
        "arg": null,
        "term": "-"
      },
      {
        "opcode": "push",
        "arg": 98,
        "term": "(number literal: 98)"
      },
      {
        "opcode": "sub",
        "arg": null,
        "term": "-"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_plus",
        "arg": 3,
        "term": "print_int"
      },
      {
        "opcode": "neg",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 45,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "mod",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 48,
        "term": "print_int"
      },
      {
        "opcode": "add",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "swap",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "div",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_non_zero",
        "arg": -10,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_minus",
        "arg": 2,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "jump",
        "arg": -4,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "(number literal: 10)"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_char"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_char"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": -1,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 1,
        "term": "*"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_plus",
        "arg": 3,
        "term": "print_int"
      },
      {
        "opcode": "neg",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 45,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "mod",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 48,
        "term": "print_int"
      },
      {
        "opcode": "add",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "swap",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "div",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_non_zero",
        "arg": -10,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_minus",
        "arg": 2,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "jump",
        "arg": -4,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "(number literal: 10)"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_char"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_char"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": -1,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 45,
        "term": "(number literal: 45)"
      },
      {
        "opcode": "push",
        "arg": 2,
        "term": "(number literal: 2)"
      },
      {
        "opcode": "div",
        "arg": null,
        "term": "/"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_plus",
        "arg": 3,
        "term": "print_int"
      },
      {
        "opcode": "neg",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 45,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "mod",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 48,
        "term": "print_int"
      },
      {
        "opcode": "add",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "swap",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "div",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_non_zero",
        "arg": -10,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_minus",
        "arg": 2,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "jump",
        "arg": -4,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "(number literal: 10)"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_char"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_char"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": -1,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "(number literal: 10)"
      },
      {
        "opcode": "push",
        "arg": 3,
        "term": "(number literal: 3)"
      },
      {
        "opcode": "mod",
        "arg": null,
        "term": "%"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_plus",
        "arg": 3,
        "term": "print_int"
      },
      {
        "opcode": "neg",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 45,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "mod",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 48,
        "term": "print_int"
      },
      {
        "opcode": "add",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "swap",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "div",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_non_zero",
        "arg": -10,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_minus",
        "arg": 2,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "jump",
        "arg": -4,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "(number literal: 10)"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_char"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_char"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": -1,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 21,
        "term": "(number literal: 21)"
      },
      {
        "opcode": "push",
        "arg": 21,
        "term": "(number literal: 21)"
      },
      {
        "opcode": "sub",
        "arg": null,
        "term": "="
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "="
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "="
      },
      {
        "opcode": "jump_zero",
        "arg": 2,
        "term": "="
      },
      {
        "opcode": "push",
        "arg": 0,
        "term": "="
      },
      {
        "opcode": "jump",
        "arg": 1,
        "term": "="
      },
      {
        "opcode": "push",
        "arg": 1,
        "term": "="
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_plus",
        "arg": 3,
        "term": "print_int"
      },
      {
        "opcode": "neg",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 45,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "mod",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 48,
        "term": "print_int"
      },
      {
        "opcode": "add",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "swap",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "div",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_non_zero",
        "arg": -10,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_minus",
        "arg": 2,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "jump",
        "arg": -4,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "(number literal: 10)"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_char"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_char"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": -1,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 23,
        "term": "(number literal: 23)"
      },
      {
        "opcode": "push",
        "arg": 43,
        "term": "(number literal: 43)"
      },
      {
        "opcode": "swap",
        "arg": null,
        "term": null
      },
      {
        "opcode": "sub",
        "arg": null,
        "term": ">"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": ">"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": ">"
      },
      {
        "opcode": "jump_minus",
        "arg": 2,
        "term": ">"
      },
      {
        "opcode": "push",
        "arg": 0,
        "term": ">"
      },
      {
        "opcode": "jump",
        "arg": 1,
        "term": ">"
      },
      {
        "opcode": "push",
        "arg": 1,
        "term": ">"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_plus",
        "arg": 3,
        "term": "print_int"
      },
      {
        "opcode": "neg",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 45,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "mod",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 48,
        "term": "print_int"
      },
      {
        "opcode": "add",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "swap",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "div",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_non_zero",
        "arg": -10,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_minus",
        "arg": 2,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "jump",
        "arg": -4,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "(number literal: 10)"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_char"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_char"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": -1,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 234,
        "term": "(number literal: 234)"
      },
      {
        "opcode": "push",
        "arg": 234,
        "term": "(number literal: 234)"
      },
      {
        "opcode": "sub",
        "arg": null,
        "term": "<"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "<"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "<"
      },
      {
        "opcode": "jump_minus",
        "arg": 2,
        "term": "<"
      },
      {
        "opcode": "push",
        "arg": 0,
        "term": "<"
      },
      {
        "opcode": "jump",
        "arg": 1,
        "term": "<"
      },
      {
        "opcode": "push",
        "arg": 1,
        "term": "<"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_plus",
        "arg": 3,
        "term": "print_int"
      },
      {
        "opcode": "neg",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 45,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "mod",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 48,
        "term": "print_int"
      },
      {
        "opcode": "add",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "swap",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "div",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_non_zero",
        "arg": -10,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_minus",
        "arg": 2,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "jump",
        "arg": -4,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "(number literal: 10)"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_char"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_char"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": -1,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 1,
        "term": "(number literal: 1)"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "if"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "if"
      },
      {
        "opcode": "jump_zero",
        "arg": 2,
        "term": "if"
      },
      {
        "opcode": "push",
        "arg": 3,
        "term": "(number literal: 3)"
      },
      {
        "opcode": "jump",
        "arg": 1,
        "term": "if"
      },
      {
        "opcode": "push",
        "arg": 6,
        "term": "(number literal: 6)"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_plus",
        "arg": 3,
        "term": "print_int"
      },
      {
        "opcode": "neg",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 45,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "mod",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 48,
        "term": "print_int"
      },
      {
        "opcode": "add",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "swap",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "div",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_non_zero",
        "arg": -10,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_minus",
        "arg": 2,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "jump",
        "arg": -4,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "(number literal: 10)"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_char"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_char"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": -1,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 12,
        "term": "(number literal: 12)"
      },
      {
        "opcode": "push",
        "arg": 23,
        "term": "(number literal: 23)"
      },
      {
        "opcode": "and",
        "arg": null,
        "term": "and"
      },
      {
        "opcode": "push",
        "arg": 88,
        "term": "(number literal: 88)"
      },
      {
        "opcode": "and",
        "arg": null,
        "term": "and"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_plus",
        "arg": 3,
        "term": "print_int"
      },
      {
        "opcode": "neg",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 45,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "mod",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 48,
        "term": "print_int"
      },
      {
        "opcode": "add",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "swap",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "div",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_non_zero",
        "arg": -10,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_minus",
        "arg": 2,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "jump",
        "arg": -4,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "(number literal: 10)"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_char"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_char"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": -1,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 234,
        "term": "(number literal: 234)"
      },
      {
        "opcode": "push",
        "arg": 34,
        "term": "(number literal: 34)"
      },
      {
        "opcode": "or",
        "arg": null,
        "term": "or"
      },
      {
        "opcode": "push",
        "arg": 23,
        "term": "(number literal: 23)"
      },
      {
        "opcode": "or",
        "arg": null,
        "term": "or"
      },
      {
        "opcode": "push",
        "arg": 23,
        "term": "(number literal: 23)"
      },
      {
        "opcode": "or",
        "arg": null,
        "term": "or"
      },
      {
        "opcode": "push",
        "arg": 22,
        "term": "(number literal: 22)"
      },
      {
        "opcode": "or",
        "arg": null,
        "term": "or"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_plus",
        "arg": 3,
        "term": "print_int"
      },
      {
        "opcode": "neg",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 45,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "mod",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 48,
        "term": "print_int"
      },
      {
        "opcode": "add",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "swap",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "div",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_non_zero",
        "arg": -10,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_minus",
        "arg": 2,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "jump",
        "arg": -4,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "(number literal: 10)"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_char"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_char"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": -1,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 0,
        "term": "(number literal: 0)"
      },
      {
        "opcode": "not",
        "arg": null,
        "term": "not"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_plus",
        "arg": 3,
        "term": "print_int"
      },
      {
        "opcode": "neg",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 45,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "mod",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 48,
        "term": "print_int"
      },
      {
        "opcode": "add",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "swap",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "div",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_non_zero",
        "arg": -10,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_minus",
        "arg": 2,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "jump",
        "arg": -4,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "(number literal: 10)"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_char"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_char"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": -1,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 0,
        "term": "(static string)"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_str"
      },
      {
        "opcode": "load",
        "arg": null,
        "term": "print_str"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_str"
      },
      {
        "opcode": "jump_zero",
        "arg": 3,
        "term": "print_str"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_str"
      },
      {
        "opcode": "inc",
        "arg": null,
        "term": "print_str"
      },
      {
        "opcode": "jump",
        "arg": -7,
        "term": "print_str"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "print_str"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_plus",
        "arg": 3,
        "term": "print_int"
      },
      {
        "opcode": "neg",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 45,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "mod",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 48,
        "term": "print_int"
      },
      {
        "opcode": "add",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "swap",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "div",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_non_zero",
        "arg": -10,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_minus",
        "arg": 2,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "jump",
        "arg": -4,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "(number literal: 10)"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_char"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_char"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": -1,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 37,
        "term": "(number literal: 37)"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_char"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_char"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_plus",
        "arg": 3,
        "term": "print_int"
      },
      {
        "opcode": "neg",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 45,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "mod",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 48,
        "term": "print_int"
      },
      {
        "opcode": "add",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "swap",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "div",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_non_zero",
        "arg": -10,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_minus",
        "arg": 2,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "jump",
        "arg": -4,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "(number literal: 10)"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_char"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_char"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": -1,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": -1,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 98765,
        "term": "(number literal: 98765)"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_plus",
        "arg": 3,
        "term": "print_int"
      },
      {
        "opcode": "neg",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 45,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "mod",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 48,
        "term": "print_int"
      },
      {
        "opcode": "add",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "swap",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "div",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_non_zero",
        "arg": -10,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_minus",
        "arg": 2,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "jump",
        "arg": -4,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_plus",
        "arg": 3,
        "term": "print_int"
      },
      {
        "opcode": "neg",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 45,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "mod",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 48,
        "term": "print_int"
      },
      {
        "opcode": "add",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "swap",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "div",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_non_zero",
        "arg": -10,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_minus",
        "arg": 2,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "jump",
        "arg": -4,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "(number literal: 10)"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_char"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_char"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": -1,
        "term": "print_int"
      },
      {
        "opcode": "read",
        "arg": 0,
        "term": "read_char"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_plus",
        "arg": 3,
        "term": "print_int"
      },
      {
        "opcode": "neg",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 45,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "mod",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 48,
        "term": "print_int"
      },
      {
        "opcode": "add",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "swap",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "div",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_non_zero",
        "arg": -10,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_minus",
        "arg": 2,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "jump",
        "arg": -4,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "(number literal: 10)"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_char"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_char"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": -1,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 23,
        "term": "read_str"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "read_str"
      },
      {
        "opcode": "read",
        "arg": 0,
        "term": "read_str"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "read_str"
      },
      {
        "opcode": "swap",
        "arg": null,
        "term": "read_str"
      },
      {
        "opcode": "store",
        "arg": null,
        "term": "read_str"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "read_str"
      },
      {
        "opcode": "inc",
        "arg": null,
        "term": "read_str"
      },
      {
        "opcode": "jump_non_zero",
        "arg": -8,
        "term": "read_str"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "read_str"
      },
      {
        "opcode": "push",
        "arg": 23,
        "term": "read_str"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_plus",
        "arg": 3,
        "term": "print_int"
      },
      {
        "opcode": "neg",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 45,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "mod",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 48,
        "term": "print_int"
      },
      {
        "opcode": "add",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "swap",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "div",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_non_zero",
        "arg": -10,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_minus",
        "arg": 2,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "jump",
        "arg": -4,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "(number literal: 10)"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_char"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_char"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": -1,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 0,
        "term": "(number literal: 0)"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "loop_while"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "loop_while"
      },
      {
        "opcode": "jump_zero",
        "arg": 3,
        "term": "loop_while"
      },
      {
        "opcode": "push",
        "arg": 12,
        "term": "(number literal: 12)"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "loop_while"
      },
      {
        "opcode": "jump",
        "arg": -7,
        "term": "loop_while"
      },
      {
        "opcode": "push",
        "arg": 0,
        "term": "loop_while"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_plus",
        "arg": 3,
        "term": "print_int"
      },
      {
        "opcode": "neg",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 45,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "mod",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 48,
        "term": "print_int"
      },
      {
        "opcode": "add",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "swap",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "div",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_non_zero",
        "arg": -10,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_minus",
        "arg": 2,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "jump",
        "arg": -4,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "(number literal: 10)"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_char"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_char"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": -1,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 11,
        "term": "(static string)"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_plus",
        "arg": 3,
        "term": "print_int"
      },
      {
        "opcode": "neg",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 45,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "mod",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 48,
        "term": "print_int"
      },
      {
        "opcode": "add",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "swap",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "div",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_non_zero",
        "arg": -10,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_minus",
        "arg": 2,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "jump",
        "arg": -4,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "(number literal: 10)"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_char"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_char"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "push",
        "arg": -1,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 1234,
        "term": "(number literal: 1234)"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_plus",
        "arg": 3,
        "term": "print_int"
      },
      {
        "opcode": "neg",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 45,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "mod",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 48,
        "term": "print_int"
      },
      {
        "opcode": "add",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "swap",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "push",
        "arg": 10,
        "term": "print_int"
      },
      {
        "opcode": "div",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_non_zero",
        "arg": -10,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_int"
      },
      {
        "opcode": "jump_minus",
        "arg": 2,
        "term": "print_int"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_int"
      },
      {
        "opcode": "jump",
        "arg": -4,
        "term": "print_int"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "halt",
        "arg": null,
        "term": null
      }
    ]
  }


out_log: |
  DEBUG    root:machine.py:25 TICK:   0,  PC:   0,  AR:   0,  MEM_OUT: 104,  TOS: []                    ,    jump 18   
  DEBUG    root:machine.py:28 TICK:   1,  PC:  19,  AR:   0,  MEM_OUT: 104,  TOS: []                    ,    push -1    // print_int
  DEBUG    root:machine.py:28 TICK:   2,  PC:  20,  AR:   0,  MEM_OUT: 104,  TOS: [-1]                  ,    push 10    // (number literal: 10)
  DEBUG    root:machine.py:28 TICK:   3,  PC:  21,  AR:   0,  MEM_OUT: 104,  TOS: [10, -1]              ,    push 64    // defvar
  DEBUG    root:machine.py:28 TICK:   4,  PC:  22,  AR:   0,  MEM_OUT: 104,  TOS: [64, 10, -1]          ,    store      // defvar
  DEBUG    root:machine.py:28 TICK:   6,  PC:  23,  AR:  64,  MEM_OUT:  10,  TOS: [10, -1]              ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK:   7,  PC:  24,  AR:  64,  MEM_OUT:  10,  TOS: [10, -1]              ,    jump_plus 3 // print_int
  DEBUG    root:machine.py:28 TICK:   8,  PC:  28,  AR:  64,  MEM_OUT:  10,  TOS: [10, -1]              ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK:   9,  PC:  29,  AR:  64,  MEM_OUT:  10,  TOS: [10, 10, -1]          ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK:  10,  PC:  30,  AR:  64,  MEM_OUT:  10,  TOS: [10, 10, 10,... +1]   ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK:  11,  PC:  31,  AR:  64,  MEM_OUT:  10,  TOS: [0, 10, -1]           ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK:  12,  PC:  32,  AR:  64,  MEM_OUT:  10,  TOS: [48, 0, 10,... +1]    ,    add        // print_int
  DEBUG    root:machine.py:28 TICK:  13,  PC:  33,  AR:  64,  MEM_OUT:  10,  TOS: [48, 10, -1]          ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK:  14,  PC:  34,  AR:  64,  MEM_OUT:  10,  TOS: [10, 48, -1]          ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK:  15,  PC:  35,  AR:  64,  MEM_OUT:  10,  TOS: [10, 10, 48,... +1]   ,    div        // print_int
  DEBUG    root:machine.py:28 TICK:  16,  PC:  36,  AR:  64,  MEM_OUT:  10,  TOS: [1, 48, -1]           ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK:  17,  PC:  37,  AR:  64,  MEM_OUT:  10,  TOS: [1, 48, -1]           ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK:  18,  PC:  28,  AR:  64,  MEM_OUT:  10,  TOS: [1, 48, -1]           ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK:  19,  PC:  29,  AR:  64,  MEM_OUT:  10,  TOS: [1, 1, 48,... +1]     ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK:  20,  PC:  30,  AR:  64,  MEM_OUT:  10,  TOS: [10, 1, 1,... +2]     ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK:  21,  PC:  31,  AR:  64,  MEM_OUT:  10,  TOS: [1, 1, 48,... +1]     ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK:  22,  PC:  32,  AR:  64,  MEM_OUT:  10,  TOS: [48, 1, 1,... +2]     ,    add        // print_int
  DEBUG    root:machine.py:28 TICK:  23,  PC:  33,  AR:  64,  MEM_OUT:  10,  TOS: [49, 1, 48,... +1]    ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK:  24,  PC:  34,  AR:  64,  MEM_OUT:  10,  TOS: [1, 49, 48,... +1]    ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK:  25,  PC:  35,  AR:  64,  MEM_OUT:  10,  TOS: [10, 1, 49,... +2]    ,    div        // print_int
  DEBUG    root:machine.py:28 TICK:  26,  PC:  36,  AR:  64,  MEM_OUT:  10,  TOS: [0, 49, 48,... +1]    ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK:  27,  PC:  37,  AR:  64,  MEM_OUT:  10,  TOS: [0, 49, 48,... +1]    ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK:  28,  PC:  38,  AR:  64,  MEM_OUT:  10,  TOS: [0, 49, 48,... +1]    ,    pop        // print_int
  DEBUG    root:machine.py:28 TICK:  29,  PC:  39,  AR:  64,  MEM_OUT:  10,  TOS: [49, 48, -1]          ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK:  30,  PC:  40,  AR:  64,  MEM_OUT:  10,  TOS: [49, 48, -1]          ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK:  31,  PC:  41,  AR:  64,  MEM_OUT:  10,  TOS: [49, 48, -1]          ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 1
  DEBUG    root:machine.py:28 TICK:  32,  PC:  42,  AR:  64,  MEM_OUT:  10,  TOS: [48, -1]              ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK:  33,  PC:  39,  AR:  64,  MEM_OUT:  10,  TOS: [48, -1]              ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK:  34,  PC:  40,  AR:  64,  MEM_OUT:  10,  TOS: [48, -1]              ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK:  35,  PC:  41,  AR:  64,  MEM_OUT:  10,  TOS: [48, -1]              ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 0
  DEBUG    root:machine.py:28 TICK:  36,  PC:  42,  AR:  64,  MEM_OUT:  10,  TOS: [-1]                  ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK:  37,  PC:  39,  AR:  64,  MEM_OUT:  10,  TOS: [-1]                  ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK:  38,  PC:  40,  AR:  64,  MEM_OUT:  10,  TOS: [-1]                  ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK:  39,  PC:  43,  AR:  64,  MEM_OUT:  10,  TOS: [-1]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK:  40,  PC:  44,  AR:  64,  MEM_OUT:  10,  TOS: []                    ,    push 10    // (number literal: 10)
  DEBUG    root:machine.py:28 TICK:  41,  PC:  45,  AR:  64,  MEM_OUT:  10,  TOS: [10]                  ,    dup        // print_char
  DEBUG    root:machine.py:28 TICK:  42,  PC:  46,  AR:  64,  MEM_OUT:  10,  TOS: [10, 10]              ,    write 0    // print_char
  DEBUG    root:control_unit.py:88 вывод: 

  DEBUG    root:machine.py:28 TICK:  43,  PC:  47,  AR:  64,  MEM_OUT:  10,  TOS: [10]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK:  44,  PC:  48,  AR:  64,  MEM_OUT:  10,  TOS: []                    ,    push -1    // print_int
  DEBUG    root:machine.py:28 TICK:  45,  PC:  49,  AR:  64,  MEM_OUT:  10,  TOS: [-1]                  ,    push 33    // (number literal: 33)
  DEBUG    root:machine.py:28 TICK:  46,  PC:  50,  AR:  64,  MEM_OUT:  10,  TOS: [33, -1]              ,    push 64    // setq
  DEBUG    root:machine.py:28 TICK:  47,  PC:  51,  AR:  64,  MEM_OUT:  10,  TOS: [64, 33, -1]          ,    store      // setq
  DEBUG    root:machine.py:28 TICK:  49,  PC:  52,  AR:  64,  MEM_OUT:  33,  TOS: [33, -1]              ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK:  50,  PC:  53,  AR:  64,  MEM_OUT:  33,  TOS: [33, -1]              ,    jump_plus 3 // print_int
  DEBUG    root:machine.py:28 TICK:  51,  PC:  57,  AR:  64,  MEM_OUT:  33,  TOS: [33, -1]              ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK:  52,  PC:  58,  AR:  64,  MEM_OUT:  33,  TOS: [33, 33, -1]          ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK:  53,  PC:  59,  AR:  64,  MEM_OUT:  33,  TOS: [10, 33, 33,... +1]   ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK:  54,  PC:  60,  AR:  64,  MEM_OUT:  33,  TOS: [3, 33, -1]           ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK:  55,  PC:  61,  AR:  64,  MEM_OUT:  33,  TOS: [48, 3, 33,... +1]    ,    add        // print_int
  DEBUG    root:machine.py:28 TICK:  56,  PC:  62,  AR:  64,  MEM_OUT:  33,  TOS: [51, 33, -1]          ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK:  57,  PC:  63,  AR:  64,  MEM_OUT:  33,  TOS: [33, 51, -1]          ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK:  58,  PC:  64,  AR:  64,  MEM_OUT:  33,  TOS: [10, 33, 51,... +1]   ,    div        // print_int
  DEBUG    root:machine.py:28 TICK:  59,  PC:  65,  AR:  64,  MEM_OUT:  33,  TOS: [3, 51, -1]           ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK:  60,  PC:  66,  AR:  64,  MEM_OUT:  33,  TOS: [3, 51, -1]           ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK:  61,  PC:  57,  AR:  64,  MEM_OUT:  33,  TOS: [3, 51, -1]           ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK:  62,  PC:  58,  AR:  64,  MEM_OUT:  33,  TOS: [3, 3, 51,... +1]     ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK:  63,  PC:  59,  AR:  64,  MEM_OUT:  33,  TOS: [10, 3, 3,... +2]     ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK:  64,  PC:  60,  AR:  64,  MEM_OUT:  33,  TOS: [3, 3, 51,... +1]     ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK:  65,  PC:  61,  AR:  64,  MEM_OUT:  33,  TOS: [48, 3, 3,... +2]     ,    add        // print_int
  DEBUG    root:machine.py:28 TICK:  66,  PC:  62,  AR:  64,  MEM_OUT:  33,  TOS: [51, 3, 51,... +1]    ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK:  67,  PC:  63,  AR:  64,  MEM_OUT:  33,  TOS: [3, 51, 51,... +1]    ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK:  68,  PC:  64,  AR:  64,  MEM_OUT:  33,  TOS: [10, 3, 51,... +2]    ,    div        // print_int
  DEBUG    root:machine.py:28 TICK:  69,  PC:  65,  AR:  64,  MEM_OUT:  33,  TOS: [0, 51, 51,... +1]    ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK:  70,  PC:  66,  AR:  64,  MEM_OUT:  33,  TOS: [0, 51, 51,... +1]    ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK:  71,  PC:  67,  AR:  64,  MEM_OUT:  33,  TOS: [0, 51, 51,... +1]    ,    pop        // print_int
  DEBUG    root:machine.py:28 TICK:  72,  PC:  68,  AR:  64,  MEM_OUT:  33,  TOS: [51, 51, -1]          ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK:  73,  PC:  69,  AR:  64,  MEM_OUT:  33,  TOS: [51, 51, -1]          ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK:  74,  PC:  70,  AR:  64,  MEM_OUT:  33,  TOS: [51, 51, -1]          ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 3
  DEBUG    root:machine.py:28 TICK:  75,  PC:  71,  AR:  64,  MEM_OUT:  33,  TOS: [51, -1]              ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK:  76,  PC:  68,  AR:  64,  MEM_OUT:  33,  TOS: [51, -1]              ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK:  77,  PC:  69,  AR:  64,  MEM_OUT:  33,  TOS: [51, -1]              ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK:  78,  PC:  70,  AR:  64,  MEM_OUT:  33,  TOS: [51, -1]              ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 3
  DEBUG    root:machine.py:28 TICK:  79,  PC:  71,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK:  80,  PC:  68,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK:  81,  PC:  69,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK:  82,  PC:  72,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK:  83,  PC:  73,  AR:  64,  MEM_OUT:  33,  TOS: []                    ,    push 10    // (number literal: 10)
  DEBUG    root:machine.py:28 TICK:  84,  PC:  74,  AR:  64,  MEM_OUT:  33,  TOS: [10]                  ,    dup        // print_char
  DEBUG    root:machine.py:28 TICK:  85,  PC:  75,  AR:  64,  MEM_OUT:  33,  TOS: [10, 10]              ,    write 0    // print_char
  DEBUG    root:control_unit.py:88 вывод: 

  DEBUG    root:machine.py:28 TICK:  86,  PC:  76,  AR:  64,  MEM_OUT:  33,  TOS: [10]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK:  87,  PC:  77,  AR:  64,  MEM_OUT:  33,  TOS: []                    ,    push -1    // print_int
  DEBUG    root:machine.py:28 TICK:  88,  PC:  78,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    push 64    // (variable: a)
  DEBUG    root:machine.py:28 TICK:  89,  PC:  79,  AR:  64,  MEM_OUT:  33,  TOS: [64, -1]              ,    load       // (variable: a)
  DEBUG    root:machine.py:28 TICK:  91,  PC:  80,  AR:  64,  MEM_OUT:  33,  TOS: [33, -1]              ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK:  92,  PC:  81,  AR:  64,  MEM_OUT:  33,  TOS: [33, -1]              ,    jump_plus 3 // print_int
  DEBUG    root:machine.py:28 TICK:  93,  PC:  85,  AR:  64,  MEM_OUT:  33,  TOS: [33, -1]              ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK:  94,  PC:  86,  AR:  64,  MEM_OUT:  33,  TOS: [33, 33, -1]          ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK:  95,  PC:  87,  AR:  64,  MEM_OUT:  33,  TOS: [10, 33, 33,... +1]   ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK:  96,  PC:  88,  AR:  64,  MEM_OUT:  33,  TOS: [3, 33, -1]           ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK:  97,  PC:  89,  AR:  64,  MEM_OUT:  33,  TOS: [48, 3, 33,... +1]    ,    add        // print_int
  DEBUG    root:machine.py:28 TICK:  98,  PC:  90,  AR:  64,  MEM_OUT:  33,  TOS: [51, 33, -1]          ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK:  99,  PC:  91,  AR:  64,  MEM_OUT:  33,  TOS: [33, 51, -1]          ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 100,  PC:  92,  AR:  64,  MEM_OUT:  33,  TOS: [10, 33, 51,... +1]   ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 101,  PC:  93,  AR:  64,  MEM_OUT:  33,  TOS: [3, 51, -1]           ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 102,  PC:  94,  AR:  64,  MEM_OUT:  33,  TOS: [3, 51, -1]           ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 103,  PC:  85,  AR:  64,  MEM_OUT:  33,  TOS: [3, 51, -1]           ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 104,  PC:  86,  AR:  64,  MEM_OUT:  33,  TOS: [3, 3, 51,... +1]     ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 105,  PC:  87,  AR:  64,  MEM_OUT:  33,  TOS: [10, 3, 3,... +2]     ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 106,  PC:  88,  AR:  64,  MEM_OUT:  33,  TOS: [3, 3, 51,... +1]     ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 107,  PC:  89,  AR:  64,  MEM_OUT:  33,  TOS: [48, 3, 3,... +2]     ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 108,  PC:  90,  AR:  64,  MEM_OUT:  33,  TOS: [51, 3, 51,... +1]    ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 109,  PC:  91,  AR:  64,  MEM_OUT:  33,  TOS: [3, 51, 51,... +1]    ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 110,  PC:  92,  AR:  64,  MEM_OUT:  33,  TOS: [10, 3, 51,... +2]    ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 111,  PC:  93,  AR:  64,  MEM_OUT:  33,  TOS: [0, 51, 51,... +1]    ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 112,  PC:  94,  AR:  64,  MEM_OUT:  33,  TOS: [0, 51, 51,... +1]    ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 113,  PC:  95,  AR:  64,  MEM_OUT:  33,  TOS: [0, 51, 51,... +1]    ,    pop        // print_int
  DEBUG    root:machine.py:28 TICK: 114,  PC:  96,  AR:  64,  MEM_OUT:  33,  TOS: [51, 51, -1]          ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 115,  PC:  97,  AR:  64,  MEM_OUT:  33,  TOS: [51, 51, -1]          ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 116,  PC:  98,  AR:  64,  MEM_OUT:  33,  TOS: [51, 51, -1]          ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 3
  DEBUG    root:machine.py:28 TICK: 117,  PC:  99,  AR:  64,  MEM_OUT:  33,  TOS: [51, -1]              ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 118,  PC:  96,  AR:  64,  MEM_OUT:  33,  TOS: [51, -1]              ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 119,  PC:  97,  AR:  64,  MEM_OUT:  33,  TOS: [51, -1]              ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 120,  PC:  98,  AR:  64,  MEM_OUT:  33,  TOS: [51, -1]              ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 3
  DEBUG    root:machine.py:28 TICK: 121,  PC:  99,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 122,  PC:  96,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 123,  PC:  97,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 124,  PC: 100,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 125,  PC: 101,  AR:  64,  MEM_OUT:  33,  TOS: []                    ,    push 10    // (number literal: 10)
  DEBUG    root:machine.py:28 TICK: 126,  PC: 102,  AR:  64,  MEM_OUT:  33,  TOS: [10]                  ,    dup        // print_char
  DEBUG    root:machine.py:28 TICK: 127,  PC: 103,  AR:  64,  MEM_OUT:  33,  TOS: [10, 10]              ,    write 0    // print_char
  DEBUG    root:control_unit.py:88 вывод: 

  DEBUG    root:machine.py:28 TICK: 128,  PC: 104,  AR:  64,  MEM_OUT:  33,  TOS: [10]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 129,  PC: 105,  AR:  64,  MEM_OUT:  33,  TOS: []                    ,    push -1    // print_int
  DEBUG    root:machine.py:28 TICK: 130,  PC: 106,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    push 0     // defun
  DEBUG    root:machine.py:28 TICK: 131,  PC: 107,  AR:  64,  MEM_OUT:  33,  TOS: [0, -1]               ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 132,  PC: 108,  AR:  64,  MEM_OUT:  33,  TOS: [0, -1]               ,    jump_plus 3 // print_int
  DEBUG    root:machine.py:28 TICK: 133,  PC: 112,  AR:  64,  MEM_OUT:  33,  TOS: [0, -1]               ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 134,  PC: 113,  AR:  64,  MEM_OUT:  33,  TOS: [0, 0, -1]            ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 135,  PC: 114,  AR:  64,  MEM_OUT:  33,  TOS: [10, 0, 0,... +1]     ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 136,  PC: 115,  AR:  64,  MEM_OUT:  33,  TOS: [0, 0, -1]            ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 137,  PC: 116,  AR:  64,  MEM_OUT:  33,  TOS: [48, 0, 0,... +1]     ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 138,  PC: 117,  AR:  64,  MEM_OUT:  33,  TOS: [48, 0, -1]           ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 139,  PC: 118,  AR:  64,  MEM_OUT:  33,  TOS: [0, 48, -1]           ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 140,  PC: 119,  AR:  64,  MEM_OUT:  33,  TOS: [10, 0, 48,... +1]    ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 141,  PC: 120,  AR:  64,  MEM_OUT:  33,  TOS: [0, 48, -1]           ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 142,  PC: 121,  AR:  64,  MEM_OUT:  33,  TOS: [0, 48, -1]           ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 143,  PC: 122,  AR:  64,  MEM_OUT:  33,  TOS: [0, 48, -1]           ,    pop        // print_int
  DEBUG    root:machine.py:28 TICK: 144,  PC: 123,  AR:  64,  MEM_OUT:  33,  TOS: [48, -1]              ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 145,  PC: 124,  AR:  64,  MEM_OUT:  33,  TOS: [48, -1]              ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 146,  PC: 125,  AR:  64,  MEM_OUT:  33,  TOS: [48, -1]              ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 0
  DEBUG    root:machine.py:28 TICK: 147,  PC: 126,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 148,  PC: 123,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 149,  PC: 124,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 150,  PC: 127,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 151,  PC: 128,  AR:  64,  MEM_OUT:  33,  TOS: []                    ,    push 10    // (number literal: 10)
  DEBUG    root:machine.py:28 TICK: 152,  PC: 129,  AR:  64,  MEM_OUT:  33,  TOS: [10]                  ,    dup        // print_char
  DEBUG    root:machine.py:28 TICK: 153,  PC: 130,  AR:  64,  MEM_OUT:  33,  TOS: [10, 10]              ,    write 0    // print_char
  DEBUG    root:control_unit.py:88 вывод: 

  DEBUG    root:machine.py:28 TICK: 154,  PC: 131,  AR:  64,  MEM_OUT:  33,  TOS: [10]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 155,  PC: 132,  AR:  64,  MEM_OUT:  33,  TOS: []                    ,    push -1    // print_int
  DEBUG    root:machine.py:28 TICK: 156,  PC: 133,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    push 10    // (number literal: 10)
  DEBUG    root:machine.py:28 TICK: 157,  PC: 134,  AR:  64,  MEM_OUT:  33,  TOS: [10, -1]              ,    push 20    // (number literal: 20)
  DEBUG    root:machine.py:28 TICK: 158,  PC: 135,  AR:  64,  MEM_OUT:  33,  TOS: [20, 10, -1]          ,    push 40    // (number literal: 40)
  DEBUG    root:machine.py:28 TICK: 159,  PC: 136,  AR:  64,  MEM_OUT:  33,  TOS: [40, 20, 10,... +1]   ,    call 1     // call my_function
  DEBUG    root:machine.py:28 TICK: 160,  PC:   1,  AR:  64,  MEM_OUT:  33,  TOS: [40, 20, 10,... +1]   ,    push 65    // call
  DEBUG    root:machine.py:28 TICK: 161,  PC:   2,  AR:  64,  MEM_OUT:  33,  TOS: [65, 40, 20,... +2]   ,    store      // call
  DEBUG    root:machine.py:28 TICK: 163,  PC:   3,  AR:  65,  MEM_OUT:  40,  TOS: [40, 20, 10,... +1]   ,    pop        // call
  DEBUG    root:machine.py:28 TICK: 164,  PC:   4,  AR:  65,  MEM_OUT:  40,  TOS: [20, 10, -1]          ,    push 66    // call
  DEBUG    root:machine.py:28 TICK: 165,  PC:   5,  AR:  65,  MEM_OUT:  40,  TOS: [66, 20, 10,... +1]   ,    store      // call
  DEBUG    root:machine.py:28 TICK: 167,  PC:   6,  AR:  66,  MEM_OUT:  20,  TOS: [20, 10, -1]          ,    pop        // call
  DEBUG    root:machine.py:28 TICK: 168,  PC:   7,  AR:  66,  MEM_OUT:  20,  TOS: [10, -1]              ,    push 67    // call
  DEBUG    root:machine.py:28 TICK: 169,  PC:   8,  AR:  66,  MEM_OUT:  20,  TOS: [67, 10, -1]          ,    store      // call
  DEBUG    root:machine.py:28 TICK: 171,  PC:   9,  AR:  67,  MEM_OUT:  10,  TOS: [10, -1]              ,    pop        // call
  DEBUG    root:machine.py:28 TICK: 172,  PC:  10,  AR:  67,  MEM_OUT:  10,  TOS: [-1]                  ,    push 67    // (variable: x)
  DEBUG    root:machine.py:28 TICK: 173,  PC:  11,  AR:  67,  MEM_OUT:  10,  TOS: [67, -1]              ,    load       // (variable: x)
  DEBUG    root:machine.py:28 TICK: 175,  PC:  12,  AR:  67,  MEM_OUT:  10,  TOS: [10, -1]              ,    push 66    // (variable: y)
  DEBUG    root:machine.py:28 TICK: 176,  PC:  13,  AR:  67,  MEM_OUT:  10,  TOS: [66, 10, -1]          ,    load       // (variable: y)
  DEBUG    root:machine.py:28 TICK: 178,  PC:  14,  AR:  66,  MEM_OUT:  20,  TOS: [20, 10, -1]          ,    add        // +
  DEBUG    root:machine.py:28 TICK: 179,  PC:  15,  AR:  66,  MEM_OUT:  20,  TOS: [30, -1]              ,    push 65    // (variable: z)
  DEBUG    root:machine.py:28 TICK: 180,  PC:  16,  AR:  66,  MEM_OUT:  20,  TOS: [65, 30, -1]          ,    load       // (variable: z)
  DEBUG    root:machine.py:28 TICK: 182,  PC:  17,  AR:  65,  MEM_OUT:  40,  TOS: [40, 30, -1]          ,    add        // +
  DEBUG    root:machine.py:28 TICK: 183,  PC:  18,  AR:  65,  MEM_OUT:  40,  TOS: [70, -1]              ,    ret        // ret
  DEBUG    root:machine.py:28 TICK: 184,  PC: 137,  AR:  65,  MEM_OUT:  40,  TOS: [70, -1]              ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 185,  PC: 138,  AR:  65,  MEM_OUT:  40,  TOS: [70, -1]              ,    jump_plus 3 // print_int
  DEBUG    root:machine.py:28 TICK: 186,  PC: 142,  AR:  65,  MEM_OUT:  40,  TOS: [70, -1]              ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 187,  PC: 143,  AR:  65,  MEM_OUT:  40,  TOS: [70, 70, -1]          ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 188,  PC: 144,  AR:  65,  MEM_OUT:  40,  TOS: [10, 70, 70,... +1]   ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 189,  PC: 145,  AR:  65,  MEM_OUT:  40,  TOS: [0, 70, -1]           ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 190,  PC: 146,  AR:  65,  MEM_OUT:  40,  TOS: [48, 0, 70,... +1]    ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 191,  PC: 147,  AR:  65,  MEM_OUT:  40,  TOS: [48, 70, -1]          ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 192,  PC: 148,  AR:  65,  MEM_OUT:  40,  TOS: [70, 48, -1]          ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 193,  PC: 149,  AR:  65,  MEM_OUT:  40,  TOS: [10, 70, 48,... +1]   ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 194,  PC: 150,  AR:  65,  MEM_OUT:  40,  TOS: [7, 48, -1]           ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 195,  PC: 151,  AR:  65,  MEM_OUT:  40,  TOS: [7, 48, -1]           ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 196,  PC: 142,  AR:  65,  MEM_OUT:  40,  TOS: [7, 48, -1]           ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 197,  PC: 143,  AR:  65,  MEM_OUT:  40,  TOS: [7, 7, 48,... +1]     ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 198,  PC: 144,  AR:  65,  MEM_OUT:  40,  TOS: [10, 7, 7,... +2]     ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 199,  PC: 145,  AR:  65,  MEM_OUT:  40,  TOS: [7, 7, 48,... +1]     ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 200,  PC: 146,  AR:  65,  MEM_OUT:  40,  TOS: [48, 7, 7,... +2]     ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 201,  PC: 147,  AR:  65,  MEM_OUT:  40,  TOS: [55, 7, 48,... +1]    ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 202,  PC: 148,  AR:  65,  MEM_OUT:  40,  TOS: [7, 55, 48,... +1]    ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 203,  PC: 149,  AR:  65,  MEM_OUT:  40,  TOS: [10, 7, 55,... +2]    ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 204,  PC: 150,  AR:  65,  MEM_OUT:  40,  TOS: [0, 55, 48,... +1]    ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 205,  PC: 151,  AR:  65,  MEM_OUT:  40,  TOS: [0, 55, 48,... +1]    ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 206,  PC: 152,  AR:  65,  MEM_OUT:  40,  TOS: [0, 55, 48,... +1]    ,    pop        // print_int
  DEBUG    root:machine.py:28 TICK: 207,  PC: 153,  AR:  65,  MEM_OUT:  40,  TOS: [55, 48, -1]          ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 208,  PC: 154,  AR:  65,  MEM_OUT:  40,  TOS: [55, 48, -1]          ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 209,  PC: 155,  AR:  65,  MEM_OUT:  40,  TOS: [55, 48, -1]          ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 7
  DEBUG    root:machine.py:28 TICK: 210,  PC: 156,  AR:  65,  MEM_OUT:  40,  TOS: [48, -1]              ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 211,  PC: 153,  AR:  65,  MEM_OUT:  40,  TOS: [48, -1]              ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 212,  PC: 154,  AR:  65,  MEM_OUT:  40,  TOS: [48, -1]              ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 213,  PC: 155,  AR:  65,  MEM_OUT:  40,  TOS: [48, -1]              ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 0
  DEBUG    root:machine.py:28 TICK: 214,  PC: 156,  AR:  65,  MEM_OUT:  40,  TOS: [-1]                  ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 215,  PC: 153,  AR:  65,  MEM_OUT:  40,  TOS: [-1]                  ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 216,  PC: 154,  AR:  65,  MEM_OUT:  40,  TOS: [-1]                  ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 217,  PC: 157,  AR:  65,  MEM_OUT:  40,  TOS: [-1]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 218,  PC: 158,  AR:  65,  MEM_OUT:  40,  TOS: []                    ,    push 10    // (number literal: 10)
  DEBUG    root:machine.py:28 TICK: 219,  PC: 159,  AR:  65,  MEM_OUT:  40,  TOS: [10]                  ,    dup        // print_char
  DEBUG    root:machine.py:28 TICK: 220,  PC: 160,  AR:  65,  MEM_OUT:  40,  TOS: [10, 10]              ,    write 0    // print_char
  DEBUG    root:control_unit.py:88 вывод: 

  DEBUG    root:machine.py:28 TICK: 221,  PC: 161,  AR:  65,  MEM_OUT:  40,  TOS: [10]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 222,  PC: 162,  AR:  65,  MEM_OUT:  40,  TOS: []                    ,    push -1    // print_int
  DEBUG    root:machine.py:28 TICK: 223,  PC: 163,  AR:  65,  MEM_OUT:  40,  TOS: [-1]                  ,    push 64    // (variable: a)
  DEBUG    root:machine.py:28 TICK: 224,  PC: 164,  AR:  65,  MEM_OUT:  40,  TOS: [64, -1]              ,    load       // (variable: a)
  DEBUG    root:machine.py:28 TICK: 226,  PC: 165,  AR:  64,  MEM_OUT:  33,  TOS: [33, -1]              ,    push 54    // (number literal: 54)
  DEBUG    root:machine.py:28 TICK: 227,  PC: 166,  AR:  64,  MEM_OUT:  33,  TOS: [54, 33, -1]          ,    add        // +
  DEBUG    root:machine.py:28 TICK: 228,  PC: 167,  AR:  64,  MEM_OUT:  33,  TOS: [87, -1]              ,    push 3     // (number literal: 3)
  DEBUG    root:machine.py:28 TICK: 229,  PC: 168,  AR:  64,  MEM_OUT:  33,  TOS: [3, 87, -1]           ,    add        // +
  DEBUG    root:machine.py:28 TICK: 230,  PC: 169,  AR:  64,  MEM_OUT:  33,  TOS: [90, -1]              ,    push 6     // (number literal: 6)
  DEBUG    root:machine.py:28 TICK: 231,  PC: 170,  AR:  64,  MEM_OUT:  33,  TOS: [6, 90, -1]           ,    add        // +
  DEBUG    root:machine.py:28 TICK: 232,  PC: 171,  AR:  64,  MEM_OUT:  33,  TOS: [96, -1]              ,    push -999  // (number literal: -999)
  DEBUG    root:machine.py:28 TICK: 233,  PC: 172,  AR:  64,  MEM_OUT:  33,  TOS: [-999, 96, -1]        ,    add        // +
  DEBUG    root:machine.py:28 TICK: 234,  PC: 173,  AR:  64,  MEM_OUT:  33,  TOS: [-903, -1]            ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 235,  PC: 174,  AR:  64,  MEM_OUT:  33,  TOS: [-903, -1]            ,    jump_plus 3 // print_int
  DEBUG    root:machine.py:28 TICK: 236,  PC: 175,  AR:  64,  MEM_OUT:  33,  TOS: [-903, -1]            ,    neg        // print_int
  DEBUG    root:machine.py:28 TICK: 237,  PC: 176,  AR:  64,  MEM_OUT:  33,  TOS: [903, -1]             ,    push 45    // print_int
  DEBUG    root:machine.py:28 TICK: 238,  PC: 177,  AR:  64,  MEM_OUT:  33,  TOS: [45, 903, -1]         ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: -
  DEBUG    root:machine.py:28 TICK: 239,  PC: 178,  AR:  64,  MEM_OUT:  33,  TOS: [903, -1]             ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 240,  PC: 179,  AR:  64,  MEM_OUT:  33,  TOS: [903, 903, -1]        ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 241,  PC: 180,  AR:  64,  MEM_OUT:  33,  TOS: [10, 903, 903,... +1] ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 242,  PC: 181,  AR:  64,  MEM_OUT:  33,  TOS: [3, 903, -1]          ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 243,  PC: 182,  AR:  64,  MEM_OUT:  33,  TOS: [48, 3, 903,... +1]   ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 244,  PC: 183,  AR:  64,  MEM_OUT:  33,  TOS: [51, 903, -1]         ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 245,  PC: 184,  AR:  64,  MEM_OUT:  33,  TOS: [903, 51, -1]         ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 246,  PC: 185,  AR:  64,  MEM_OUT:  33,  TOS: [10, 903, 51,... +1]  ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 247,  PC: 186,  AR:  64,  MEM_OUT:  33,  TOS: [90, 51, -1]          ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 248,  PC: 187,  AR:  64,  MEM_OUT:  33,  TOS: [90, 51, -1]          ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 249,  PC: 178,  AR:  64,  MEM_OUT:  33,  TOS: [90, 51, -1]          ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 250,  PC: 179,  AR:  64,  MEM_OUT:  33,  TOS: [90, 90, 51,... +1]   ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 251,  PC: 180,  AR:  64,  MEM_OUT:  33,  TOS: [10, 90, 90,... +2]   ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 252,  PC: 181,  AR:  64,  MEM_OUT:  33,  TOS: [0, 90, 51,... +1]    ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 253,  PC: 182,  AR:  64,  MEM_OUT:  33,  TOS: [48, 0, 90,... +2]    ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 254,  PC: 183,  AR:  64,  MEM_OUT:  33,  TOS: [48, 90, 51,... +1]   ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 255,  PC: 184,  AR:  64,  MEM_OUT:  33,  TOS: [90, 48, 51,... +1]   ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 256,  PC: 185,  AR:  64,  MEM_OUT:  33,  TOS: [10, 90, 48,... +2]   ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 257,  PC: 186,  AR:  64,  MEM_OUT:  33,  TOS: [9, 48, 51,... +1]    ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 258,  PC: 187,  AR:  64,  MEM_OUT:  33,  TOS: [9, 48, 51,... +1]    ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 259,  PC: 178,  AR:  64,  MEM_OUT:  33,  TOS: [9, 48, 51,... +1]    ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 260,  PC: 179,  AR:  64,  MEM_OUT:  33,  TOS: [9, 9, 48,... +2]     ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 261,  PC: 180,  AR:  64,  MEM_OUT:  33,  TOS: [10, 9, 9,... +3]     ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 262,  PC: 181,  AR:  64,  MEM_OUT:  33,  TOS: [9, 9, 48,... +2]     ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 263,  PC: 182,  AR:  64,  MEM_OUT:  33,  TOS: [48, 9, 9,... +3]     ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 264,  PC: 183,  AR:  64,  MEM_OUT:  33,  TOS: [57, 9, 48,... +2]    ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 265,  PC: 184,  AR:  64,  MEM_OUT:  33,  TOS: [9, 57, 48,... +2]    ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 266,  PC: 185,  AR:  64,  MEM_OUT:  33,  TOS: [10, 9, 57,... +3]    ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 267,  PC: 186,  AR:  64,  MEM_OUT:  33,  TOS: [0, 57, 48,... +2]    ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 268,  PC: 187,  AR:  64,  MEM_OUT:  33,  TOS: [0, 57, 48,... +2]    ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 269,  PC: 188,  AR:  64,  MEM_OUT:  33,  TOS: [0, 57, 48,... +2]    ,    pop        // print_int
  DEBUG    root:machine.py:28 TICK: 270,  PC: 189,  AR:  64,  MEM_OUT:  33,  TOS: [57, 48, 51,... +1]   ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 271,  PC: 190,  AR:  64,  MEM_OUT:  33,  TOS: [57, 48, 51,... +1]   ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 272,  PC: 191,  AR:  64,  MEM_OUT:  33,  TOS: [57, 48, 51,... +1]   ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 9
  DEBUG    root:machine.py:28 TICK: 273,  PC: 192,  AR:  64,  MEM_OUT:  33,  TOS: [48, 51, -1]          ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 274,  PC: 189,  AR:  64,  MEM_OUT:  33,  TOS: [48, 51, -1]          ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 275,  PC: 190,  AR:  64,  MEM_OUT:  33,  TOS: [48, 51, -1]          ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 276,  PC: 191,  AR:  64,  MEM_OUT:  33,  TOS: [48, 51, -1]          ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 0
  DEBUG    root:machine.py:28 TICK: 277,  PC: 192,  AR:  64,  MEM_OUT:  33,  TOS: [51, -1]              ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 278,  PC: 189,  AR:  64,  MEM_OUT:  33,  TOS: [51, -1]              ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 279,  PC: 190,  AR:  64,  MEM_OUT:  33,  TOS: [51, -1]              ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 280,  PC: 191,  AR:  64,  MEM_OUT:  33,  TOS: [51, -1]              ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 3
  DEBUG    root:machine.py:28 TICK: 281,  PC: 192,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 282,  PC: 189,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 283,  PC: 190,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 284,  PC: 193,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 285,  PC: 194,  AR:  64,  MEM_OUT:  33,  TOS: []                    ,    push 10    // (number literal: 10)
  DEBUG    root:machine.py:28 TICK: 286,  PC: 195,  AR:  64,  MEM_OUT:  33,  TOS: [10]                  ,    dup        // print_char
  DEBUG    root:machine.py:28 TICK: 287,  PC: 196,  AR:  64,  MEM_OUT:  33,  TOS: [10, 10]              ,    write 0    // print_char
  DEBUG    root:control_unit.py:88 вывод: 

  DEBUG    root:machine.py:28 TICK: 288,  PC: 197,  AR:  64,  MEM_OUT:  33,  TOS: [10]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 289,  PC: 198,  AR:  64,  MEM_OUT:  33,  TOS: []                    ,    push -1    // print_int
  DEBUG    root:machine.py:28 TICK: 290,  PC: 199,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    push 78    // (number literal: 78)
  DEBUG    root:machine.py:28 TICK: 291,  PC: 200,  AR:  64,  MEM_OUT:  33,  TOS: [78, -1]              ,    push 64    // (variable: a)
  DEBUG    root:machine.py:28 TICK: 292,  PC: 201,  AR:  64,  MEM_OUT:  33,  TOS: [64, 78, -1]          ,    load       // (variable: a)
  DEBUG    root:machine.py:28 TICK: 294,  PC: 202,  AR:  64,  MEM_OUT:  33,  TOS: [33, 78, -1]          ,    sub        // -
  DEBUG    root:machine.py:28 TICK: 295,  PC: 203,  AR:  64,  MEM_OUT:  33,  TOS: [45, -1]              ,    push 98    // (number literal: 98)
  DEBUG    root:machine.py:28 TICK: 296,  PC: 204,  AR:  64,  MEM_OUT:  33,  TOS: [98, 45, -1]          ,    sub        // -
  DEBUG    root:machine.py:28 TICK: 297,  PC: 205,  AR:  64,  MEM_OUT:  33,  TOS: [-53, -1]             ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 298,  PC: 206,  AR:  64,  MEM_OUT:  33,  TOS: [-53, -1]             ,    jump_plus 3 // print_int
  DEBUG    root:machine.py:28 TICK: 299,  PC: 207,  AR:  64,  MEM_OUT:  33,  TOS: [-53, -1]             ,    neg        // print_int
  DEBUG    root:machine.py:28 TICK: 300,  PC: 208,  AR:  64,  MEM_OUT:  33,  TOS: [53, -1]              ,    push 45    // print_int
  DEBUG    root:machine.py:28 TICK: 301,  PC: 209,  AR:  64,  MEM_OUT:  33,  TOS: [45, 53, -1]          ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: -
  DEBUG    root:machine.py:28 TICK: 302,  PC: 210,  AR:  64,  MEM_OUT:  33,  TOS: [53, -1]              ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 303,  PC: 211,  AR:  64,  MEM_OUT:  33,  TOS: [53, 53, -1]          ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 304,  PC: 212,  AR:  64,  MEM_OUT:  33,  TOS: [10, 53, 53,... +1]   ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 305,  PC: 213,  AR:  64,  MEM_OUT:  33,  TOS: [3, 53, -1]           ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 306,  PC: 214,  AR:  64,  MEM_OUT:  33,  TOS: [48, 3, 53,... +1]    ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 307,  PC: 215,  AR:  64,  MEM_OUT:  33,  TOS: [51, 53, -1]          ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 308,  PC: 216,  AR:  64,  MEM_OUT:  33,  TOS: [53, 51, -1]          ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 309,  PC: 217,  AR:  64,  MEM_OUT:  33,  TOS: [10, 53, 51,... +1]   ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 310,  PC: 218,  AR:  64,  MEM_OUT:  33,  TOS: [5, 51, -1]           ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 311,  PC: 219,  AR:  64,  MEM_OUT:  33,  TOS: [5, 51, -1]           ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 312,  PC: 210,  AR:  64,  MEM_OUT:  33,  TOS: [5, 51, -1]           ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 313,  PC: 211,  AR:  64,  MEM_OUT:  33,  TOS: [5, 5, 51,... +1]     ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 314,  PC: 212,  AR:  64,  MEM_OUT:  33,  TOS: [10, 5, 5,... +2]     ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 315,  PC: 213,  AR:  64,  MEM_OUT:  33,  TOS: [5, 5, 51,... +1]     ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 316,  PC: 214,  AR:  64,  MEM_OUT:  33,  TOS: [48, 5, 5,... +2]     ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 317,  PC: 215,  AR:  64,  MEM_OUT:  33,  TOS: [53, 5, 51,... +1]    ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 318,  PC: 216,  AR:  64,  MEM_OUT:  33,  TOS: [5, 53, 51,... +1]    ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 319,  PC: 217,  AR:  64,  MEM_OUT:  33,  TOS: [10, 5, 53,... +2]    ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 320,  PC: 218,  AR:  64,  MEM_OUT:  33,  TOS: [0, 53, 51,... +1]    ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 321,  PC: 219,  AR:  64,  MEM_OUT:  33,  TOS: [0, 53, 51,... +1]    ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 322,  PC: 220,  AR:  64,  MEM_OUT:  33,  TOS: [0, 53, 51,... +1]    ,    pop        // print_int
  DEBUG    root:machine.py:28 TICK: 323,  PC: 221,  AR:  64,  MEM_OUT:  33,  TOS: [53, 51, -1]          ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 324,  PC: 222,  AR:  64,  MEM_OUT:  33,  TOS: [53, 51, -1]          ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 325,  PC: 223,  AR:  64,  MEM_OUT:  33,  TOS: [53, 51, -1]          ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 5
  DEBUG    root:machine.py:28 TICK: 326,  PC: 224,  AR:  64,  MEM_OUT:  33,  TOS: [51, -1]              ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 327,  PC: 221,  AR:  64,  MEM_OUT:  33,  TOS: [51, -1]              ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 328,  PC: 222,  AR:  64,  MEM_OUT:  33,  TOS: [51, -1]              ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 329,  PC: 223,  AR:  64,  MEM_OUT:  33,  TOS: [51, -1]              ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 3
  DEBUG    root:machine.py:28 TICK: 330,  PC: 224,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 331,  PC: 221,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 332,  PC: 222,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 333,  PC: 225,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 334,  PC: 226,  AR:  64,  MEM_OUT:  33,  TOS: []                    ,    push 10    // (number literal: 10)
  DEBUG    root:machine.py:28 TICK: 335,  PC: 227,  AR:  64,  MEM_OUT:  33,  TOS: [10]                  ,    dup        // print_char
  DEBUG    root:machine.py:28 TICK: 336,  PC: 228,  AR:  64,  MEM_OUT:  33,  TOS: [10, 10]              ,    write 0    // print_char
  DEBUG    root:control_unit.py:88 вывод: 

  DEBUG    root:machine.py:28 TICK: 337,  PC: 229,  AR:  64,  MEM_OUT:  33,  TOS: [10]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 338,  PC: 230,  AR:  64,  MEM_OUT:  33,  TOS: []                    ,    push -1    // print_int
  DEBUG    root:machine.py:28 TICK: 339,  PC: 231,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    push 1     // *
  DEBUG    root:machine.py:28 TICK: 340,  PC: 232,  AR:  64,  MEM_OUT:  33,  TOS: [1, -1]               ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 341,  PC: 233,  AR:  64,  MEM_OUT:  33,  TOS: [1, -1]               ,    jump_plus 3 // print_int
  DEBUG    root:machine.py:28 TICK: 342,  PC: 237,  AR:  64,  MEM_OUT:  33,  TOS: [1, -1]               ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 343,  PC: 238,  AR:  64,  MEM_OUT:  33,  TOS: [1, 1, -1]            ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 344,  PC: 239,  AR:  64,  MEM_OUT:  33,  TOS: [10, 1, 1,... +1]     ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 345,  PC: 240,  AR:  64,  MEM_OUT:  33,  TOS: [1, 1, -1]            ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 346,  PC: 241,  AR:  64,  MEM_OUT:  33,  TOS: [48, 1, 1,... +1]     ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 347,  PC: 242,  AR:  64,  MEM_OUT:  33,  TOS: [49, 1, -1]           ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 348,  PC: 243,  AR:  64,  MEM_OUT:  33,  TOS: [1, 49, -1]           ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 349,  PC: 244,  AR:  64,  MEM_OUT:  33,  TOS: [10, 1, 49,... +1]    ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 350,  PC: 245,  AR:  64,  MEM_OUT:  33,  TOS: [0, 49, -1]           ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 351,  PC: 246,  AR:  64,  MEM_OUT:  33,  TOS: [0, 49, -1]           ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 352,  PC: 247,  AR:  64,  MEM_OUT:  33,  TOS: [0, 49, -1]           ,    pop        // print_int
  DEBUG    root:machine.py:28 TICK: 353,  PC: 248,  AR:  64,  MEM_OUT:  33,  TOS: [49, -1]              ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 354,  PC: 249,  AR:  64,  MEM_OUT:  33,  TOS: [49, -1]              ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 355,  PC: 250,  AR:  64,  MEM_OUT:  33,  TOS: [49, -1]              ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 1
  DEBUG    root:machine.py:28 TICK: 356,  PC: 251,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 357,  PC: 248,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 358,  PC: 249,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 359,  PC: 252,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 360,  PC: 253,  AR:  64,  MEM_OUT:  33,  TOS: []                    ,    push 10    // (number literal: 10)
  DEBUG    root:machine.py:28 TICK: 361,  PC: 254,  AR:  64,  MEM_OUT:  33,  TOS: [10]                  ,    dup        // print_char
  DEBUG    root:machine.py:28 TICK: 362,  PC: 255,  AR:  64,  MEM_OUT:  33,  TOS: [10, 10]              ,    write 0    // print_char
  DEBUG    root:control_unit.py:88 вывод: 

  DEBUG    root:machine.py:28 TICK: 363,  PC: 256,  AR:  64,  MEM_OUT:  33,  TOS: [10]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 364,  PC: 257,  AR:  64,  MEM_OUT:  33,  TOS: []                    ,    push -1    // print_int
  DEBUG    root:machine.py:28 TICK: 365,  PC: 258,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    push 45    // (number literal: 45)
  DEBUG    root:machine.py:28 TICK: 366,  PC: 259,  AR:  64,  MEM_OUT:  33,  TOS: [45, -1]              ,    push 2     // (number literal: 2)
  DEBUG    root:machine.py:28 TICK: 367,  PC: 260,  AR:  64,  MEM_OUT:  33,  TOS: [2, 45, -1]           ,    div        // /
  DEBUG    root:machine.py:28 TICK: 368,  PC: 261,  AR:  64,  MEM_OUT:  33,  TOS: [22, -1]              ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 369,  PC: 262,  AR:  64,  MEM_OUT:  33,  TOS: [22, -1]              ,    jump_plus 3 // print_int
  DEBUG    root:machine.py:28 TICK: 370,  PC: 266,  AR:  64,  MEM_OUT:  33,  TOS: [22, -1]              ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 371,  PC: 267,  AR:  64,  MEM_OUT:  33,  TOS: [22, 22, -1]          ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 372,  PC: 268,  AR:  64,  MEM_OUT:  33,  TOS: [10, 22, 22,... +1]   ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 373,  PC: 269,  AR:  64,  MEM_OUT:  33,  TOS: [2, 22, -1]           ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 374,  PC: 270,  AR:  64,  MEM_OUT:  33,  TOS: [48, 2, 22,... +1]    ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 375,  PC: 271,  AR:  64,  MEM_OUT:  33,  TOS: [50, 22, -1]          ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 376,  PC: 272,  AR:  64,  MEM_OUT:  33,  TOS: [22, 50, -1]          ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 377,  PC: 273,  AR:  64,  MEM_OUT:  33,  TOS: [10, 22, 50,... +1]   ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 378,  PC: 274,  AR:  64,  MEM_OUT:  33,  TOS: [2, 50, -1]           ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 379,  PC: 275,  AR:  64,  MEM_OUT:  33,  TOS: [2, 50, -1]           ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 380,  PC: 266,  AR:  64,  MEM_OUT:  33,  TOS: [2, 50, -1]           ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 381,  PC: 267,  AR:  64,  MEM_OUT:  33,  TOS: [2, 2, 50,... +1]     ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 382,  PC: 268,  AR:  64,  MEM_OUT:  33,  TOS: [10, 2, 2,... +2]     ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 383,  PC: 269,  AR:  64,  MEM_OUT:  33,  TOS: [2, 2, 50,... +1]     ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 384,  PC: 270,  AR:  64,  MEM_OUT:  33,  TOS: [48, 2, 2,... +2]     ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 385,  PC: 271,  AR:  64,  MEM_OUT:  33,  TOS: [50, 2, 50,... +1]    ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 386,  PC: 272,  AR:  64,  MEM_OUT:  33,  TOS: [2, 50, 50,... +1]    ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 387,  PC: 273,  AR:  64,  MEM_OUT:  33,  TOS: [10, 2, 50,... +2]    ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 388,  PC: 274,  AR:  64,  MEM_OUT:  33,  TOS: [0, 50, 50,... +1]    ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 389,  PC: 275,  AR:  64,  MEM_OUT:  33,  TOS: [0, 50, 50,... +1]    ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 390,  PC: 276,  AR:  64,  MEM_OUT:  33,  TOS: [0, 50, 50,... +1]    ,    pop        // print_int
  DEBUG    root:machine.py:28 TICK: 391,  PC: 277,  AR:  64,  MEM_OUT:  33,  TOS: [50, 50, -1]          ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 392,  PC: 278,  AR:  64,  MEM_OUT:  33,  TOS: [50, 50, -1]          ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 393,  PC: 279,  AR:  64,  MEM_OUT:  33,  TOS: [50, 50, -1]          ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 2
  DEBUG    root:machine.py:28 TICK: 394,  PC: 280,  AR:  64,  MEM_OUT:  33,  TOS: [50, -1]              ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 395,  PC: 277,  AR:  64,  MEM_OUT:  33,  TOS: [50, -1]              ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 396,  PC: 278,  AR:  64,  MEM_OUT:  33,  TOS: [50, -1]              ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 397,  PC: 279,  AR:  64,  MEM_OUT:  33,  TOS: [50, -1]              ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 2
  DEBUG    root:machine.py:28 TICK: 398,  PC: 280,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 399,  PC: 277,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 400,  PC: 278,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 401,  PC: 281,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 402,  PC: 282,  AR:  64,  MEM_OUT:  33,  TOS: []                    ,    push 10    // (number literal: 10)
  DEBUG    root:machine.py:28 TICK: 403,  PC: 283,  AR:  64,  MEM_OUT:  33,  TOS: [10]                  ,    dup        // print_char
  DEBUG    root:machine.py:28 TICK: 404,  PC: 284,  AR:  64,  MEM_OUT:  33,  TOS: [10, 10]              ,    write 0    // print_char
  DEBUG    root:control_unit.py:88 вывод: 

  DEBUG    root:machine.py:28 TICK: 405,  PC: 285,  AR:  64,  MEM_OUT:  33,  TOS: [10]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 406,  PC: 286,  AR:  64,  MEM_OUT:  33,  TOS: []                    ,    push -1    // print_int
  DEBUG    root:machine.py:28 TICK: 407,  PC: 287,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    push 10    // (number literal: 10)
  DEBUG    root:machine.py:28 TICK: 408,  PC: 288,  AR:  64,  MEM_OUT:  33,  TOS: [10, -1]              ,    push 3     // (number literal: 3)
  DEBUG    root:machine.py:28 TICK: 409,  PC: 289,  AR:  64,  MEM_OUT:  33,  TOS: [3, 10, -1]           ,    mod        // %
  DEBUG    root:machine.py:28 TICK: 410,  PC: 290,  AR:  64,  MEM_OUT:  33,  TOS: [1, -1]               ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 411,  PC: 291,  AR:  64,  MEM_OUT:  33,  TOS: [1, -1]               ,    jump_plus 3 // print_int
  DEBUG    root:machine.py:28 TICK: 412,  PC: 295,  AR:  64,  MEM_OUT:  33,  TOS: [1, -1]               ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 413,  PC: 296,  AR:  64,  MEM_OUT:  33,  TOS: [1, 1, -1]            ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 414,  PC: 297,  AR:  64,  MEM_OUT:  33,  TOS: [10, 1, 1,... +1]     ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 415,  PC: 298,  AR:  64,  MEM_OUT:  33,  TOS: [1, 1, -1]            ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 416,  PC: 299,  AR:  64,  MEM_OUT:  33,  TOS: [48, 1, 1,... +1]     ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 417,  PC: 300,  AR:  64,  MEM_OUT:  33,  TOS: [49, 1, -1]           ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 418,  PC: 301,  AR:  64,  MEM_OUT:  33,  TOS: [1, 49, -1]           ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 419,  PC: 302,  AR:  64,  MEM_OUT:  33,  TOS: [10, 1, 49,... +1]    ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 420,  PC: 303,  AR:  64,  MEM_OUT:  33,  TOS: [0, 49, -1]           ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 421,  PC: 304,  AR:  64,  MEM_OUT:  33,  TOS: [0, 49, -1]           ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 422,  PC: 305,  AR:  64,  MEM_OUT:  33,  TOS: [0, 49, -1]           ,    pop        // print_int
  DEBUG    root:machine.py:28 TICK: 423,  PC: 306,  AR:  64,  MEM_OUT:  33,  TOS: [49, -1]              ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 424,  PC: 307,  AR:  64,  MEM_OUT:  33,  TOS: [49, -1]              ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 425,  PC: 308,  AR:  64,  MEM_OUT:  33,  TOS: [49, -1]              ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 1
  DEBUG    root:machine.py:28 TICK: 426,  PC: 309,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 427,  PC: 306,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 428,  PC: 307,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 429,  PC: 310,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 430,  PC: 311,  AR:  64,  MEM_OUT:  33,  TOS: []                    ,    push 10    // (number literal: 10)
  DEBUG    root:machine.py:28 TICK: 431,  PC: 312,  AR:  64,  MEM_OUT:  33,  TOS: [10]                  ,    dup        // print_char
  DEBUG    root:machine.py:28 TICK: 432,  PC: 313,  AR:  64,  MEM_OUT:  33,  TOS: [10, 10]              ,    write 0    // print_char
  DEBUG    root:control_unit.py:88 вывод: 

  DEBUG    root:machine.py:28 TICK: 433,  PC: 314,  AR:  64,  MEM_OUT:  33,  TOS: [10]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 434,  PC: 315,  AR:  64,  MEM_OUT:  33,  TOS: []                    ,    push -1    // print_int
  DEBUG    root:machine.py:28 TICK: 435,  PC: 316,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    push 21    // (number literal: 21)
  DEBUG    root:machine.py:28 TICK: 436,  PC: 317,  AR:  64,  MEM_OUT:  33,  TOS: [21, -1]              ,    push 21    // (number literal: 21)
  DEBUG    root:machine.py:28 TICK: 437,  PC: 318,  AR:  64,  MEM_OUT:  33,  TOS: [21, 21, -1]          ,    sub        // =
  DEBUG    root:machine.py:28 TICK: 438,  PC: 319,  AR:  64,  MEM_OUT:  33,  TOS: [0, -1]               ,    flags      // =
  DEBUG    root:machine.py:28 TICK: 439,  PC: 320,  AR:  64,  MEM_OUT:  33,  TOS: [0, -1]               ,    pop        // =
  DEBUG    root:machine.py:28 TICK: 440,  PC: 321,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    jump_zero 2 // =
  DEBUG    root:machine.py:28 TICK: 441,  PC: 324,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    push 1     // =
  DEBUG    root:machine.py:28 TICK: 442,  PC: 325,  AR:  64,  MEM_OUT:  33,  TOS: [1, -1]               ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 443,  PC: 326,  AR:  64,  MEM_OUT:  33,  TOS: [1, -1]               ,    jump_plus 3 // print_int
  DEBUG    root:machine.py:28 TICK: 444,  PC: 330,  AR:  64,  MEM_OUT:  33,  TOS: [1, -1]               ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 445,  PC: 331,  AR:  64,  MEM_OUT:  33,  TOS: [1, 1, -1]            ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 446,  PC: 332,  AR:  64,  MEM_OUT:  33,  TOS: [10, 1, 1,... +1]     ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 447,  PC: 333,  AR:  64,  MEM_OUT:  33,  TOS: [1, 1, -1]            ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 448,  PC: 334,  AR:  64,  MEM_OUT:  33,  TOS: [48, 1, 1,... +1]     ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 449,  PC: 335,  AR:  64,  MEM_OUT:  33,  TOS: [49, 1, -1]           ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 450,  PC: 336,  AR:  64,  MEM_OUT:  33,  TOS: [1, 49, -1]           ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 451,  PC: 337,  AR:  64,  MEM_OUT:  33,  TOS: [10, 1, 49,... +1]    ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 452,  PC: 338,  AR:  64,  MEM_OUT:  33,  TOS: [0, 49, -1]           ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 453,  PC: 339,  AR:  64,  MEM_OUT:  33,  TOS: [0, 49, -1]           ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 454,  PC: 340,  AR:  64,  MEM_OUT:  33,  TOS: [0, 49, -1]           ,    pop        // print_int
  DEBUG    root:machine.py:28 TICK: 455,  PC: 341,  AR:  64,  MEM_OUT:  33,  TOS: [49, -1]              ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 456,  PC: 342,  AR:  64,  MEM_OUT:  33,  TOS: [49, -1]              ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 457,  PC: 343,  AR:  64,  MEM_OUT:  33,  TOS: [49, -1]              ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 1
  DEBUG    root:machine.py:28 TICK: 458,  PC: 344,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 459,  PC: 341,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 460,  PC: 342,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 461,  PC: 345,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 462,  PC: 346,  AR:  64,  MEM_OUT:  33,  TOS: []                    ,    push 10    // (number literal: 10)
  DEBUG    root:machine.py:28 TICK: 463,  PC: 347,  AR:  64,  MEM_OUT:  33,  TOS: [10]                  ,    dup        // print_char
  DEBUG    root:machine.py:28 TICK: 464,  PC: 348,  AR:  64,  MEM_OUT:  33,  TOS: [10, 10]              ,    write 0    // print_char
  DEBUG    root:control_unit.py:88 вывод: 

  DEBUG    root:machine.py:28 TICK: 465,  PC: 349,  AR:  64,  MEM_OUT:  33,  TOS: [10]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 466,  PC: 350,  AR:  64,  MEM_OUT:  33,  TOS: []                    ,    push -1    // print_int
  DEBUG    root:machine.py:28 TICK: 467,  PC: 351,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    push 23    // (number literal: 23)
  DEBUG    root:machine.py:28 TICK: 468,  PC: 352,  AR:  64,  MEM_OUT:  33,  TOS: [23, -1]              ,    push 43    // (number literal: 43)
  DEBUG    root:machine.py:28 TICK: 469,  PC: 353,  AR:  64,  MEM_OUT:  33,  TOS: [43, 23, -1]          ,    swap      
  DEBUG    root:machine.py:28 TICK: 470,  PC: 354,  AR:  64,  MEM_OUT:  33,  TOS: [23, 43, -1]          ,    sub        // >
  DEBUG    root:machine.py:28 TICK: 471,  PC: 355,  AR:  64,  MEM_OUT:  33,  TOS: [20, -1]              ,    flags      // >
  DEBUG    root:machine.py:28 TICK: 472,  PC: 356,  AR:  64,  MEM_OUT:  33,  TOS: [20, -1]              ,    pop        // >
  DEBUG    root:machine.py:28 TICK: 473,  PC: 357,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    jump_minus 2 // >
  DEBUG    root:machine.py:28 TICK: 474,  PC: 358,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    push 0     // >
  DEBUG    root:machine.py:28 TICK: 475,  PC: 359,  AR:  64,  MEM_OUT:  33,  TOS: [0, -1]               ,    jump 1     // >
  DEBUG    root:machine.py:28 TICK: 476,  PC: 361,  AR:  64,  MEM_OUT:  33,  TOS: [0, -1]               ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 477,  PC: 362,  AR:  64,  MEM_OUT:  33,  TOS: [0, -1]               ,    jump_plus 3 // print_int
  DEBUG    root:machine.py:28 TICK: 478,  PC: 366,  AR:  64,  MEM_OUT:  33,  TOS: [0, -1]               ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 479,  PC: 367,  AR:  64,  MEM_OUT:  33,  TOS: [0, 0, -1]            ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 480,  PC: 368,  AR:  64,  MEM_OUT:  33,  TOS: [10, 0, 0,... +1]     ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 481,  PC: 369,  AR:  64,  MEM_OUT:  33,  TOS: [0, 0, -1]            ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 482,  PC: 370,  AR:  64,  MEM_OUT:  33,  TOS: [48, 0, 0,... +1]     ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 483,  PC: 371,  AR:  64,  MEM_OUT:  33,  TOS: [48, 0, -1]           ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 484,  PC: 372,  AR:  64,  MEM_OUT:  33,  TOS: [0, 48, -1]           ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 485,  PC: 373,  AR:  64,  MEM_OUT:  33,  TOS: [10, 0, 48,... +1]    ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 486,  PC: 374,  AR:  64,  MEM_OUT:  33,  TOS: [0, 48, -1]           ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 487,  PC: 375,  AR:  64,  MEM_OUT:  33,  TOS: [0, 48, -1]           ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 488,  PC: 376,  AR:  64,  MEM_OUT:  33,  TOS: [0, 48, -1]           ,    pop        // print_int
  DEBUG    root:machine.py:28 TICK: 489,  PC: 377,  AR:  64,  MEM_OUT:  33,  TOS: [48, -1]              ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 490,  PC: 378,  AR:  64,  MEM_OUT:  33,  TOS: [48, -1]              ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 491,  PC: 379,  AR:  64,  MEM_OUT:  33,  TOS: [48, -1]              ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 0
  DEBUG    root:machine.py:28 TICK: 492,  PC: 380,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 493,  PC: 377,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 494,  PC: 378,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 495,  PC: 381,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 496,  PC: 382,  AR:  64,  MEM_OUT:  33,  TOS: []                    ,    push 10    // (number literal: 10)
  DEBUG    root:machine.py:28 TICK: 497,  PC: 383,  AR:  64,  MEM_OUT:  33,  TOS: [10]                  ,    dup        // print_char
  DEBUG    root:machine.py:28 TICK: 498,  PC: 384,  AR:  64,  MEM_OUT:  33,  TOS: [10, 10]              ,    write 0    // print_char
  DEBUG    root:control_unit.py:88 вывод: 

  DEBUG    root:machine.py:28 TICK: 499,  PC: 385,  AR:  64,  MEM_OUT:  33,  TOS: [10]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 500,  PC: 386,  AR:  64,  MEM_OUT:  33,  TOS: []                    ,    push -1    // print_int
  DEBUG    root:machine.py:28 TICK: 501,  PC: 387,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    push 234   // (number literal: 234)
  DEBUG    root:machine.py:28 TICK: 502,  PC: 388,  AR:  64,  MEM_OUT:  33,  TOS: [234, -1]             ,    push 234   // (number literal: 234)
  DEBUG    root:machine.py:28 TICK: 503,  PC: 389,  AR:  64,  MEM_OUT:  33,  TOS: [234, 234, -1]        ,    sub        // <
  DEBUG    root:machine.py:28 TICK: 504,  PC: 390,  AR:  64,  MEM_OUT:  33,  TOS: [0, -1]               ,    flags      // <
  DEBUG    root:machine.py:28 TICK: 505,  PC: 391,  AR:  64,  MEM_OUT:  33,  TOS: [0, -1]               ,    pop        // <
  DEBUG    root:machine.py:28 TICK: 506,  PC: 392,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    jump_minus 2 // <
  DEBUG    root:machine.py:28 TICK: 507,  PC: 393,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    push 0     // <
  DEBUG    root:machine.py:28 TICK: 508,  PC: 394,  AR:  64,  MEM_OUT:  33,  TOS: [0, -1]               ,    jump 1     // <
  DEBUG    root:machine.py:28 TICK: 509,  PC: 396,  AR:  64,  MEM_OUT:  33,  TOS: [0, -1]               ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 510,  PC: 397,  AR:  64,  MEM_OUT:  33,  TOS: [0, -1]               ,    jump_plus 3 // print_int
  DEBUG    root:machine.py:28 TICK: 511,  PC: 401,  AR:  64,  MEM_OUT:  33,  TOS: [0, -1]               ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 512,  PC: 402,  AR:  64,  MEM_OUT:  33,  TOS: [0, 0, -1]            ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 513,  PC: 403,  AR:  64,  MEM_OUT:  33,  TOS: [10, 0, 0,... +1]     ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 514,  PC: 404,  AR:  64,  MEM_OUT:  33,  TOS: [0, 0, -1]            ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 515,  PC: 405,  AR:  64,  MEM_OUT:  33,  TOS: [48, 0, 0,... +1]     ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 516,  PC: 406,  AR:  64,  MEM_OUT:  33,  TOS: [48, 0, -1]           ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 517,  PC: 407,  AR:  64,  MEM_OUT:  33,  TOS: [0, 48, -1]           ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 518,  PC: 408,  AR:  64,  MEM_OUT:  33,  TOS: [10, 0, 48,... +1]    ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 519,  PC: 409,  AR:  64,  MEM_OUT:  33,  TOS: [0, 48, -1]           ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 520,  PC: 410,  AR:  64,  MEM_OUT:  33,  TOS: [0, 48, -1]           ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 521,  PC: 411,  AR:  64,  MEM_OUT:  33,  TOS: [0, 48, -1]           ,    pop        // print_int
  DEBUG    root:machine.py:28 TICK: 522,  PC: 412,  AR:  64,  MEM_OUT:  33,  TOS: [48, -1]              ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 523,  PC: 413,  AR:  64,  MEM_OUT:  33,  TOS: [48, -1]              ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 524,  PC: 414,  AR:  64,  MEM_OUT:  33,  TOS: [48, -1]              ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 0
  DEBUG    root:machine.py:28 TICK: 525,  PC: 415,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 526,  PC: 412,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 527,  PC: 413,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 528,  PC: 416,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 529,  PC: 417,  AR:  64,  MEM_OUT:  33,  TOS: []                    ,    push 10    // (number literal: 10)
  DEBUG    root:machine.py:28 TICK: 530,  PC: 418,  AR:  64,  MEM_OUT:  33,  TOS: [10]                  ,    dup        // print_char
  DEBUG    root:machine.py:28 TICK: 531,  PC: 419,  AR:  64,  MEM_OUT:  33,  TOS: [10, 10]              ,    write 0    // print_char
  DEBUG    root:control_unit.py:88 вывод: 

  DEBUG    root:machine.py:28 TICK: 532,  PC: 420,  AR:  64,  MEM_OUT:  33,  TOS: [10]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 533,  PC: 421,  AR:  64,  MEM_OUT:  33,  TOS: []                    ,    push -1    // print_int
  DEBUG    root:machine.py:28 TICK: 534,  PC: 422,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    push 1     // (number literal: 1)
  DEBUG    root:machine.py:28 TICK: 535,  PC: 423,  AR:  64,  MEM_OUT:  33,  TOS: [1, -1]               ,    flags      // if
  DEBUG    root:machine.py:28 TICK: 536,  PC: 424,  AR:  64,  MEM_OUT:  33,  TOS: [1, -1]               ,    pop        // if
  DEBUG    root:machine.py:28 TICK: 537,  PC: 425,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    jump_zero 2 // if
  DEBUG    root:machine.py:28 TICK: 538,  PC: 426,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    push 3     // (number literal: 3)
  DEBUG    root:machine.py:28 TICK: 539,  PC: 427,  AR:  64,  MEM_OUT:  33,  TOS: [3, -1]               ,    jump 1     // if
  DEBUG    root:machine.py:28 TICK: 540,  PC: 429,  AR:  64,  MEM_OUT:  33,  TOS: [3, -1]               ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 541,  PC: 430,  AR:  64,  MEM_OUT:  33,  TOS: [3, -1]               ,    jump_plus 3 // print_int
  DEBUG    root:machine.py:28 TICK: 542,  PC: 434,  AR:  64,  MEM_OUT:  33,  TOS: [3, -1]               ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 543,  PC: 435,  AR:  64,  MEM_OUT:  33,  TOS: [3, 3, -1]            ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 544,  PC: 436,  AR:  64,  MEM_OUT:  33,  TOS: [10, 3, 3,... +1]     ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 545,  PC: 437,  AR:  64,  MEM_OUT:  33,  TOS: [3, 3, -1]            ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 546,  PC: 438,  AR:  64,  MEM_OUT:  33,  TOS: [48, 3, 3,... +1]     ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 547,  PC: 439,  AR:  64,  MEM_OUT:  33,  TOS: [51, 3, -1]           ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 548,  PC: 440,  AR:  64,  MEM_OUT:  33,  TOS: [3, 51, -1]           ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 549,  PC: 441,  AR:  64,  MEM_OUT:  33,  TOS: [10, 3, 51,... +1]    ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 550,  PC: 442,  AR:  64,  MEM_OUT:  33,  TOS: [0, 51, -1]           ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 551,  PC: 443,  AR:  64,  MEM_OUT:  33,  TOS: [0, 51, -1]           ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 552,  PC: 444,  AR:  64,  MEM_OUT:  33,  TOS: [0, 51, -1]           ,    pop        // print_int
  DEBUG    root:machine.py:28 TICK: 553,  PC: 445,  AR:  64,  MEM_OUT:  33,  TOS: [51, -1]              ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 554,  PC: 446,  AR:  64,  MEM_OUT:  33,  TOS: [51, -1]              ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 555,  PC: 447,  AR:  64,  MEM_OUT:  33,  TOS: [51, -1]              ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 3
  DEBUG    root:machine.py:28 TICK: 556,  PC: 448,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 557,  PC: 445,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 558,  PC: 446,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 559,  PC: 449,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 560,  PC: 450,  AR:  64,  MEM_OUT:  33,  TOS: []                    ,    push 10    // (number literal: 10)
  DEBUG    root:machine.py:28 TICK: 561,  PC: 451,  AR:  64,  MEM_OUT:  33,  TOS: [10]                  ,    dup        // print_char
  DEBUG    root:machine.py:28 TICK: 562,  PC: 452,  AR:  64,  MEM_OUT:  33,  TOS: [10, 10]              ,    write 0    // print_char
  DEBUG    root:control_unit.py:88 вывод: 

  DEBUG    root:machine.py:28 TICK: 563,  PC: 453,  AR:  64,  MEM_OUT:  33,  TOS: [10]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 564,  PC: 454,  AR:  64,  MEM_OUT:  33,  TOS: []                    ,    push -1    // print_int
  DEBUG    root:machine.py:28 TICK: 565,  PC: 455,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    push 12    // (number literal: 12)
  DEBUG    root:machine.py:28 TICK: 566,  PC: 456,  AR:  64,  MEM_OUT:  33,  TOS: [12, -1]              ,    push 23    // (number literal: 23)
  DEBUG    root:machine.py:28 TICK: 567,  PC: 457,  AR:  64,  MEM_OUT:  33,  TOS: [23, 12, -1]          ,    and        // and
  DEBUG    root:machine.py:28 TICK: 568,  PC: 458,  AR:  64,  MEM_OUT:  33,  TOS: [23, -1]              ,    push 88    // (number literal: 88)
  DEBUG    root:machine.py:28 TICK: 569,  PC: 459,  AR:  64,  MEM_OUT:  33,  TOS: [88, 23, -1]          ,    and        // and
  DEBUG    root:machine.py:28 TICK: 570,  PC: 460,  AR:  64,  MEM_OUT:  33,  TOS: [88, -1]              ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 571,  PC: 461,  AR:  64,  MEM_OUT:  33,  TOS: [88, -1]              ,    jump_plus 3 // print_int
  DEBUG    root:machine.py:28 TICK: 572,  PC: 465,  AR:  64,  MEM_OUT:  33,  TOS: [88, -1]              ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 573,  PC: 466,  AR:  64,  MEM_OUT:  33,  TOS: [88, 88, -1]          ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 574,  PC: 467,  AR:  64,  MEM_OUT:  33,  TOS: [10, 88, 88,... +1]   ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 575,  PC: 468,  AR:  64,  MEM_OUT:  33,  TOS: [8, 88, -1]           ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 576,  PC: 469,  AR:  64,  MEM_OUT:  33,  TOS: [48, 8, 88,... +1]    ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 577,  PC: 470,  AR:  64,  MEM_OUT:  33,  TOS: [56, 88, -1]          ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 578,  PC: 471,  AR:  64,  MEM_OUT:  33,  TOS: [88, 56, -1]          ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 579,  PC: 472,  AR:  64,  MEM_OUT:  33,  TOS: [10, 88, 56,... +1]   ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 580,  PC: 473,  AR:  64,  MEM_OUT:  33,  TOS: [8, 56, -1]           ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 581,  PC: 474,  AR:  64,  MEM_OUT:  33,  TOS: [8, 56, -1]           ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 582,  PC: 465,  AR:  64,  MEM_OUT:  33,  TOS: [8, 56, -1]           ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 583,  PC: 466,  AR:  64,  MEM_OUT:  33,  TOS: [8, 8, 56,... +1]     ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 584,  PC: 467,  AR:  64,  MEM_OUT:  33,  TOS: [10, 8, 8,... +2]     ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 585,  PC: 468,  AR:  64,  MEM_OUT:  33,  TOS: [8, 8, 56,... +1]     ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 586,  PC: 469,  AR:  64,  MEM_OUT:  33,  TOS: [48, 8, 8,... +2]     ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 587,  PC: 470,  AR:  64,  MEM_OUT:  33,  TOS: [56, 8, 56,... +1]    ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 588,  PC: 471,  AR:  64,  MEM_OUT:  33,  TOS: [8, 56, 56,... +1]    ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 589,  PC: 472,  AR:  64,  MEM_OUT:  33,  TOS: [10, 8, 56,... +2]    ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 590,  PC: 473,  AR:  64,  MEM_OUT:  33,  TOS: [0, 56, 56,... +1]    ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 591,  PC: 474,  AR:  64,  MEM_OUT:  33,  TOS: [0, 56, 56,... +1]    ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 592,  PC: 475,  AR:  64,  MEM_OUT:  33,  TOS: [0, 56, 56,... +1]    ,    pop        // print_int
  DEBUG    root:machine.py:28 TICK: 593,  PC: 476,  AR:  64,  MEM_OUT:  33,  TOS: [56, 56, -1]          ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 594,  PC: 477,  AR:  64,  MEM_OUT:  33,  TOS: [56, 56, -1]          ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 595,  PC: 478,  AR:  64,  MEM_OUT:  33,  TOS: [56, 56, -1]          ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 8
  DEBUG    root:machine.py:28 TICK: 596,  PC: 479,  AR:  64,  MEM_OUT:  33,  TOS: [56, -1]              ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 597,  PC: 476,  AR:  64,  MEM_OUT:  33,  TOS: [56, -1]              ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 598,  PC: 477,  AR:  64,  MEM_OUT:  33,  TOS: [56, -1]              ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 599,  PC: 478,  AR:  64,  MEM_OUT:  33,  TOS: [56, -1]              ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 8
  DEBUG    root:machine.py:28 TICK: 600,  PC: 479,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 601,  PC: 476,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 602,  PC: 477,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 603,  PC: 480,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 604,  PC: 481,  AR:  64,  MEM_OUT:  33,  TOS: []                    ,    push 10    // (number literal: 10)
  DEBUG    root:machine.py:28 TICK: 605,  PC: 482,  AR:  64,  MEM_OUT:  33,  TOS: [10]                  ,    dup        // print_char
  DEBUG    root:machine.py:28 TICK: 606,  PC: 483,  AR:  64,  MEM_OUT:  33,  TOS: [10, 10]              ,    write 0    // print_char
  DEBUG    root:control_unit.py:88 вывод: 

  DEBUG    root:machine.py:28 TICK: 607,  PC: 484,  AR:  64,  MEM_OUT:  33,  TOS: [10]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 608,  PC: 485,  AR:  64,  MEM_OUT:  33,  TOS: []                    ,    push -1    // print_int
  DEBUG    root:machine.py:28 TICK: 609,  PC: 486,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    push 234   // (number literal: 234)
  DEBUG    root:machine.py:28 TICK: 610,  PC: 487,  AR:  64,  MEM_OUT:  33,  TOS: [234, -1]             ,    push 34    // (number literal: 34)
  DEBUG    root:machine.py:28 TICK: 611,  PC: 488,  AR:  64,  MEM_OUT:  33,  TOS: [34, 234, -1]         ,    or         // or
  DEBUG    root:machine.py:28 TICK: 612,  PC: 489,  AR:  64,  MEM_OUT:  33,  TOS: [234, -1]             ,    push 23    // (number literal: 23)
  DEBUG    root:machine.py:28 TICK: 613,  PC: 490,  AR:  64,  MEM_OUT:  33,  TOS: [23, 234, -1]         ,    or         // or
  DEBUG    root:machine.py:28 TICK: 614,  PC: 491,  AR:  64,  MEM_OUT:  33,  TOS: [234, -1]             ,    push 23    // (number literal: 23)
  DEBUG    root:machine.py:28 TICK: 615,  PC: 492,  AR:  64,  MEM_OUT:  33,  TOS: [23, 234, -1]         ,    or         // or
  DEBUG    root:machine.py:28 TICK: 616,  PC: 493,  AR:  64,  MEM_OUT:  33,  TOS: [234, -1]             ,    push 22    // (number literal: 22)
  DEBUG    root:machine.py:28 TICK: 617,  PC: 494,  AR:  64,  MEM_OUT:  33,  TOS: [22, 234, -1]         ,    or         // or
  DEBUG    root:machine.py:28 TICK: 618,  PC: 495,  AR:  64,  MEM_OUT:  33,  TOS: [234, -1]             ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 619,  PC: 496,  AR:  64,  MEM_OUT:  33,  TOS: [234, -1]             ,    jump_plus 3 // print_int
  DEBUG    root:machine.py:28 TICK: 620,  PC: 500,  AR:  64,  MEM_OUT:  33,  TOS: [234, -1]             ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 621,  PC: 501,  AR:  64,  MEM_OUT:  33,  TOS: [234, 234, -1]        ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 622,  PC: 502,  AR:  64,  MEM_OUT:  33,  TOS: [10, 234, 234,... +1] ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 623,  PC: 503,  AR:  64,  MEM_OUT:  33,  TOS: [4, 234, -1]          ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 624,  PC: 504,  AR:  64,  MEM_OUT:  33,  TOS: [48, 4, 234,... +1]   ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 625,  PC: 505,  AR:  64,  MEM_OUT:  33,  TOS: [52, 234, -1]         ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 626,  PC: 506,  AR:  64,  MEM_OUT:  33,  TOS: [234, 52, -1]         ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 627,  PC: 507,  AR:  64,  MEM_OUT:  33,  TOS: [10, 234, 52,... +1]  ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 628,  PC: 508,  AR:  64,  MEM_OUT:  33,  TOS: [23, 52, -1]          ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 629,  PC: 509,  AR:  64,  MEM_OUT:  33,  TOS: [23, 52, -1]          ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 630,  PC: 500,  AR:  64,  MEM_OUT:  33,  TOS: [23, 52, -1]          ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 631,  PC: 501,  AR:  64,  MEM_OUT:  33,  TOS: [23, 23, 52,... +1]   ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 632,  PC: 502,  AR:  64,  MEM_OUT:  33,  TOS: [10, 23, 23,... +2]   ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 633,  PC: 503,  AR:  64,  MEM_OUT:  33,  TOS: [3, 23, 52,... +1]    ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 634,  PC: 504,  AR:  64,  MEM_OUT:  33,  TOS: [48, 3, 23,... +2]    ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 635,  PC: 505,  AR:  64,  MEM_OUT:  33,  TOS: [51, 23, 52,... +1]   ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 636,  PC: 506,  AR:  64,  MEM_OUT:  33,  TOS: [23, 51, 52,... +1]   ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 637,  PC: 507,  AR:  64,  MEM_OUT:  33,  TOS: [10, 23, 51,... +2]   ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 638,  PC: 508,  AR:  64,  MEM_OUT:  33,  TOS: [2, 51, 52,... +1]    ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 639,  PC: 509,  AR:  64,  MEM_OUT:  33,  TOS: [2, 51, 52,... +1]    ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 640,  PC: 500,  AR:  64,  MEM_OUT:  33,  TOS: [2, 51, 52,... +1]    ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 641,  PC: 501,  AR:  64,  MEM_OUT:  33,  TOS: [2, 2, 51,... +2]     ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 642,  PC: 502,  AR:  64,  MEM_OUT:  33,  TOS: [10, 2, 2,... +3]     ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 643,  PC: 503,  AR:  64,  MEM_OUT:  33,  TOS: [2, 2, 51,... +2]     ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 644,  PC: 504,  AR:  64,  MEM_OUT:  33,  TOS: [48, 2, 2,... +3]     ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 645,  PC: 505,  AR:  64,  MEM_OUT:  33,  TOS: [50, 2, 51,... +2]    ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 646,  PC: 506,  AR:  64,  MEM_OUT:  33,  TOS: [2, 50, 51,... +2]    ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 647,  PC: 507,  AR:  64,  MEM_OUT:  33,  TOS: [10, 2, 50,... +3]    ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 648,  PC: 508,  AR:  64,  MEM_OUT:  33,  TOS: [0, 50, 51,... +2]    ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 649,  PC: 509,  AR:  64,  MEM_OUT:  33,  TOS: [0, 50, 51,... +2]    ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 650,  PC: 510,  AR:  64,  MEM_OUT:  33,  TOS: [0, 50, 51,... +2]    ,    pop        // print_int
  DEBUG    root:machine.py:28 TICK: 651,  PC: 511,  AR:  64,  MEM_OUT:  33,  TOS: [50, 51, 52,... +1]   ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 652,  PC: 512,  AR:  64,  MEM_OUT:  33,  TOS: [50, 51, 52,... +1]   ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 653,  PC: 513,  AR:  64,  MEM_OUT:  33,  TOS: [50, 51, 52,... +1]   ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 2
  DEBUG    root:machine.py:28 TICK: 654,  PC: 514,  AR:  64,  MEM_OUT:  33,  TOS: [51, 52, -1]          ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 655,  PC: 511,  AR:  64,  MEM_OUT:  33,  TOS: [51, 52, -1]          ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 656,  PC: 512,  AR:  64,  MEM_OUT:  33,  TOS: [51, 52, -1]          ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 657,  PC: 513,  AR:  64,  MEM_OUT:  33,  TOS: [51, 52, -1]          ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 3
  DEBUG    root:machine.py:28 TICK: 658,  PC: 514,  AR:  64,  MEM_OUT:  33,  TOS: [52, -1]              ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 659,  PC: 511,  AR:  64,  MEM_OUT:  33,  TOS: [52, -1]              ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 660,  PC: 512,  AR:  64,  MEM_OUT:  33,  TOS: [52, -1]              ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 661,  PC: 513,  AR:  64,  MEM_OUT:  33,  TOS: [52, -1]              ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 4
  DEBUG    root:machine.py:28 TICK: 662,  PC: 514,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 663,  PC: 511,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 664,  PC: 512,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 665,  PC: 515,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 666,  PC: 516,  AR:  64,  MEM_OUT:  33,  TOS: []                    ,    push 10    // (number literal: 10)
  DEBUG    root:machine.py:28 TICK: 667,  PC: 517,  AR:  64,  MEM_OUT:  33,  TOS: [10]                  ,    dup        // print_char
  DEBUG    root:machine.py:28 TICK: 668,  PC: 518,  AR:  64,  MEM_OUT:  33,  TOS: [10, 10]              ,    write 0    // print_char
  DEBUG    root:control_unit.py:88 вывод: 

  DEBUG    root:machine.py:28 TICK: 669,  PC: 519,  AR:  64,  MEM_OUT:  33,  TOS: [10]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 670,  PC: 520,  AR:  64,  MEM_OUT:  33,  TOS: []                    ,    push -1    // print_int
  DEBUG    root:machine.py:28 TICK: 671,  PC: 521,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    push 0     // (number literal: 0)
  DEBUG    root:machine.py:28 TICK: 672,  PC: 522,  AR:  64,  MEM_OUT:  33,  TOS: [0, -1]               ,    not        // not
  DEBUG    root:machine.py:28 TICK: 673,  PC: 523,  AR:  64,  MEM_OUT:  33,  TOS: [1, -1]               ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 674,  PC: 524,  AR:  64,  MEM_OUT:  33,  TOS: [1, -1]               ,    jump_plus 3 // print_int
  DEBUG    root:machine.py:28 TICK: 675,  PC: 528,  AR:  64,  MEM_OUT:  33,  TOS: [1, -1]               ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 676,  PC: 529,  AR:  64,  MEM_OUT:  33,  TOS: [1, 1, -1]            ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 677,  PC: 530,  AR:  64,  MEM_OUT:  33,  TOS: [10, 1, 1,... +1]     ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 678,  PC: 531,  AR:  64,  MEM_OUT:  33,  TOS: [1, 1, -1]            ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 679,  PC: 532,  AR:  64,  MEM_OUT:  33,  TOS: [48, 1, 1,... +1]     ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 680,  PC: 533,  AR:  64,  MEM_OUT:  33,  TOS: [49, 1, -1]           ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 681,  PC: 534,  AR:  64,  MEM_OUT:  33,  TOS: [1, 49, -1]           ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 682,  PC: 535,  AR:  64,  MEM_OUT:  33,  TOS: [10, 1, 49,... +1]    ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 683,  PC: 536,  AR:  64,  MEM_OUT:  33,  TOS: [0, 49, -1]           ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 684,  PC: 537,  AR:  64,  MEM_OUT:  33,  TOS: [0, 49, -1]           ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 685,  PC: 538,  AR:  64,  MEM_OUT:  33,  TOS: [0, 49, -1]           ,    pop        // print_int
  DEBUG    root:machine.py:28 TICK: 686,  PC: 539,  AR:  64,  MEM_OUT:  33,  TOS: [49, -1]              ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 687,  PC: 540,  AR:  64,  MEM_OUT:  33,  TOS: [49, -1]              ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 688,  PC: 541,  AR:  64,  MEM_OUT:  33,  TOS: [49, -1]              ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 1
  DEBUG    root:machine.py:28 TICK: 689,  PC: 542,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 690,  PC: 539,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 691,  PC: 540,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 692,  PC: 543,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 693,  PC: 544,  AR:  64,  MEM_OUT:  33,  TOS: []                    ,    push 10    // (number literal: 10)
  DEBUG    root:machine.py:28 TICK: 694,  PC: 545,  AR:  64,  MEM_OUT:  33,  TOS: [10]                  ,    dup        // print_char
  DEBUG    root:machine.py:28 TICK: 695,  PC: 546,  AR:  64,  MEM_OUT:  33,  TOS: [10, 10]              ,    write 0    // print_char
  DEBUG    root:control_unit.py:88 вывод: 

  DEBUG    root:machine.py:28 TICK: 696,  PC: 547,  AR:  64,  MEM_OUT:  33,  TOS: [10]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 697,  PC: 548,  AR:  64,  MEM_OUT:  33,  TOS: []                    ,    push -1    // print_int
  DEBUG    root:machine.py:28 TICK: 698,  PC: 549,  AR:  64,  MEM_OUT:  33,  TOS: [-1]                  ,    push 0     // (static string)
  DEBUG    root:machine.py:28 TICK: 699,  PC: 550,  AR:  64,  MEM_OUT:  33,  TOS: [0, -1]               ,    dup        // print_str
  DEBUG    root:machine.py:28 TICK: 700,  PC: 551,  AR:  64,  MEM_OUT:  33,  TOS: [0, 0, -1]            ,    load       // print_str
  DEBUG    root:machine.py:28 TICK: 702,  PC: 552,  AR:   0,  MEM_OUT: 104,  TOS: [104, 0, -1]          ,    flags      // print_str
  DEBUG    root:machine.py:28 TICK: 703,  PC: 553,  AR:   0,  MEM_OUT: 104,  TOS: [104, 0, -1]          ,    jump_zero 3 // print_str
  DEBUG    root:machine.py:28 TICK: 704,  PC: 554,  AR:   0,  MEM_OUT: 104,  TOS: [104, 0, -1]          ,    write 0    // print_str
  DEBUG    root:control_unit.py:88 вывод: h
  DEBUG    root:machine.py:28 TICK: 705,  PC: 555,  AR:   0,  MEM_OUT: 104,  TOS: [0, -1]               ,    inc        // print_str
  DEBUG    root:machine.py:28 TICK: 706,  PC: 556,  AR:   0,  MEM_OUT: 104,  TOS: [1, -1]               ,    jump -7    // print_str
  DEBUG    root:machine.py:28 TICK: 707,  PC: 550,  AR:   0,  MEM_OUT: 104,  TOS: [1, -1]               ,    dup        // print_str
  DEBUG    root:machine.py:28 TICK: 708,  PC: 551,  AR:   0,  MEM_OUT: 104,  TOS: [1, 1, -1]            ,    load       // print_str
  DEBUG    root:machine.py:28 TICK: 710,  PC: 552,  AR:   1,  MEM_OUT: 101,  TOS: [101, 1, -1]          ,    flags      // print_str
  DEBUG    root:machine.py:28 TICK: 711,  PC: 553,  AR:   1,  MEM_OUT: 101,  TOS: [101, 1, -1]          ,    jump_zero 3 // print_str
  DEBUG    root:machine.py:28 TICK: 712,  PC: 554,  AR:   1,  MEM_OUT: 101,  TOS: [101, 1, -1]          ,    write 0    // print_str
  DEBUG    root:control_unit.py:88 вывод: e
  DEBUG    root:machine.py:28 TICK: 713,  PC: 555,  AR:   1,  MEM_OUT: 101,  TOS: [1, -1]               ,    inc        // print_str
  DEBUG    root:machine.py:28 TICK: 714,  PC: 556,  AR:   1,  MEM_OUT: 101,  TOS: [2, -1]               ,    jump -7    // print_str
  DEBUG    root:machine.py:28 TICK: 715,  PC: 550,  AR:   1,  MEM_OUT: 101,  TOS: [2, -1]               ,    dup        // print_str
  DEBUG    root:machine.py:28 TICK: 716,  PC: 551,  AR:   1,  MEM_OUT: 101,  TOS: [2, 2, -1]            ,    load       // print_str
  DEBUG    root:machine.py:28 TICK: 718,  PC: 552,  AR:   2,  MEM_OUT: 108,  TOS: [108, 2, -1]          ,    flags      // print_str
  DEBUG    root:machine.py:28 TICK: 719,  PC: 553,  AR:   2,  MEM_OUT: 108,  TOS: [108, 2, -1]          ,    jump_zero 3 // print_str
  DEBUG    root:machine.py:28 TICK: 720,  PC: 554,  AR:   2,  MEM_OUT: 108,  TOS: [108, 2, -1]          ,    write 0    // print_str
  DEBUG    root:control_unit.py:88 вывод: l
  DEBUG    root:machine.py:28 TICK: 721,  PC: 555,  AR:   2,  MEM_OUT: 108,  TOS: [2, -1]               ,    inc        // print_str
  DEBUG    root:machine.py:28 TICK: 722,  PC: 556,  AR:   2,  MEM_OUT: 108,  TOS: [3, -1]               ,    jump -7    // print_str
  DEBUG    root:machine.py:28 TICK: 723,  PC: 550,  AR:   2,  MEM_OUT: 108,  TOS: [3, -1]               ,    dup        // print_str
  DEBUG    root:machine.py:28 TICK: 724,  PC: 551,  AR:   2,  MEM_OUT: 108,  TOS: [3, 3, -1]            ,    load       // print_str
  DEBUG    root:machine.py:28 TICK: 726,  PC: 552,  AR:   3,  MEM_OUT: 108,  TOS: [108, 3, -1]          ,    flags      // print_str
  DEBUG    root:machine.py:28 TICK: 727,  PC: 553,  AR:   3,  MEM_OUT: 108,  TOS: [108, 3, -1]          ,    jump_zero 3 // print_str
  DEBUG    root:machine.py:28 TICK: 728,  PC: 554,  AR:   3,  MEM_OUT: 108,  TOS: [108, 3, -1]          ,    write 0    // print_str
  DEBUG    root:control_unit.py:88 вывод: l
  DEBUG    root:machine.py:28 TICK: 729,  PC: 555,  AR:   3,  MEM_OUT: 108,  TOS: [3, -1]               ,    inc        // print_str
  DEBUG    root:machine.py:28 TICK: 730,  PC: 556,  AR:   3,  MEM_OUT: 108,  TOS: [4, -1]               ,    jump -7    // print_str
  DEBUG    root:machine.py:28 TICK: 731,  PC: 550,  AR:   3,  MEM_OUT: 108,  TOS: [4, -1]               ,    dup        // print_str
  DEBUG    root:machine.py:28 TICK: 732,  PC: 551,  AR:   3,  MEM_OUT: 108,  TOS: [4, 4, -1]            ,    load       // print_str
  DEBUG    root:machine.py:28 TICK: 734,  PC: 552,  AR:   4,  MEM_OUT: 111,  TOS: [111, 4, -1]          ,    flags      // print_str
  DEBUG    root:machine.py:28 TICK: 735,  PC: 553,  AR:   4,  MEM_OUT: 111,  TOS: [111, 4, -1]          ,    jump_zero 3 // print_str
  DEBUG    root:machine.py:28 TICK: 736,  PC: 554,  AR:   4,  MEM_OUT: 111,  TOS: [111, 4, -1]          ,    write 0    // print_str
  DEBUG    root:control_unit.py:88 вывод: o
  DEBUG    root:machine.py:28 TICK: 737,  PC: 555,  AR:   4,  MEM_OUT: 111,  TOS: [4, -1]               ,    inc        // print_str
  DEBUG    root:machine.py:28 TICK: 738,  PC: 556,  AR:   4,  MEM_OUT: 111,  TOS: [5, -1]               ,    jump -7    // print_str
  DEBUG    root:machine.py:28 TICK: 739,  PC: 550,  AR:   4,  MEM_OUT: 111,  TOS: [5, -1]               ,    dup        // print_str
  DEBUG    root:machine.py:28 TICK: 740,  PC: 551,  AR:   4,  MEM_OUT: 111,  TOS: [5, 5, -1]            ,    load       // print_str
  DEBUG    root:machine.py:28 TICK: 742,  PC: 552,  AR:   5,  MEM_OUT:  32,  TOS: [32, 5, -1]           ,    flags      // print_str
  DEBUG    root:machine.py:28 TICK: 743,  PC: 553,  AR:   5,  MEM_OUT:  32,  TOS: [32, 5, -1]           ,    jump_zero 3 // print_str
  DEBUG    root:machine.py:28 TICK: 744,  PC: 554,  AR:   5,  MEM_OUT:  32,  TOS: [32, 5, -1]           ,    write 0    // print_str
  DEBUG    root:control_unit.py:88 вывод:  
  DEBUG    root:machine.py:28 TICK: 745,  PC: 555,  AR:   5,  MEM_OUT:  32,  TOS: [5, -1]               ,    inc        // print_str
  DEBUG    root:machine.py:28 TICK: 746,  PC: 556,  AR:   5,  MEM_OUT:  32,  TOS: [6, -1]               ,    jump -7    // print_str
  DEBUG    root:machine.py:28 TICK: 747,  PC: 550,  AR:   5,  MEM_OUT:  32,  TOS: [6, -1]               ,    dup        // print_str
  DEBUG    root:machine.py:28 TICK: 748,  PC: 551,  AR:   5,  MEM_OUT:  32,  TOS: [6, 6, -1]            ,    load       // print_str
  DEBUG    root:machine.py:28 TICK: 750,  PC: 552,  AR:   6,  MEM_OUT: 119,  TOS: [119, 6, -1]          ,    flags      // print_str
  DEBUG    root:machine.py:28 TICK: 751,  PC: 553,  AR:   6,  MEM_OUT: 119,  TOS: [119, 6, -1]          ,    jump_zero 3 // print_str
  DEBUG    root:machine.py:28 TICK: 752,  PC: 554,  AR:   6,  MEM_OUT: 119,  TOS: [119, 6, -1]          ,    write 0    // print_str
  DEBUG    root:control_unit.py:88 вывод: w
  DEBUG    root:machine.py:28 TICK: 753,  PC: 555,  AR:   6,  MEM_OUT: 119,  TOS: [6, -1]               ,    inc        // print_str
  DEBUG    root:machine.py:28 TICK: 754,  PC: 556,  AR:   6,  MEM_OUT: 119,  TOS: [7, -1]               ,    jump -7    // print_str
  DEBUG    root:machine.py:28 TICK: 755,  PC: 550,  AR:   6,  MEM_OUT: 119,  TOS: [7, -1]               ,    dup        // print_str
  DEBUG    root:machine.py:28 TICK: 756,  PC: 551,  AR:   6,  MEM_OUT: 119,  TOS: [7, 7, -1]            ,    load       // print_str
  DEBUG    root:machine.py:28 TICK: 758,  PC: 552,  AR:   7,  MEM_OUT: 111,  TOS: [111, 7, -1]          ,    flags      // print_str
  DEBUG    root:machine.py:28 TICK: 759,  PC: 553,  AR:   7,  MEM_OUT: 111,  TOS: [111, 7, -1]          ,    jump_zero 3 // print_str
  DEBUG    root:machine.py:28 TICK: 760,  PC: 554,  AR:   7,  MEM_OUT: 111,  TOS: [111, 7, -1]          ,    write 0    // print_str
  DEBUG    root:control_unit.py:88 вывод: o
  DEBUG    root:machine.py:28 TICK: 761,  PC: 555,  AR:   7,  MEM_OUT: 111,  TOS: [7, -1]               ,    inc        // print_str
  DEBUG    root:machine.py:28 TICK: 762,  PC: 556,  AR:   7,  MEM_OUT: 111,  TOS: [8, -1]               ,    jump -7    // print_str
  DEBUG    root:machine.py:28 TICK: 763,  PC: 550,  AR:   7,  MEM_OUT: 111,  TOS: [8, -1]               ,    dup        // print_str
  DEBUG    root:machine.py:28 TICK: 764,  PC: 551,  AR:   7,  MEM_OUT: 111,  TOS: [8, 8, -1]            ,    load       // print_str
  DEBUG    root:machine.py:28 TICK: 766,  PC: 552,  AR:   8,  MEM_OUT: 114,  TOS: [114, 8, -1]          ,    flags      // print_str
  DEBUG    root:machine.py:28 TICK: 767,  PC: 553,  AR:   8,  MEM_OUT: 114,  TOS: [114, 8, -1]          ,    jump_zero 3 // print_str
  DEBUG    root:machine.py:28 TICK: 768,  PC: 554,  AR:   8,  MEM_OUT: 114,  TOS: [114, 8, -1]          ,    write 0    // print_str
  DEBUG    root:control_unit.py:88 вывод: r
  DEBUG    root:machine.py:28 TICK: 769,  PC: 555,  AR:   8,  MEM_OUT: 114,  TOS: [8, -1]               ,    inc        // print_str
  DEBUG    root:machine.py:28 TICK: 770,  PC: 556,  AR:   8,  MEM_OUT: 114,  TOS: [9, -1]               ,    jump -7    // print_str
  DEBUG    root:machine.py:28 TICK: 771,  PC: 550,  AR:   8,  MEM_OUT: 114,  TOS: [9, -1]               ,    dup        // print_str
  DEBUG    root:machine.py:28 TICK: 772,  PC: 551,  AR:   8,  MEM_OUT: 114,  TOS: [9, 9, -1]            ,    load       // print_str
  DEBUG    root:machine.py:28 TICK: 774,  PC: 552,  AR:   9,  MEM_OUT: 100,  TOS: [100, 9, -1]          ,    flags      // print_str
  DEBUG    root:machine.py:28 TICK: 775,  PC: 553,  AR:   9,  MEM_OUT: 100,  TOS: [100, 9, -1]          ,    jump_zero 3 // print_str
  DEBUG    root:machine.py:28 TICK: 776,  PC: 554,  AR:   9,  MEM_OUT: 100,  TOS: [100, 9, -1]          ,    write 0    // print_str
  DEBUG    root:control_unit.py:88 вывод: d
  DEBUG    root:machine.py:28 TICK: 777,  PC: 555,  AR:   9,  MEM_OUT: 100,  TOS: [9, -1]               ,    inc        // print_str
  DEBUG    root:machine.py:28 TICK: 778,  PC: 556,  AR:   9,  MEM_OUT: 100,  TOS: [10, -1]              ,    jump -7    // print_str
  DEBUG    root:machine.py:28 TICK: 779,  PC: 550,  AR:   9,  MEM_OUT: 100,  TOS: [10, -1]              ,    dup        // print_str
  DEBUG    root:machine.py:28 TICK: 780,  PC: 551,  AR:   9,  MEM_OUT: 100,  TOS: [10, 10, -1]          ,    load       // print_str
  DEBUG    root:machine.py:28 TICK: 782,  PC: 552,  AR:  10,  MEM_OUT:   0,  TOS: [0, 10, -1]           ,    flags      // print_str
  DEBUG    root:machine.py:28 TICK: 783,  PC: 553,  AR:  10,  MEM_OUT:   0,  TOS: [0, 10, -1]           ,    jump_zero 3 // print_str
  DEBUG    root:machine.py:28 TICK: 784,  PC: 557,  AR:  10,  MEM_OUT:   0,  TOS: [0, 10, -1]           ,    pop        // print_str
  DEBUG    root:machine.py:28 TICK: 785,  PC: 558,  AR:  10,  MEM_OUT:   0,  TOS: [10, -1]              ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 786,  PC: 559,  AR:  10,  MEM_OUT:   0,  TOS: [10, -1]              ,    jump_plus 3 // print_int
  DEBUG    root:machine.py:28 TICK: 787,  PC: 563,  AR:  10,  MEM_OUT:   0,  TOS: [10, -1]              ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 788,  PC: 564,  AR:  10,  MEM_OUT:   0,  TOS: [10, 10, -1]          ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 789,  PC: 565,  AR:  10,  MEM_OUT:   0,  TOS: [10, 10, 10,... +1]   ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 790,  PC: 566,  AR:  10,  MEM_OUT:   0,  TOS: [0, 10, -1]           ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 791,  PC: 567,  AR:  10,  MEM_OUT:   0,  TOS: [48, 0, 10,... +1]    ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 792,  PC: 568,  AR:  10,  MEM_OUT:   0,  TOS: [48, 10, -1]          ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 793,  PC: 569,  AR:  10,  MEM_OUT:   0,  TOS: [10, 48, -1]          ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 794,  PC: 570,  AR:  10,  MEM_OUT:   0,  TOS: [10, 10, 48,... +1]   ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 795,  PC: 571,  AR:  10,  MEM_OUT:   0,  TOS: [1, 48, -1]           ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 796,  PC: 572,  AR:  10,  MEM_OUT:   0,  TOS: [1, 48, -1]           ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 797,  PC: 563,  AR:  10,  MEM_OUT:   0,  TOS: [1, 48, -1]           ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 798,  PC: 564,  AR:  10,  MEM_OUT:   0,  TOS: [1, 1, 48,... +1]     ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 799,  PC: 565,  AR:  10,  MEM_OUT:   0,  TOS: [10, 1, 1,... +2]     ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 800,  PC: 566,  AR:  10,  MEM_OUT:   0,  TOS: [1, 1, 48,... +1]     ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 801,  PC: 567,  AR:  10,  MEM_OUT:   0,  TOS: [48, 1, 1,... +2]     ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 802,  PC: 568,  AR:  10,  MEM_OUT:   0,  TOS: [49, 1, 48,... +1]    ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 803,  PC: 569,  AR:  10,  MEM_OUT:   0,  TOS: [1, 49, 48,... +1]    ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 804,  PC: 570,  AR:  10,  MEM_OUT:   0,  TOS: [10, 1, 49,... +2]    ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 805,  PC: 571,  AR:  10,  MEM_OUT:   0,  TOS: [0, 49, 48,... +1]    ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 806,  PC: 572,  AR:  10,  MEM_OUT:   0,  TOS: [0, 49, 48,... +1]    ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 807,  PC: 573,  AR:  10,  MEM_OUT:   0,  TOS: [0, 49, 48,... +1]    ,    pop        // print_int
  DEBUG    root:machine.py:28 TICK: 808,  PC: 574,  AR:  10,  MEM_OUT:   0,  TOS: [49, 48, -1]          ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 809,  PC: 575,  AR:  10,  MEM_OUT:   0,  TOS: [49, 48, -1]          ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 810,  PC: 576,  AR:  10,  MEM_OUT:   0,  TOS: [49, 48, -1]          ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 1
  DEBUG    root:machine.py:28 TICK: 811,  PC: 577,  AR:  10,  MEM_OUT:   0,  TOS: [48, -1]              ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 812,  PC: 574,  AR:  10,  MEM_OUT:   0,  TOS: [48, -1]              ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 813,  PC: 575,  AR:  10,  MEM_OUT:   0,  TOS: [48, -1]              ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 814,  PC: 576,  AR:  10,  MEM_OUT:   0,  TOS: [48, -1]              ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 0
  DEBUG    root:machine.py:28 TICK: 815,  PC: 577,  AR:  10,  MEM_OUT:   0,  TOS: [-1]                  ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 816,  PC: 574,  AR:  10,  MEM_OUT:   0,  TOS: [-1]                  ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 817,  PC: 575,  AR:  10,  MEM_OUT:   0,  TOS: [-1]                  ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 818,  PC: 578,  AR:  10,  MEM_OUT:   0,  TOS: [-1]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 819,  PC: 579,  AR:  10,  MEM_OUT:   0,  TOS: []                    ,    push 10    // (number literal: 10)
  DEBUG    root:machine.py:28 TICK: 820,  PC: 580,  AR:  10,  MEM_OUT:   0,  TOS: [10]                  ,    dup        // print_char
  DEBUG    root:machine.py:28 TICK: 821,  PC: 581,  AR:  10,  MEM_OUT:   0,  TOS: [10, 10]              ,    write 0    // print_char
  DEBUG    root:control_unit.py:88 вывод: 

  DEBUG    root:machine.py:28 TICK: 822,  PC: 582,  AR:  10,  MEM_OUT:   0,  TOS: [10]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 823,  PC: 583,  AR:  10,  MEM_OUT:   0,  TOS: []                    ,    push -1    // print_int
  DEBUG    root:machine.py:28 TICK: 824,  PC: 584,  AR:  10,  MEM_OUT:   0,  TOS: [-1]                  ,    push 37    // (number literal: 37)
  DEBUG    root:machine.py:28 TICK: 825,  PC: 585,  AR:  10,  MEM_OUT:   0,  TOS: [37, -1]              ,    dup        // print_char
  DEBUG    root:machine.py:28 TICK: 826,  PC: 586,  AR:  10,  MEM_OUT:   0,  TOS: [37, 37, -1]          ,    write 0    // print_char
  DEBUG    root:control_unit.py:88 вывод: %
  DEBUG    root:machine.py:28 TICK: 827,  PC: 587,  AR:  10,  MEM_OUT:   0,  TOS: [37, -1]              ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 828,  PC: 588,  AR:  10,  MEM_OUT:   0,  TOS: [37, -1]              ,    jump_plus 3 // print_int
  DEBUG    root:machine.py:28 TICK: 829,  PC: 592,  AR:  10,  MEM_OUT:   0,  TOS: [37, -1]              ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 830,  PC: 593,  AR:  10,  MEM_OUT:   0,  TOS: [37, 37, -1]          ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 831,  PC: 594,  AR:  10,  MEM_OUT:   0,  TOS: [10, 37, 37,... +1]   ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 832,  PC: 595,  AR:  10,  MEM_OUT:   0,  TOS: [7, 37, -1]           ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 833,  PC: 596,  AR:  10,  MEM_OUT:   0,  TOS: [48, 7, 37,... +1]    ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 834,  PC: 597,  AR:  10,  MEM_OUT:   0,  TOS: [55, 37, -1]          ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 835,  PC: 598,  AR:  10,  MEM_OUT:   0,  TOS: [37, 55, -1]          ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 836,  PC: 599,  AR:  10,  MEM_OUT:   0,  TOS: [10, 37, 55,... +1]   ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 837,  PC: 600,  AR:  10,  MEM_OUT:   0,  TOS: [3, 55, -1]           ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 838,  PC: 601,  AR:  10,  MEM_OUT:   0,  TOS: [3, 55, -1]           ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 839,  PC: 592,  AR:  10,  MEM_OUT:   0,  TOS: [3, 55, -1]           ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 840,  PC: 593,  AR:  10,  MEM_OUT:   0,  TOS: [3, 3, 55,... +1]     ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 841,  PC: 594,  AR:  10,  MEM_OUT:   0,  TOS: [10, 3, 3,... +2]     ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 842,  PC: 595,  AR:  10,  MEM_OUT:   0,  TOS: [3, 3, 55,... +1]     ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 843,  PC: 596,  AR:  10,  MEM_OUT:   0,  TOS: [48, 3, 3,... +2]     ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 844,  PC: 597,  AR:  10,  MEM_OUT:   0,  TOS: [51, 3, 55,... +1]    ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 845,  PC: 598,  AR:  10,  MEM_OUT:   0,  TOS: [3, 51, 55,... +1]    ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 846,  PC: 599,  AR:  10,  MEM_OUT:   0,  TOS: [10, 3, 51,... +2]    ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 847,  PC: 600,  AR:  10,  MEM_OUT:   0,  TOS: [0, 51, 55,... +1]    ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 848,  PC: 601,  AR:  10,  MEM_OUT:   0,  TOS: [0, 51, 55,... +1]    ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 849,  PC: 602,  AR:  10,  MEM_OUT:   0,  TOS: [0, 51, 55,... +1]    ,    pop        // print_int
  DEBUG    root:machine.py:28 TICK: 850,  PC: 603,  AR:  10,  MEM_OUT:   0,  TOS: [51, 55, -1]          ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 851,  PC: 604,  AR:  10,  MEM_OUT:   0,  TOS: [51, 55, -1]          ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 852,  PC: 605,  AR:  10,  MEM_OUT:   0,  TOS: [51, 55, -1]          ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 3
  DEBUG    root:machine.py:28 TICK: 853,  PC: 606,  AR:  10,  MEM_OUT:   0,  TOS: [55, -1]              ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 854,  PC: 603,  AR:  10,  MEM_OUT:   0,  TOS: [55, -1]              ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 855,  PC: 604,  AR:  10,  MEM_OUT:   0,  TOS: [55, -1]              ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 856,  PC: 605,  AR:  10,  MEM_OUT:   0,  TOS: [55, -1]              ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 7
  DEBUG    root:machine.py:28 TICK: 857,  PC: 606,  AR:  10,  MEM_OUT:   0,  TOS: [-1]                  ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 858,  PC: 603,  AR:  10,  MEM_OUT:   0,  TOS: [-1]                  ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 859,  PC: 604,  AR:  10,  MEM_OUT:   0,  TOS: [-1]                  ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 860,  PC: 607,  AR:  10,  MEM_OUT:   0,  TOS: [-1]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 861,  PC: 608,  AR:  10,  MEM_OUT:   0,  TOS: []                    ,    push 10    // (number literal: 10)
  DEBUG    root:machine.py:28 TICK: 862,  PC: 609,  AR:  10,  MEM_OUT:   0,  TOS: [10]                  ,    dup        // print_char
  DEBUG    root:machine.py:28 TICK: 863,  PC: 610,  AR:  10,  MEM_OUT:   0,  TOS: [10, 10]              ,    write 0    // print_char
  DEBUG    root:control_unit.py:88 вывод: 

  DEBUG    root:machine.py:28 TICK: 864,  PC: 611,  AR:  10,  MEM_OUT:   0,  TOS: [10]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 865,  PC: 612,  AR:  10,  MEM_OUT:   0,  TOS: []                    ,    push -1    // print_int
  DEBUG    root:machine.py:28 TICK: 866,  PC: 613,  AR:  10,  MEM_OUT:   0,  TOS: [-1]                  ,    push -1    // print_int
  DEBUG    root:machine.py:28 TICK: 867,  PC: 614,  AR:  10,  MEM_OUT:   0,  TOS: [-1, -1]              ,    push 98765 // (number literal: 98765)
  DEBUG    root:machine.py:28 TICK: 868,  PC: 615,  AR:  10,  MEM_OUT:   0,  TOS: [98765, -1, -1]       ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 869,  PC: 616,  AR:  10,  MEM_OUT:   0,  TOS: [98765, -1, -1]       ,    jump_plus 3 // print_int
  DEBUG    root:machine.py:28 TICK: 870,  PC: 620,  AR:  10,  MEM_OUT:   0,  TOS: [98765, -1, -1]       ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 871,  PC: 621,  AR:  10,  MEM_OUT:   0,  TOS: [98765, 98765, -1,... +1],    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 872,  PC: 622,  AR:  10,  MEM_OUT:   0,  TOS: [10, 98765, 98765,... +2],    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 873,  PC: 623,  AR:  10,  MEM_OUT:   0,  TOS: [5, 98765, -1,... +1] ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 874,  PC: 624,  AR:  10,  MEM_OUT:   0,  TOS: [48, 5, 98765,... +2] ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 875,  PC: 625,  AR:  10,  MEM_OUT:   0,  TOS: [53, 98765, -1,... +1],    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 876,  PC: 626,  AR:  10,  MEM_OUT:   0,  TOS: [98765, 53, -1,... +1],    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 877,  PC: 627,  AR:  10,  MEM_OUT:   0,  TOS: [10, 98765, 53,... +2],    div        // print_int
  DEBUG    root:machine.py:28 TICK: 878,  PC: 628,  AR:  10,  MEM_OUT:   0,  TOS: [9876, 53, -1,... +1] ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 879,  PC: 629,  AR:  10,  MEM_OUT:   0,  TOS: [9876, 53, -1,... +1] ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 880,  PC: 620,  AR:  10,  MEM_OUT:   0,  TOS: [9876, 53, -1,... +1] ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 881,  PC: 621,  AR:  10,  MEM_OUT:   0,  TOS: [9876, 9876, 53,... +2],    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 882,  PC: 622,  AR:  10,  MEM_OUT:   0,  TOS: [10, 9876, 9876,... +3],    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 883,  PC: 623,  AR:  10,  MEM_OUT:   0,  TOS: [6, 9876, 53,... +2]  ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 884,  PC: 624,  AR:  10,  MEM_OUT:   0,  TOS: [48, 6, 9876,... +3]  ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 885,  PC: 625,  AR:  10,  MEM_OUT:   0,  TOS: [54, 9876, 53,... +2] ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 886,  PC: 626,  AR:  10,  MEM_OUT:   0,  TOS: [9876, 54, 53,... +2] ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 887,  PC: 627,  AR:  10,  MEM_OUT:   0,  TOS: [10, 9876, 54,... +3] ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 888,  PC: 628,  AR:  10,  MEM_OUT:   0,  TOS: [987, 54, 53,... +2]  ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 889,  PC: 629,  AR:  10,  MEM_OUT:   0,  TOS: [987, 54, 53,... +2]  ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 890,  PC: 620,  AR:  10,  MEM_OUT:   0,  TOS: [987, 54, 53,... +2]  ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 891,  PC: 621,  AR:  10,  MEM_OUT:   0,  TOS: [987, 987, 54,... +3] ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 892,  PC: 622,  AR:  10,  MEM_OUT:   0,  TOS: [10, 987, 987,... +4] ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 893,  PC: 623,  AR:  10,  MEM_OUT:   0,  TOS: [7, 987, 54,... +3]   ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 894,  PC: 624,  AR:  10,  MEM_OUT:   0,  TOS: [48, 7, 987,... +4]   ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 895,  PC: 625,  AR:  10,  MEM_OUT:   0,  TOS: [55, 987, 54,... +3]  ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 896,  PC: 626,  AR:  10,  MEM_OUT:   0,  TOS: [987, 55, 54,... +3]  ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 897,  PC: 627,  AR:  10,  MEM_OUT:   0,  TOS: [10, 987, 55,... +4]  ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 898,  PC: 628,  AR:  10,  MEM_OUT:   0,  TOS: [98, 55, 54,... +3]   ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 899,  PC: 629,  AR:  10,  MEM_OUT:   0,  TOS: [98, 55, 54,... +3]   ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 900,  PC: 620,  AR:  10,  MEM_OUT:   0,  TOS: [98, 55, 54,... +3]   ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 901,  PC: 621,  AR:  10,  MEM_OUT:   0,  TOS: [98, 98, 55,... +4]   ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 902,  PC: 622,  AR:  10,  MEM_OUT:   0,  TOS: [10, 98, 98,... +5]   ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 903,  PC: 623,  AR:  10,  MEM_OUT:   0,  TOS: [8, 98, 55,... +4]    ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 904,  PC: 624,  AR:  10,  MEM_OUT:   0,  TOS: [48, 8, 98,... +5]    ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 905,  PC: 625,  AR:  10,  MEM_OUT:   0,  TOS: [56, 98, 55,... +4]   ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 906,  PC: 626,  AR:  10,  MEM_OUT:   0,  TOS: [98, 56, 55,... +4]   ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 907,  PC: 627,  AR:  10,  MEM_OUT:   0,  TOS: [10, 98, 56,... +5]   ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 908,  PC: 628,  AR:  10,  MEM_OUT:   0,  TOS: [9, 56, 55,... +4]    ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 909,  PC: 629,  AR:  10,  MEM_OUT:   0,  TOS: [9, 56, 55,... +4]    ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 910,  PC: 620,  AR:  10,  MEM_OUT:   0,  TOS: [9, 56, 55,... +4]    ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 911,  PC: 621,  AR:  10,  MEM_OUT:   0,  TOS: [9, 9, 56,... +5]     ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 912,  PC: 622,  AR:  10,  MEM_OUT:   0,  TOS: [10, 9, 9,... +6]     ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 913,  PC: 623,  AR:  10,  MEM_OUT:   0,  TOS: [9, 9, 56,... +5]     ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 914,  PC: 624,  AR:  10,  MEM_OUT:   0,  TOS: [48, 9, 9,... +6]     ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 915,  PC: 625,  AR:  10,  MEM_OUT:   0,  TOS: [57, 9, 56,... +5]    ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 916,  PC: 626,  AR:  10,  MEM_OUT:   0,  TOS: [9, 57, 56,... +5]    ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 917,  PC: 627,  AR:  10,  MEM_OUT:   0,  TOS: [10, 9, 57,... +6]    ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 918,  PC: 628,  AR:  10,  MEM_OUT:   0,  TOS: [0, 57, 56,... +5]    ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 919,  PC: 629,  AR:  10,  MEM_OUT:   0,  TOS: [0, 57, 56,... +5]    ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 920,  PC: 630,  AR:  10,  MEM_OUT:   0,  TOS: [0, 57, 56,... +5]    ,    pop        // print_int
  DEBUG    root:machine.py:28 TICK: 921,  PC: 631,  AR:  10,  MEM_OUT:   0,  TOS: [57, 56, 55,... +4]   ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 922,  PC: 632,  AR:  10,  MEM_OUT:   0,  TOS: [57, 56, 55,... +4]   ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 923,  PC: 633,  AR:  10,  MEM_OUT:   0,  TOS: [57, 56, 55,... +4]   ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 9
  DEBUG    root:machine.py:28 TICK: 924,  PC: 634,  AR:  10,  MEM_OUT:   0,  TOS: [56, 55, 54,... +3]   ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 925,  PC: 631,  AR:  10,  MEM_OUT:   0,  TOS: [56, 55, 54,... +3]   ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 926,  PC: 632,  AR:  10,  MEM_OUT:   0,  TOS: [56, 55, 54,... +3]   ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 927,  PC: 633,  AR:  10,  MEM_OUT:   0,  TOS: [56, 55, 54,... +3]   ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 8
  DEBUG    root:machine.py:28 TICK: 928,  PC: 634,  AR:  10,  MEM_OUT:   0,  TOS: [55, 54, 53,... +2]   ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 929,  PC: 631,  AR:  10,  MEM_OUT:   0,  TOS: [55, 54, 53,... +2]   ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 930,  PC: 632,  AR:  10,  MEM_OUT:   0,  TOS: [55, 54, 53,... +2]   ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 931,  PC: 633,  AR:  10,  MEM_OUT:   0,  TOS: [55, 54, 53,... +2]   ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 7
  DEBUG    root:machine.py:28 TICK: 932,  PC: 634,  AR:  10,  MEM_OUT:   0,  TOS: [54, 53, -1,... +1]   ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 933,  PC: 631,  AR:  10,  MEM_OUT:   0,  TOS: [54, 53, -1,... +1]   ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 934,  PC: 632,  AR:  10,  MEM_OUT:   0,  TOS: [54, 53, -1,... +1]   ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 935,  PC: 633,  AR:  10,  MEM_OUT:   0,  TOS: [54, 53, -1,... +1]   ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 6
  DEBUG    root:machine.py:28 TICK: 936,  PC: 634,  AR:  10,  MEM_OUT:   0,  TOS: [53, -1, -1]          ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 937,  PC: 631,  AR:  10,  MEM_OUT:   0,  TOS: [53, -1, -1]          ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 938,  PC: 632,  AR:  10,  MEM_OUT:   0,  TOS: [53, -1, -1]          ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 939,  PC: 633,  AR:  10,  MEM_OUT:   0,  TOS: [53, -1, -1]          ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 5
  DEBUG    root:machine.py:28 TICK: 940,  PC: 634,  AR:  10,  MEM_OUT:   0,  TOS: [-1, -1]              ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 941,  PC: 631,  AR:  10,  MEM_OUT:   0,  TOS: [-1, -1]              ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 942,  PC: 632,  AR:  10,  MEM_OUT:   0,  TOS: [-1, -1]              ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 943,  PC: 635,  AR:  10,  MEM_OUT:   0,  TOS: [-1, -1]              ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 944,  PC: 636,  AR:  10,  MEM_OUT:   0,  TOS: [-1, -1]              ,    jump_plus 3 // print_int
  DEBUG    root:machine.py:28 TICK: 945,  PC: 637,  AR:  10,  MEM_OUT:   0,  TOS: [-1, -1]              ,    neg        // print_int
  DEBUG    root:machine.py:28 TICK: 946,  PC: 638,  AR:  10,  MEM_OUT:   0,  TOS: [1, -1]               ,    push 45    // print_int
  DEBUG    root:machine.py:28 TICK: 947,  PC: 639,  AR:  10,  MEM_OUT:   0,  TOS: [45, 1, -1]           ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: -
  DEBUG    root:machine.py:28 TICK: 948,  PC: 640,  AR:  10,  MEM_OUT:   0,  TOS: [1, -1]               ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 949,  PC: 641,  AR:  10,  MEM_OUT:   0,  TOS: [1, 1, -1]            ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 950,  PC: 642,  AR:  10,  MEM_OUT:   0,  TOS: [10, 1, 1,... +1]     ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 951,  PC: 643,  AR:  10,  MEM_OUT:   0,  TOS: [1, 1, -1]            ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 952,  PC: 644,  AR:  10,  MEM_OUT:   0,  TOS: [48, 1, 1,... +1]     ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 953,  PC: 645,  AR:  10,  MEM_OUT:   0,  TOS: [49, 1, -1]           ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 954,  PC: 646,  AR:  10,  MEM_OUT:   0,  TOS: [1, 49, -1]           ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 955,  PC: 647,  AR:  10,  MEM_OUT:   0,  TOS: [10, 1, 49,... +1]    ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 956,  PC: 648,  AR:  10,  MEM_OUT:   0,  TOS: [0, 49, -1]           ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 957,  PC: 649,  AR:  10,  MEM_OUT:   0,  TOS: [0, 49, -1]           ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 958,  PC: 650,  AR:  10,  MEM_OUT:   0,  TOS: [0, 49, -1]           ,    pop        // print_int
  DEBUG    root:machine.py:28 TICK: 959,  PC: 651,  AR:  10,  MEM_OUT:   0,  TOS: [49, -1]              ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 960,  PC: 652,  AR:  10,  MEM_OUT:   0,  TOS: [49, -1]              ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 961,  PC: 653,  AR:  10,  MEM_OUT:   0,  TOS: [49, -1]              ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 1
  DEBUG    root:machine.py:28 TICK: 962,  PC: 654,  AR:  10,  MEM_OUT:   0,  TOS: [-1]                  ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 963,  PC: 651,  AR:  10,  MEM_OUT:   0,  TOS: [-1]                  ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 964,  PC: 652,  AR:  10,  MEM_OUT:   0,  TOS: [-1]                  ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 965,  PC: 655,  AR:  10,  MEM_OUT:   0,  TOS: [-1]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 966,  PC: 656,  AR:  10,  MEM_OUT:   0,  TOS: []                    ,    push 10    // (number literal: 10)
  DEBUG    root:machine.py:28 TICK: 967,  PC: 657,  AR:  10,  MEM_OUT:   0,  TOS: [10]                  ,    dup        // print_char
  DEBUG    root:machine.py:28 TICK: 968,  PC: 658,  AR:  10,  MEM_OUT:   0,  TOS: [10, 10]              ,    write 0    // print_char
  DEBUG    root:control_unit.py:88 вывод: 

  DEBUG    root:machine.py:28 TICK: 969,  PC: 659,  AR:  10,  MEM_OUT:   0,  TOS: [10]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 970,  PC: 660,  AR:  10,  MEM_OUT:   0,  TOS: []                    ,    push -1    // print_int
  DEBUG    root:machine.py:28 TICK: 971,  PC: 661,  AR:  10,  MEM_OUT:   0,  TOS: [-1]                  ,    read 0     // read_char
  DEBUG    root:data_path.py:42 ввод: T
  DEBUG    root:machine.py:28 TICK: 972,  PC: 662,  AR:  10,  MEM_OUT:   0,  TOS: [84, -1]              ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 973,  PC: 663,  AR:  10,  MEM_OUT:   0,  TOS: [84, -1]              ,    jump_plus 3 // print_int
  DEBUG    root:machine.py:28 TICK: 974,  PC: 667,  AR:  10,  MEM_OUT:   0,  TOS: [84, -1]              ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 975,  PC: 668,  AR:  10,  MEM_OUT:   0,  TOS: [84, 84, -1]          ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 976,  PC: 669,  AR:  10,  MEM_OUT:   0,  TOS: [10, 84, 84,... +1]   ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 977,  PC: 670,  AR:  10,  MEM_OUT:   0,  TOS: [4, 84, -1]           ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 978,  PC: 671,  AR:  10,  MEM_OUT:   0,  TOS: [48, 4, 84,... +1]    ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 979,  PC: 672,  AR:  10,  MEM_OUT:   0,  TOS: [52, 84, -1]          ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 980,  PC: 673,  AR:  10,  MEM_OUT:   0,  TOS: [84, 52, -1]          ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 981,  PC: 674,  AR:  10,  MEM_OUT:   0,  TOS: [10, 84, 52,... +1]   ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 982,  PC: 675,  AR:  10,  MEM_OUT:   0,  TOS: [8, 52, -1]           ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 983,  PC: 676,  AR:  10,  MEM_OUT:   0,  TOS: [8, 52, -1]           ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 984,  PC: 667,  AR:  10,  MEM_OUT:   0,  TOS: [8, 52, -1]           ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 985,  PC: 668,  AR:  10,  MEM_OUT:   0,  TOS: [8, 8, 52,... +1]     ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 986,  PC: 669,  AR:  10,  MEM_OUT:   0,  TOS: [10, 8, 8,... +2]     ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 987,  PC: 670,  AR:  10,  MEM_OUT:   0,  TOS: [8, 8, 52,... +1]     ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 988,  PC: 671,  AR:  10,  MEM_OUT:   0,  TOS: [48, 8, 8,... +2]     ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 989,  PC: 672,  AR:  10,  MEM_OUT:   0,  TOS: [56, 8, 52,... +1]    ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 990,  PC: 673,  AR:  10,  MEM_OUT:   0,  TOS: [8, 56, 52,... +1]    ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 991,  PC: 674,  AR:  10,  MEM_OUT:   0,  TOS: [10, 8, 56,... +2]    ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 992,  PC: 675,  AR:  10,  MEM_OUT:   0,  TOS: [0, 56, 52,... +1]    ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 993,  PC: 676,  AR:  10,  MEM_OUT:   0,  TOS: [0, 56, 52,... +1]    ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 994,  PC: 677,  AR:  10,  MEM_OUT:   0,  TOS: [0, 56, 52,... +1]    ,    pop        // print_int
  DEBUG    root:machine.py:28 TICK: 995,  PC: 678,  AR:  10,  MEM_OUT:   0,  TOS: [56, 52, -1]          ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 996,  PC: 679,  AR:  10,  MEM_OUT:   0,  TOS: [56, 52, -1]          ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 997,  PC: 680,  AR:  10,  MEM_OUT:   0,  TOS: [56, 52, -1]          ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 8
  DEBUG    root:machine.py:28 TICK: 998,  PC: 681,  AR:  10,  MEM_OUT:   0,  TOS: [52, -1]              ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 999,  PC: 678,  AR:  10,  MEM_OUT:   0,  TOS: [52, -1]              ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 1000,  PC: 679,  AR:  10,  MEM_OUT:   0,  TOS: [52, -1]              ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 1001,  PC: 680,  AR:  10,  MEM_OUT:   0,  TOS: [52, -1]              ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 4
  DEBUG    root:machine.py:28 TICK: 1002,  PC: 681,  AR:  10,  MEM_OUT:   0,  TOS: [-1]                  ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 1003,  PC: 678,  AR:  10,  MEM_OUT:   0,  TOS: [-1]                  ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 1004,  PC: 679,  AR:  10,  MEM_OUT:   0,  TOS: [-1]                  ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 1005,  PC: 682,  AR:  10,  MEM_OUT:   0,  TOS: [-1]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 1006,  PC: 683,  AR:  10,  MEM_OUT:   0,  TOS: []                    ,    push 10    // (number literal: 10)
  DEBUG    root:machine.py:28 TICK: 1007,  PC: 684,  AR:  10,  MEM_OUT:   0,  TOS: [10]                  ,    dup        // print_char
  DEBUG    root:machine.py:28 TICK: 1008,  PC: 685,  AR:  10,  MEM_OUT:   0,  TOS: [10, 10]              ,    write 0    // print_char
  DEBUG    root:control_unit.py:88 вывод: 

  DEBUG    root:machine.py:28 TICK: 1009,  PC: 686,  AR:  10,  MEM_OUT:   0,  TOS: [10]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 1010,  PC: 687,  AR:  10,  MEM_OUT:   0,  TOS: []                    ,    push -1    // print_int
  DEBUG    root:machine.py:28 TICK: 1011,  PC: 688,  AR:  10,  MEM_OUT:   0,  TOS: [-1]                  ,    push 23    // read_str
  DEBUG    root:machine.py:28 TICK: 1012,  PC: 689,  AR:  10,  MEM_OUT:   0,  TOS: [23, -1]              ,    dup        // read_str
  DEBUG    root:machine.py:28 TICK: 1013,  PC: 690,  AR:  10,  MEM_OUT:   0,  TOS: [23, 23, -1]          ,    read 0     // read_str
  DEBUG    root:data_path.py:42 ввод: h
  DEBUG    root:machine.py:28 TICK: 1014,  PC: 691,  AR:  10,  MEM_OUT:   0,  TOS: [104, 23, 23,... +1]  ,    flags      // read_str
  DEBUG    root:machine.py:28 TICK: 1015,  PC: 692,  AR:  10,  MEM_OUT:   0,  TOS: [104, 23, 23,... +1]  ,    swap       // read_str
  DEBUG    root:machine.py:28 TICK: 1016,  PC: 693,  AR:  10,  MEM_OUT:   0,  TOS: [23, 104, 23,... +1]  ,    store      // read_str
  DEBUG    root:machine.py:28 TICK: 1018,  PC: 694,  AR:  23,  MEM_OUT: 104,  TOS: [104, 23, -1]         ,    pop        // read_str
  DEBUG    root:machine.py:28 TICK: 1019,  PC: 695,  AR:  23,  MEM_OUT: 104,  TOS: [23, -1]              ,    inc        // read_str
  DEBUG    root:machine.py:28 TICK: 1020,  PC: 696,  AR:  23,  MEM_OUT: 104,  TOS: [24, -1]              ,    jump_non_zero -8 // read_str
  DEBUG    root:machine.py:28 TICK: 1021,  PC: 689,  AR:  23,  MEM_OUT: 104,  TOS: [24, -1]              ,    dup        // read_str
  DEBUG    root:machine.py:28 TICK: 1022,  PC: 690,  AR:  23,  MEM_OUT: 104,  TOS: [24, 24, -1]          ,    read 0     // read_str
  DEBUG    root:data_path.py:42 ввод: i
  DEBUG    root:machine.py:28 TICK: 1023,  PC: 691,  AR:  23,  MEM_OUT: 104,  TOS: [105, 24, 24,... +1]  ,    flags      // read_str
  DEBUG    root:machine.py:28 TICK: 1024,  PC: 692,  AR:  23,  MEM_OUT: 104,  TOS: [105, 24, 24,... +1]  ,    swap       // read_str
  DEBUG    root:machine.py:28 TICK: 1025,  PC: 693,  AR:  23,  MEM_OUT: 104,  TOS: [24, 105, 24,... +1]  ,    store      // read_str
  DEBUG    root:machine.py:28 TICK: 1027,  PC: 694,  AR:  24,  MEM_OUT: 105,  TOS: [105, 24, -1]         ,    pop        // read_str
  DEBUG    root:machine.py:28 TICK: 1028,  PC: 695,  AR:  24,  MEM_OUT: 105,  TOS: [24, -1]              ,    inc        // read_str
  DEBUG    root:machine.py:28 TICK: 1029,  PC: 696,  AR:  24,  MEM_OUT: 105,  TOS: [25, -1]              ,    jump_non_zero -8 // read_str
  DEBUG    root:machine.py:28 TICK: 1030,  PC: 689,  AR:  24,  MEM_OUT: 105,  TOS: [25, -1]              ,    dup        // read_str
  DEBUG    root:machine.py:28 TICK: 1031,  PC: 690,  AR:  24,  MEM_OUT: 105,  TOS: [25, 25, -1]          ,    read 0     // read_str
  DEBUG    root:data_path.py:42 ввод: s
  DEBUG    root:machine.py:28 TICK: 1032,  PC: 691,  AR:  24,  MEM_OUT: 105,  TOS: [115, 25, 25,... +1]  ,    flags      // read_str
  DEBUG    root:machine.py:28 TICK: 1033,  PC: 692,  AR:  24,  MEM_OUT: 105,  TOS: [115, 25, 25,... +1]  ,    swap       // read_str
  DEBUG    root:machine.py:28 TICK: 1034,  PC: 693,  AR:  24,  MEM_OUT: 105,  TOS: [25, 115, 25,... +1]  ,    store      // read_str
  DEBUG    root:machine.py:28 TICK: 1036,  PC: 694,  AR:  25,  MEM_OUT: 115,  TOS: [115, 25, -1]         ,    pop        // read_str
  DEBUG    root:machine.py:28 TICK: 1037,  PC: 695,  AR:  25,  MEM_OUT: 115,  TOS: [25, -1]              ,    inc        // read_str
  DEBUG    root:machine.py:28 TICK: 1038,  PC: 696,  AR:  25,  MEM_OUT: 115,  TOS: [26, -1]              ,    jump_non_zero -8 // read_str
  DEBUG    root:machine.py:28 TICK: 1039,  PC: 689,  AR:  25,  MEM_OUT: 115,  TOS: [26, -1]              ,    dup        // read_str
  DEBUG    root:machine.py:28 TICK: 1040,  PC: 690,  AR:  25,  MEM_OUT: 115,  TOS: [26, 26, -1]          ,    read 0     // read_str
  DEBUG    root:data_path.py:42 ввод:  
  DEBUG    root:machine.py:28 TICK: 1041,  PC: 691,  AR:  25,  MEM_OUT: 115,  TOS: [32, 26, 26,... +1]   ,    flags      // read_str
  DEBUG    root:machine.py:28 TICK: 1042,  PC: 692,  AR:  25,  MEM_OUT: 115,  TOS: [32, 26, 26,... +1]   ,    swap       // read_str
  DEBUG    root:machine.py:28 TICK: 1043,  PC: 693,  AR:  25,  MEM_OUT: 115,  TOS: [26, 32, 26,... +1]   ,    store      // read_str
  DEBUG    root:machine.py:28 TICK: 1045,  PC: 694,  AR:  26,  MEM_OUT:  32,  TOS: [32, 26, -1]          ,    pop        // read_str
  DEBUG    root:machine.py:28 TICK: 1046,  PC: 695,  AR:  26,  MEM_OUT:  32,  TOS: [26, -1]              ,    inc        // read_str
  DEBUG    root:machine.py:28 TICK: 1047,  PC: 696,  AR:  26,  MEM_OUT:  32,  TOS: [27, -1]              ,    jump_non_zero -8 // read_str
  DEBUG    root:machine.py:28 TICK: 1048,  PC: 689,  AR:  26,  MEM_OUT:  32,  TOS: [27, -1]              ,    dup        // read_str
  DEBUG    root:machine.py:28 TICK: 1049,  PC: 690,  AR:  26,  MEM_OUT:  32,  TOS: [27, 27, -1]          ,    read 0     // read_str
  DEBUG    root:data_path.py:42 ввод: i
  DEBUG    root:machine.py:28 TICK: 1050,  PC: 691,  AR:  26,  MEM_OUT:  32,  TOS: [105, 27, 27,... +1]  ,    flags      // read_str
  DEBUG    root:machine.py:28 TICK: 1051,  PC: 692,  AR:  26,  MEM_OUT:  32,  TOS: [105, 27, 27,... +1]  ,    swap       // read_str
  DEBUG    root:machine.py:28 TICK: 1052,  PC: 693,  AR:  26,  MEM_OUT:  32,  TOS: [27, 105, 27,... +1]  ,    store      // read_str
  DEBUG    root:machine.py:28 TICK: 1054,  PC: 694,  AR:  27,  MEM_OUT: 105,  TOS: [105, 27, -1]         ,    pop        // read_str
  DEBUG    root:machine.py:28 TICK: 1055,  PC: 695,  AR:  27,  MEM_OUT: 105,  TOS: [27, -1]              ,    inc        // read_str
  DEBUG    root:machine.py:28 TICK: 1056,  PC: 696,  AR:  27,  MEM_OUT: 105,  TOS: [28, -1]              ,    jump_non_zero -8 // read_str
  DEBUG    root:machine.py:28 TICK: 1057,  PC: 689,  AR:  27,  MEM_OUT: 105,  TOS: [28, -1]              ,    dup        // read_str
  DEBUG    root:machine.py:28 TICK: 1058,  PC: 690,  AR:  27,  MEM_OUT: 105,  TOS: [28, 28, -1]          ,    read 0     // read_str
  DEBUG    root:data_path.py:42 ввод: s
  DEBUG    root:machine.py:28 TICK: 1059,  PC: 691,  AR:  27,  MEM_OUT: 105,  TOS: [115, 28, 28,... +1]  ,    flags      // read_str
  DEBUG    root:machine.py:28 TICK: 1060,  PC: 692,  AR:  27,  MEM_OUT: 105,  TOS: [115, 28, 28,... +1]  ,    swap       // read_str
  DEBUG    root:machine.py:28 TICK: 1061,  PC: 693,  AR:  27,  MEM_OUT: 105,  TOS: [28, 115, 28,... +1]  ,    store      // read_str
  DEBUG    root:machine.py:28 TICK: 1063,  PC: 694,  AR:  28,  MEM_OUT: 115,  TOS: [115, 28, -1]         ,    pop        // read_str
  DEBUG    root:machine.py:28 TICK: 1064,  PC: 695,  AR:  28,  MEM_OUT: 115,  TOS: [28, -1]              ,    inc        // read_str
  DEBUG    root:machine.py:28 TICK: 1065,  PC: 696,  AR:  28,  MEM_OUT: 115,  TOS: [29, -1]              ,    jump_non_zero -8 // read_str
  DEBUG    root:machine.py:28 TICK: 1066,  PC: 689,  AR:  28,  MEM_OUT: 115,  TOS: [29, -1]              ,    dup        // read_str
  DEBUG    root:machine.py:28 TICK: 1067,  PC: 690,  AR:  28,  MEM_OUT: 115,  TOS: [29, 29, -1]          ,    read 0     // read_str
  DEBUG    root:data_path.py:42 ввод:  
  DEBUG    root:machine.py:28 TICK: 1068,  PC: 691,  AR:  28,  MEM_OUT: 115,  TOS: [32, 29, 29,... +1]   ,    flags      // read_str
  DEBUG    root:machine.py:28 TICK: 1069,  PC: 692,  AR:  28,  MEM_OUT: 115,  TOS: [32, 29, 29,... +1]   ,    swap       // read_str
  DEBUG    root:machine.py:28 TICK: 1070,  PC: 693,  AR:  28,  MEM_OUT: 115,  TOS: [29, 32, 29,... +1]   ,    store      // read_str
  DEBUG    root:machine.py:28 TICK: 1072,  PC: 694,  AR:  29,  MEM_OUT:  32,  TOS: [32, 29, -1]          ,    pop        // read_str
  DEBUG    root:machine.py:28 TICK: 1073,  PC: 695,  AR:  29,  MEM_OUT:  32,  TOS: [29, -1]              ,    inc        // read_str
  DEBUG    root:machine.py:28 TICK: 1074,  PC: 696,  AR:  29,  MEM_OUT:  32,  TOS: [30, -1]              ,    jump_non_zero -8 // read_str
  DEBUG    root:machine.py:28 TICK: 1075,  PC: 689,  AR:  29,  MEM_OUT:  32,  TOS: [30, -1]              ,    dup        // read_str
  DEBUG    root:machine.py:28 TICK: 1076,  PC: 690,  AR:  29,  MEM_OUT:  32,  TOS: [30, 30, -1]          ,    read 0     // read_str
  DEBUG    root:data_path.py:42 ввод: a
  DEBUG    root:machine.py:28 TICK: 1077,  PC: 691,  AR:  29,  MEM_OUT:  32,  TOS: [97, 30, 30,... +1]   ,    flags      // read_str
  DEBUG    root:machine.py:28 TICK: 1078,  PC: 692,  AR:  29,  MEM_OUT:  32,  TOS: [97, 30, 30,... +1]   ,    swap       // read_str
  DEBUG    root:machine.py:28 TICK: 1079,  PC: 693,  AR:  29,  MEM_OUT:  32,  TOS: [30, 97, 30,... +1]   ,    store      // read_str
  DEBUG    root:machine.py:28 TICK: 1081,  PC: 694,  AR:  30,  MEM_OUT:  97,  TOS: [97, 30, -1]          ,    pop        // read_str
  DEBUG    root:machine.py:28 TICK: 1082,  PC: 695,  AR:  30,  MEM_OUT:  97,  TOS: [30, -1]              ,    inc        // read_str
  DEBUG    root:machine.py:28 TICK: 1083,  PC: 696,  AR:  30,  MEM_OUT:  97,  TOS: [31, -1]              ,    jump_non_zero -8 // read_str
  DEBUG    root:machine.py:28 TICK: 1084,  PC: 689,  AR:  30,  MEM_OUT:  97,  TOS: [31, -1]              ,    dup        // read_str
  DEBUG    root:machine.py:28 TICK: 1085,  PC: 690,  AR:  30,  MEM_OUT:  97,  TOS: [31, 31, -1]          ,    read 0     // read_str
  DEBUG    root:data_path.py:42 ввод:  
  DEBUG    root:machine.py:28 TICK: 1086,  PC: 691,  AR:  30,  MEM_OUT:  97,  TOS: [32, 31, 31,... +1]   ,    flags      // read_str
  DEBUG    root:machine.py:28 TICK: 1087,  PC: 692,  AR:  30,  MEM_OUT:  97,  TOS: [32, 31, 31,... +1]   ,    swap       // read_str
  DEBUG    root:machine.py:28 TICK: 1088,  PC: 693,  AR:  30,  MEM_OUT:  97,  TOS: [31, 32, 31,... +1]   ,    store      // read_str
  DEBUG    root:machine.py:28 TICK: 1090,  PC: 694,  AR:  31,  MEM_OUT:  32,  TOS: [32, 31, -1]          ,    pop        // read_str
  DEBUG    root:machine.py:28 TICK: 1091,  PC: 695,  AR:  31,  MEM_OUT:  32,  TOS: [31, -1]              ,    inc        // read_str
  DEBUG    root:machine.py:28 TICK: 1092,  PC: 696,  AR:  31,  MEM_OUT:  32,  TOS: [32, -1]              ,    jump_non_zero -8 // read_str
  DEBUG    root:machine.py:28 TICK: 1093,  PC: 689,  AR:  31,  MEM_OUT:  32,  TOS: [32, -1]              ,    dup        // read_str
  DEBUG    root:machine.py:28 TICK: 1094,  PC: 690,  AR:  31,  MEM_OUT:  32,  TOS: [32, 32, -1]          ,    read 0     // read_str
  DEBUG    root:data_path.py:42 ввод: t
  DEBUG    root:machine.py:28 TICK: 1095,  PC: 691,  AR:  31,  MEM_OUT:  32,  TOS: [116, 32, 32,... +1]  ,    flags      // read_str
  DEBUG    root:machine.py:28 TICK: 1096,  PC: 692,  AR:  31,  MEM_OUT:  32,  TOS: [116, 32, 32,... +1]  ,    swap       // read_str
  DEBUG    root:machine.py:28 TICK: 1097,  PC: 693,  AR:  31,  MEM_OUT:  32,  TOS: [32, 116, 32,... +1]  ,    store      // read_str
  DEBUG    root:machine.py:28 TICK: 1099,  PC: 694,  AR:  32,  MEM_OUT: 116,  TOS: [116, 32, -1]         ,    pop        // read_str
  DEBUG    root:machine.py:28 TICK: 1100,  PC: 695,  AR:  32,  MEM_OUT: 116,  TOS: [32, -1]              ,    inc        // read_str
  DEBUG    root:machine.py:28 TICK: 1101,  PC: 696,  AR:  32,  MEM_OUT: 116,  TOS: [33, -1]              ,    jump_non_zero -8 // read_str
  DEBUG    root:machine.py:28 TICK: 1102,  PC: 689,  AR:  32,  MEM_OUT: 116,  TOS: [33, -1]              ,    dup        // read_str
  DEBUG    root:machine.py:28 TICK: 1103,  PC: 690,  AR:  32,  MEM_OUT: 116,  TOS: [33, 33, -1]          ,    read 0     // read_str
  DEBUG    root:data_path.py:42 ввод: e
  DEBUG    root:machine.py:28 TICK: 1104,  PC: 691,  AR:  32,  MEM_OUT: 116,  TOS: [101, 33, 33,... +1]  ,    flags      // read_str
  DEBUG    root:machine.py:28 TICK: 1105,  PC: 692,  AR:  32,  MEM_OUT: 116,  TOS: [101, 33, 33,... +1]  ,    swap       // read_str
  DEBUG    root:machine.py:28 TICK: 1106,  PC: 693,  AR:  32,  MEM_OUT: 116,  TOS: [33, 101, 33,... +1]  ,    store      // read_str
  DEBUG    root:machine.py:28 TICK: 1108,  PC: 694,  AR:  33,  MEM_OUT: 101,  TOS: [101, 33, -1]         ,    pop        // read_str
  DEBUG    root:machine.py:28 TICK: 1109,  PC: 695,  AR:  33,  MEM_OUT: 101,  TOS: [33, -1]              ,    inc        // read_str
  DEBUG    root:machine.py:28 TICK: 1110,  PC: 696,  AR:  33,  MEM_OUT: 101,  TOS: [34, -1]              ,    jump_non_zero -8 // read_str
  DEBUG    root:machine.py:28 TICK: 1111,  PC: 689,  AR:  33,  MEM_OUT: 101,  TOS: [34, -1]              ,    dup        // read_str
  DEBUG    root:machine.py:28 TICK: 1112,  PC: 690,  AR:  33,  MEM_OUT: 101,  TOS: [34, 34, -1]          ,    read 0     // read_str
  DEBUG    root:data_path.py:42 ввод: s
  DEBUG    root:machine.py:28 TICK: 1113,  PC: 691,  AR:  33,  MEM_OUT: 101,  TOS: [115, 34, 34,... +1]  ,    flags      // read_str
  DEBUG    root:machine.py:28 TICK: 1114,  PC: 692,  AR:  33,  MEM_OUT: 101,  TOS: [115, 34, 34,... +1]  ,    swap       // read_str
  DEBUG    root:machine.py:28 TICK: 1115,  PC: 693,  AR:  33,  MEM_OUT: 101,  TOS: [34, 115, 34,... +1]  ,    store      // read_str
  DEBUG    root:machine.py:28 TICK: 1117,  PC: 694,  AR:  34,  MEM_OUT: 115,  TOS: [115, 34, -1]         ,    pop        // read_str
  DEBUG    root:machine.py:28 TICK: 1118,  PC: 695,  AR:  34,  MEM_OUT: 115,  TOS: [34, -1]              ,    inc        // read_str
  DEBUG    root:machine.py:28 TICK: 1119,  PC: 696,  AR:  34,  MEM_OUT: 115,  TOS: [35, -1]              ,    jump_non_zero -8 // read_str
  DEBUG    root:machine.py:28 TICK: 1120,  PC: 689,  AR:  34,  MEM_OUT: 115,  TOS: [35, -1]              ,    dup        // read_str
  DEBUG    root:machine.py:28 TICK: 1121,  PC: 690,  AR:  34,  MEM_OUT: 115,  TOS: [35, 35, -1]          ,    read 0     // read_str
  DEBUG    root:data_path.py:42 ввод: t
  DEBUG    root:machine.py:28 TICK: 1122,  PC: 691,  AR:  34,  MEM_OUT: 115,  TOS: [116, 35, 35,... +1]  ,    flags      // read_str
  DEBUG    root:machine.py:28 TICK: 1123,  PC: 692,  AR:  34,  MEM_OUT: 115,  TOS: [116, 35, 35,... +1]  ,    swap       // read_str
  DEBUG    root:machine.py:28 TICK: 1124,  PC: 693,  AR:  34,  MEM_OUT: 115,  TOS: [35, 116, 35,... +1]  ,    store      // read_str
  DEBUG    root:machine.py:28 TICK: 1126,  PC: 694,  AR:  35,  MEM_OUT: 116,  TOS: [116, 35, -1]         ,    pop        // read_str
  DEBUG    root:machine.py:28 TICK: 1127,  PC: 695,  AR:  35,  MEM_OUT: 116,  TOS: [35, -1]              ,    inc        // read_str
  DEBUG    root:machine.py:28 TICK: 1128,  PC: 696,  AR:  35,  MEM_OUT: 116,  TOS: [36, -1]              ,    jump_non_zero -8 // read_str
  DEBUG    root:machine.py:28 TICK: 1129,  PC: 689,  AR:  35,  MEM_OUT: 116,  TOS: [36, -1]              ,    dup        // read_str
  DEBUG    root:machine.py:28 TICK: 1130,  PC: 690,  AR:  35,  MEM_OUT: 116,  TOS: [36, 36, -1]          ,    read 0     // read_str
  DEBUG    root:data_path.py:42 ввод: \0
  DEBUG    root:machine.py:28 TICK: 1131,  PC: 691,  AR:  35,  MEM_OUT: 116,  TOS: [0, 36, 36,... +1]    ,    flags      // read_str
  DEBUG    root:machine.py:28 TICK: 1132,  PC: 692,  AR:  35,  MEM_OUT: 116,  TOS: [0, 36, 36,... +1]    ,    swap       // read_str
  DEBUG    root:machine.py:28 TICK: 1133,  PC: 693,  AR:  35,  MEM_OUT: 116,  TOS: [36, 0, 36,... +1]    ,    store      // read_str
  DEBUG    root:machine.py:28 TICK: 1135,  PC: 694,  AR:  36,  MEM_OUT:   0,  TOS: [0, 36, -1]           ,    pop        // read_str
  DEBUG    root:machine.py:28 TICK: 1136,  PC: 695,  AR:  36,  MEM_OUT:   0,  TOS: [36, -1]              ,    inc        // read_str
  DEBUG    root:machine.py:28 TICK: 1137,  PC: 696,  AR:  36,  MEM_OUT:   0,  TOS: [37, -1]              ,    jump_non_zero -8 // read_str
  DEBUG    root:machine.py:28 TICK: 1138,  PC: 697,  AR:  36,  MEM_OUT:   0,  TOS: [37, -1]              ,    pop        // read_str
  DEBUG    root:machine.py:28 TICK: 1139,  PC: 698,  AR:  36,  MEM_OUT:   0,  TOS: [-1]                  ,    push 23    // read_str
  DEBUG    root:machine.py:28 TICK: 1140,  PC: 699,  AR:  36,  MEM_OUT:   0,  TOS: [23, -1]              ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 1141,  PC: 700,  AR:  36,  MEM_OUT:   0,  TOS: [23, -1]              ,    jump_plus 3 // print_int
  DEBUG    root:machine.py:28 TICK: 1142,  PC: 704,  AR:  36,  MEM_OUT:   0,  TOS: [23, -1]              ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 1143,  PC: 705,  AR:  36,  MEM_OUT:   0,  TOS: [23, 23, -1]          ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 1144,  PC: 706,  AR:  36,  MEM_OUT:   0,  TOS: [10, 23, 23,... +1]   ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 1145,  PC: 707,  AR:  36,  MEM_OUT:   0,  TOS: [3, 23, -1]           ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 1146,  PC: 708,  AR:  36,  MEM_OUT:   0,  TOS: [48, 3, 23,... +1]    ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 1147,  PC: 709,  AR:  36,  MEM_OUT:   0,  TOS: [51, 23, -1]          ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 1148,  PC: 710,  AR:  36,  MEM_OUT:   0,  TOS: [23, 51, -1]          ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 1149,  PC: 711,  AR:  36,  MEM_OUT:   0,  TOS: [10, 23, 51,... +1]   ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 1150,  PC: 712,  AR:  36,  MEM_OUT:   0,  TOS: [2, 51, -1]           ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 1151,  PC: 713,  AR:  36,  MEM_OUT:   0,  TOS: [2, 51, -1]           ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 1152,  PC: 704,  AR:  36,  MEM_OUT:   0,  TOS: [2, 51, -1]           ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 1153,  PC: 705,  AR:  36,  MEM_OUT:   0,  TOS: [2, 2, 51,... +1]     ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 1154,  PC: 706,  AR:  36,  MEM_OUT:   0,  TOS: [10, 2, 2,... +2]     ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 1155,  PC: 707,  AR:  36,  MEM_OUT:   0,  TOS: [2, 2, 51,... +1]     ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 1156,  PC: 708,  AR:  36,  MEM_OUT:   0,  TOS: [48, 2, 2,... +2]     ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 1157,  PC: 709,  AR:  36,  MEM_OUT:   0,  TOS: [50, 2, 51,... +1]    ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 1158,  PC: 710,  AR:  36,  MEM_OUT:   0,  TOS: [2, 50, 51,... +1]    ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 1159,  PC: 711,  AR:  36,  MEM_OUT:   0,  TOS: [10, 2, 50,... +2]    ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 1160,  PC: 712,  AR:  36,  MEM_OUT:   0,  TOS: [0, 50, 51,... +1]    ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 1161,  PC: 713,  AR:  36,  MEM_OUT:   0,  TOS: [0, 50, 51,... +1]    ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 1162,  PC: 714,  AR:  36,  MEM_OUT:   0,  TOS: [0, 50, 51,... +1]    ,    pop        // print_int
  DEBUG    root:machine.py:28 TICK: 1163,  PC: 715,  AR:  36,  MEM_OUT:   0,  TOS: [50, 51, -1]          ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 1164,  PC: 716,  AR:  36,  MEM_OUT:   0,  TOS: [50, 51, -1]          ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 1165,  PC: 717,  AR:  36,  MEM_OUT:   0,  TOS: [50, 51, -1]          ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 2
  DEBUG    root:machine.py:28 TICK: 1166,  PC: 718,  AR:  36,  MEM_OUT:   0,  TOS: [51, -1]              ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 1167,  PC: 715,  AR:  36,  MEM_OUT:   0,  TOS: [51, -1]              ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 1168,  PC: 716,  AR:  36,  MEM_OUT:   0,  TOS: [51, -1]              ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 1169,  PC: 717,  AR:  36,  MEM_OUT:   0,  TOS: [51, -1]              ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 3
  DEBUG    root:machine.py:28 TICK: 1170,  PC: 718,  AR:  36,  MEM_OUT:   0,  TOS: [-1]                  ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 1171,  PC: 715,  AR:  36,  MEM_OUT:   0,  TOS: [-1]                  ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 1172,  PC: 716,  AR:  36,  MEM_OUT:   0,  TOS: [-1]                  ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 1173,  PC: 719,  AR:  36,  MEM_OUT:   0,  TOS: [-1]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 1174,  PC: 720,  AR:  36,  MEM_OUT:   0,  TOS: []                    ,    push 10    // (number literal: 10)
  DEBUG    root:machine.py:28 TICK: 1175,  PC: 721,  AR:  36,  MEM_OUT:   0,  TOS: [10]                  ,    dup        // print_char
  DEBUG    root:machine.py:28 TICK: 1176,  PC: 722,  AR:  36,  MEM_OUT:   0,  TOS: [10, 10]              ,    write 0    // print_char
  DEBUG    root:control_unit.py:88 вывод: 

  DEBUG    root:machine.py:28 TICK: 1177,  PC: 723,  AR:  36,  MEM_OUT:   0,  TOS: [10]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 1178,  PC: 724,  AR:  36,  MEM_OUT:   0,  TOS: []                    ,    push -1    // print_int
  DEBUG    root:machine.py:28 TICK: 1179,  PC: 725,  AR:  36,  MEM_OUT:   0,  TOS: [-1]                  ,    push 0     // (number literal: 0)
  DEBUG    root:machine.py:28 TICK: 1180,  PC: 726,  AR:  36,  MEM_OUT:   0,  TOS: [0, -1]               ,    flags      // loop_while
  DEBUG    root:machine.py:28 TICK: 1181,  PC: 727,  AR:  36,  MEM_OUT:   0,  TOS: [0, -1]               ,    pop        // loop_while
  DEBUG    root:machine.py:28 TICK: 1182,  PC: 728,  AR:  36,  MEM_OUT:   0,  TOS: [-1]                  ,    jump_zero 3 // loop_while
  DEBUG    root:machine.py:28 TICK: 1183,  PC: 732,  AR:  36,  MEM_OUT:   0,  TOS: [-1]                  ,    push 0     // loop_while
  DEBUG    root:machine.py:28 TICK: 1184,  PC: 733,  AR:  36,  MEM_OUT:   0,  TOS: [0, -1]               ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 1185,  PC: 734,  AR:  36,  MEM_OUT:   0,  TOS: [0, -1]               ,    jump_plus 3 // print_int
  DEBUG    root:machine.py:28 TICK: 1186,  PC: 738,  AR:  36,  MEM_OUT:   0,  TOS: [0, -1]               ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 1187,  PC: 739,  AR:  36,  MEM_OUT:   0,  TOS: [0, 0, -1]            ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 1188,  PC: 740,  AR:  36,  MEM_OUT:   0,  TOS: [10, 0, 0,... +1]     ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 1189,  PC: 741,  AR:  36,  MEM_OUT:   0,  TOS: [0, 0, -1]            ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 1190,  PC: 742,  AR:  36,  MEM_OUT:   0,  TOS: [48, 0, 0,... +1]     ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 1191,  PC: 743,  AR:  36,  MEM_OUT:   0,  TOS: [48, 0, -1]           ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 1192,  PC: 744,  AR:  36,  MEM_OUT:   0,  TOS: [0, 48, -1]           ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 1193,  PC: 745,  AR:  36,  MEM_OUT:   0,  TOS: [10, 0, 48,... +1]    ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 1194,  PC: 746,  AR:  36,  MEM_OUT:   0,  TOS: [0, 48, -1]           ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 1195,  PC: 747,  AR:  36,  MEM_OUT:   0,  TOS: [0, 48, -1]           ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 1196,  PC: 748,  AR:  36,  MEM_OUT:   0,  TOS: [0, 48, -1]           ,    pop        // print_int
  DEBUG    root:machine.py:28 TICK: 1197,  PC: 749,  AR:  36,  MEM_OUT:   0,  TOS: [48, -1]              ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 1198,  PC: 750,  AR:  36,  MEM_OUT:   0,  TOS: [48, -1]              ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 1199,  PC: 751,  AR:  36,  MEM_OUT:   0,  TOS: [48, -1]              ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 0
  DEBUG    root:machine.py:28 TICK: 1200,  PC: 752,  AR:  36,  MEM_OUT:   0,  TOS: [-1]                  ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 1201,  PC: 749,  AR:  36,  MEM_OUT:   0,  TOS: [-1]                  ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 1202,  PC: 750,  AR:  36,  MEM_OUT:   0,  TOS: [-1]                  ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 1203,  PC: 753,  AR:  36,  MEM_OUT:   0,  TOS: [-1]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 1204,  PC: 754,  AR:  36,  MEM_OUT:   0,  TOS: []                    ,    push 10    // (number literal: 10)
  DEBUG    root:machine.py:28 TICK: 1205,  PC: 755,  AR:  36,  MEM_OUT:   0,  TOS: [10]                  ,    dup        // print_char
  DEBUG    root:machine.py:28 TICK: 1206,  PC: 756,  AR:  36,  MEM_OUT:   0,  TOS: [10, 10]              ,    write 0    // print_char
  DEBUG    root:control_unit.py:88 вывод: 

  DEBUG    root:machine.py:28 TICK: 1207,  PC: 757,  AR:  36,  MEM_OUT:   0,  TOS: [10]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 1208,  PC: 758,  AR:  36,  MEM_OUT:   0,  TOS: []                    ,    push -1    // print_int
  DEBUG    root:machine.py:28 TICK: 1209,  PC: 759,  AR:  36,  MEM_OUT:   0,  TOS: [-1]                  ,    push 11    // (static string)
  DEBUG    root:machine.py:28 TICK: 1210,  PC: 760,  AR:  36,  MEM_OUT:   0,  TOS: [11, -1]              ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 1211,  PC: 761,  AR:  36,  MEM_OUT:   0,  TOS: [11, -1]              ,    jump_plus 3 // print_int
  DEBUG    root:machine.py:28 TICK: 1212,  PC: 765,  AR:  36,  MEM_OUT:   0,  TOS: [11, -1]              ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 1213,  PC: 766,  AR:  36,  MEM_OUT:   0,  TOS: [11, 11, -1]          ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 1214,  PC: 767,  AR:  36,  MEM_OUT:   0,  TOS: [10, 11, 11,... +1]   ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 1215,  PC: 768,  AR:  36,  MEM_OUT:   0,  TOS: [1, 11, -1]           ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 1216,  PC: 769,  AR:  36,  MEM_OUT:   0,  TOS: [48, 1, 11,... +1]    ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 1217,  PC: 770,  AR:  36,  MEM_OUT:   0,  TOS: [49, 11, -1]          ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 1218,  PC: 771,  AR:  36,  MEM_OUT:   0,  TOS: [11, 49, -1]          ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 1219,  PC: 772,  AR:  36,  MEM_OUT:   0,  TOS: [10, 11, 49,... +1]   ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 1220,  PC: 773,  AR:  36,  MEM_OUT:   0,  TOS: [1, 49, -1]           ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 1221,  PC: 774,  AR:  36,  MEM_OUT:   0,  TOS: [1, 49, -1]           ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 1222,  PC: 765,  AR:  36,  MEM_OUT:   0,  TOS: [1, 49, -1]           ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 1223,  PC: 766,  AR:  36,  MEM_OUT:   0,  TOS: [1, 1, 49,... +1]     ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 1224,  PC: 767,  AR:  36,  MEM_OUT:   0,  TOS: [10, 1, 1,... +2]     ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 1225,  PC: 768,  AR:  36,  MEM_OUT:   0,  TOS: [1, 1, 49,... +1]     ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 1226,  PC: 769,  AR:  36,  MEM_OUT:   0,  TOS: [48, 1, 1,... +2]     ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 1227,  PC: 770,  AR:  36,  MEM_OUT:   0,  TOS: [49, 1, 49,... +1]    ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 1228,  PC: 771,  AR:  36,  MEM_OUT:   0,  TOS: [1, 49, 49,... +1]    ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 1229,  PC: 772,  AR:  36,  MEM_OUT:   0,  TOS: [10, 1, 49,... +2]    ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 1230,  PC: 773,  AR:  36,  MEM_OUT:   0,  TOS: [0, 49, 49,... +1]    ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 1231,  PC: 774,  AR:  36,  MEM_OUT:   0,  TOS: [0, 49, 49,... +1]    ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 1232,  PC: 775,  AR:  36,  MEM_OUT:   0,  TOS: [0, 49, 49,... +1]    ,    pop        // print_int
  DEBUG    root:machine.py:28 TICK: 1233,  PC: 776,  AR:  36,  MEM_OUT:   0,  TOS: [49, 49, -1]          ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 1234,  PC: 777,  AR:  36,  MEM_OUT:   0,  TOS: [49, 49, -1]          ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 1235,  PC: 778,  AR:  36,  MEM_OUT:   0,  TOS: [49, 49, -1]          ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 1
  DEBUG    root:machine.py:28 TICK: 1236,  PC: 779,  AR:  36,  MEM_OUT:   0,  TOS: [49, -1]              ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 1237,  PC: 776,  AR:  36,  MEM_OUT:   0,  TOS: [49, -1]              ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 1238,  PC: 777,  AR:  36,  MEM_OUT:   0,  TOS: [49, -1]              ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 1239,  PC: 778,  AR:  36,  MEM_OUT:   0,  TOS: [49, -1]              ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 1
  DEBUG    root:machine.py:28 TICK: 1240,  PC: 779,  AR:  36,  MEM_OUT:   0,  TOS: [-1]                  ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 1241,  PC: 776,  AR:  36,  MEM_OUT:   0,  TOS: [-1]                  ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 1242,  PC: 777,  AR:  36,  MEM_OUT:   0,  TOS: [-1]                  ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 1243,  PC: 780,  AR:  36,  MEM_OUT:   0,  TOS: [-1]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 1244,  PC: 781,  AR:  36,  MEM_OUT:   0,  TOS: []                    ,    push 10    // (number literal: 10)
  DEBUG    root:machine.py:28 TICK: 1245,  PC: 782,  AR:  36,  MEM_OUT:   0,  TOS: [10]                  ,    dup        // print_char
  DEBUG    root:machine.py:28 TICK: 1246,  PC: 783,  AR:  36,  MEM_OUT:   0,  TOS: [10, 10]              ,    write 0    // print_char
  DEBUG    root:control_unit.py:88 вывод: 

  DEBUG    root:machine.py:28 TICK: 1247,  PC: 784,  AR:  36,  MEM_OUT:   0,  TOS: [10]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 1248,  PC: 785,  AR:  36,  MEM_OUT:   0,  TOS: []                    ,    push -1    // print_int
  DEBUG    root:machine.py:28 TICK: 1249,  PC: 786,  AR:  36,  MEM_OUT:   0,  TOS: [-1]                  ,    push 1234  // (number literal: 1234)
  DEBUG    root:machine.py:28 TICK: 1250,  PC: 787,  AR:  36,  MEM_OUT:   0,  TOS: [1234, -1]            ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 1251,  PC: 788,  AR:  36,  MEM_OUT:   0,  TOS: [1234, -1]            ,    jump_plus 3 // print_int
  DEBUG    root:machine.py:28 TICK: 1252,  PC: 792,  AR:  36,  MEM_OUT:   0,  TOS: [1234, -1]            ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 1253,  PC: 793,  AR:  36,  MEM_OUT:   0,  TOS: [1234, 1234, -1]      ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 1254,  PC: 794,  AR:  36,  MEM_OUT:   0,  TOS: [10, 1234, 1234,... +1],    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 1255,  PC: 795,  AR:  36,  MEM_OUT:   0,  TOS: [4, 1234, -1]         ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 1256,  PC: 796,  AR:  36,  MEM_OUT:   0,  TOS: [48, 4, 1234,... +1]  ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 1257,  PC: 797,  AR:  36,  MEM_OUT:   0,  TOS: [52, 1234, -1]        ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 1258,  PC: 798,  AR:  36,  MEM_OUT:   0,  TOS: [1234, 52, -1]        ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 1259,  PC: 799,  AR:  36,  MEM_OUT:   0,  TOS: [10, 1234, 52,... +1] ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 1260,  PC: 800,  AR:  36,  MEM_OUT:   0,  TOS: [123, 52, -1]         ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 1261,  PC: 801,  AR:  36,  MEM_OUT:   0,  TOS: [123, 52, -1]         ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 1262,  PC: 792,  AR:  36,  MEM_OUT:   0,  TOS: [123, 52, -1]         ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 1263,  PC: 793,  AR:  36,  MEM_OUT:   0,  TOS: [123, 123, 52,... +1] ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 1264,  PC: 794,  AR:  36,  MEM_OUT:   0,  TOS: [10, 123, 123,... +2] ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 1265,  PC: 795,  AR:  36,  MEM_OUT:   0,  TOS: [3, 123, 52,... +1]   ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 1266,  PC: 796,  AR:  36,  MEM_OUT:   0,  TOS: [48, 3, 123,... +2]   ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 1267,  PC: 797,  AR:  36,  MEM_OUT:   0,  TOS: [51, 123, 52,... +1]  ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 1268,  PC: 798,  AR:  36,  MEM_OUT:   0,  TOS: [123, 51, 52,... +1]  ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 1269,  PC: 799,  AR:  36,  MEM_OUT:   0,  TOS: [10, 123, 51,... +2]  ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 1270,  PC: 800,  AR:  36,  MEM_OUT:   0,  TOS: [12, 51, 52,... +1]   ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 1271,  PC: 801,  AR:  36,  MEM_OUT:   0,  TOS: [12, 51, 52,... +1]   ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 1272,  PC: 792,  AR:  36,  MEM_OUT:   0,  TOS: [12, 51, 52,... +1]   ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 1273,  PC: 793,  AR:  36,  MEM_OUT:   0,  TOS: [12, 12, 51,... +2]   ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 1274,  PC: 794,  AR:  36,  MEM_OUT:   0,  TOS: [10, 12, 12,... +3]   ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 1275,  PC: 795,  AR:  36,  MEM_OUT:   0,  TOS: [2, 12, 51,... +2]    ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 1276,  PC: 796,  AR:  36,  MEM_OUT:   0,  TOS: [48, 2, 12,... +3]    ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 1277,  PC: 797,  AR:  36,  MEM_OUT:   0,  TOS: [50, 12, 51,... +2]   ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 1278,  PC: 798,  AR:  36,  MEM_OUT:   0,  TOS: [12, 50, 51,... +2]   ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 1279,  PC: 799,  AR:  36,  MEM_OUT:   0,  TOS: [10, 12, 50,... +3]   ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 1280,  PC: 800,  AR:  36,  MEM_OUT:   0,  TOS: [1, 50, 51,... +2]    ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 1281,  PC: 801,  AR:  36,  MEM_OUT:   0,  TOS: [1, 50, 51,... +2]    ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 1282,  PC: 792,  AR:  36,  MEM_OUT:   0,  TOS: [1, 50, 51,... +2]    ,    dup        // print_int
  DEBUG    root:machine.py:28 TICK: 1283,  PC: 793,  AR:  36,  MEM_OUT:   0,  TOS: [1, 1, 50,... +3]     ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 1284,  PC: 794,  AR:  36,  MEM_OUT:   0,  TOS: [10, 1, 1,... +4]     ,    mod        // print_int
  DEBUG    root:machine.py:28 TICK: 1285,  PC: 795,  AR:  36,  MEM_OUT:   0,  TOS: [1, 1, 50,... +3]     ,    push 48    // print_int
  DEBUG    root:machine.py:28 TICK: 1286,  PC: 796,  AR:  36,  MEM_OUT:   0,  TOS: [48, 1, 1,... +4]     ,    add        // print_int
  DEBUG    root:machine.py:28 TICK: 1287,  PC: 797,  AR:  36,  MEM_OUT:   0,  TOS: [49, 1, 50,... +3]    ,    swap       // print_int
  DEBUG    root:machine.py:28 TICK: 1288,  PC: 798,  AR:  36,  MEM_OUT:   0,  TOS: [1, 49, 50,... +3]    ,    push 10    // print_int
  DEBUG    root:machine.py:28 TICK: 1289,  PC: 799,  AR:  36,  MEM_OUT:   0,  TOS: [10, 1, 49,... +4]    ,    div        // print_int
  DEBUG    root:machine.py:28 TICK: 1290,  PC: 800,  AR:  36,  MEM_OUT:   0,  TOS: [0, 49, 50,... +3]    ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 1291,  PC: 801,  AR:  36,  MEM_OUT:   0,  TOS: [0, 49, 50,... +3]    ,    jump_non_zero -10 // print_int
  DEBUG    root:machine.py:28 TICK: 1292,  PC: 802,  AR:  36,  MEM_OUT:   0,  TOS: [0, 49, 50,... +3]    ,    pop        // print_int
  DEBUG    root:machine.py:28 TICK: 1293,  PC: 803,  AR:  36,  MEM_OUT:   0,  TOS: [49, 50, 51,... +2]   ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 1294,  PC: 804,  AR:  36,  MEM_OUT:   0,  TOS: [49, 50, 51,... +2]   ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 1295,  PC: 805,  AR:  36,  MEM_OUT:   0,  TOS: [49, 50, 51,... +2]   ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 1
  DEBUG    root:machine.py:28 TICK: 1296,  PC: 806,  AR:  36,  MEM_OUT:   0,  TOS: [50, 51, 52,... +1]   ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 1297,  PC: 803,  AR:  36,  MEM_OUT:   0,  TOS: [50, 51, 52,... +1]   ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 1298,  PC: 804,  AR:  36,  MEM_OUT:   0,  TOS: [50, 51, 52,... +1]   ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 1299,  PC: 805,  AR:  36,  MEM_OUT:   0,  TOS: [50, 51, 52,... +1]   ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 2
  DEBUG    root:machine.py:28 TICK: 1300,  PC: 806,  AR:  36,  MEM_OUT:   0,  TOS: [51, 52, -1]          ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 1301,  PC: 803,  AR:  36,  MEM_OUT:   0,  TOS: [51, 52, -1]          ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 1302,  PC: 804,  AR:  36,  MEM_OUT:   0,  TOS: [51, 52, -1]          ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 1303,  PC: 805,  AR:  36,  MEM_OUT:   0,  TOS: [51, 52, -1]          ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 3
  DEBUG    root:machine.py:28 TICK: 1304,  PC: 806,  AR:  36,  MEM_OUT:   0,  TOS: [52, -1]              ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 1305,  PC: 803,  AR:  36,  MEM_OUT:   0,  TOS: [52, -1]              ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 1306,  PC: 804,  AR:  36,  MEM_OUT:   0,  TOS: [52, -1]              ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 1307,  PC: 805,  AR:  36,  MEM_OUT:   0,  TOS: [52, -1]              ,    write 0    // print_int
  DEBUG    root:control_unit.py:88 вывод: 4
  DEBUG    root:machine.py:28 TICK: 1308,  PC: 806,  AR:  36,  MEM_OUT:   0,  TOS: [-1]                  ,    jump -4    // print_int
  DEBUG    root:machine.py:28 TICK: 1309,  PC: 803,  AR:  36,  MEM_OUT:   0,  TOS: [-1]                  ,    flags      // print_int
  DEBUG    root:machine.py:28 TICK: 1310,  PC: 804,  AR:  36,  MEM_OUT:   0,  TOS: [-1]                  ,    jump_minus 2 // print_int
  DEBUG    root:machine.py:28 TICK: 1311,  PC: 807,  AR:  36,  MEM_OUT:   0,  TOS: [-1]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK: 1312,  PC: 808,  AR:  36,  MEM_OUT:   0,  TOS: []                    ,    halt      
