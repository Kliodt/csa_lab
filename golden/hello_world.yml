in_source: |-
  (print_str "Hello world")

in_stdin: |
out_stdout: |
  ============================================================
  program counter: 10, ticks: 96.
  Вывод:
  Hello world

out_code: |-
  {
    "static_data": [
      72,
      101,
      108,
      108,
      111,
      32,
      119,
      111,
      114,
      108,
      100,
      0
    ],
    "code": [
      {
        "opcode": "push",
        "arg": 0,
        "term": "(static string)"
      },
      {
        "opcode": "dup",
        "arg": null,
        "term": "print_str"
      },
      {
        "opcode": "load",
        "arg": null,
        "term": "print_str"
      },
      {
        "opcode": "flags",
        "arg": null,
        "term": "print_str"
      },
      {
        "opcode": "jump_zero",
        "arg": 3,
        "term": "print_str"
      },
      {
        "opcode": "write",
        "arg": 0,
        "term": "print_str"
      },
      {
        "opcode": "inc",
        "arg": null,
        "term": "print_str"
      },
      {
        "opcode": "jump",
        "arg": -7,
        "term": "print_str"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "print_str"
      },
      {
        "opcode": "pop",
        "arg": null,
        "term": "(top-level expression)"
      },
      {
        "opcode": "halt",
        "arg": null,
        "term": null
      }
    ]
  }
out_log: |
  DEBUG    root:machine.py:25 TICK:   0,  PC:   0,  AR:   0,  MEM_OUT:  72,  TOS: []                    ,    push 0     // (static string)
  DEBUG    root:machine.py:28 TICK:   1,  PC:   1,  AR:   0,  MEM_OUT:  72,  TOS: [0]                   ,    dup        // print_str
  DEBUG    root:machine.py:28 TICK:   2,  PC:   2,  AR:   0,  MEM_OUT:  72,  TOS: [0, 0]                ,    load       // print_str
  DEBUG    root:machine.py:28 TICK:   4,  PC:   3,  AR:   0,  MEM_OUT:  72,  TOS: [72, 0]               ,    flags      // print_str
  DEBUG    root:machine.py:28 TICK:   5,  PC:   4,  AR:   0,  MEM_OUT:  72,  TOS: [72, 0]               ,    jump_zero 3 // print_str
  DEBUG    root:machine.py:28 TICK:   6,  PC:   5,  AR:   0,  MEM_OUT:  72,  TOS: [72, 0]               ,    write 0    // print_str
  DEBUG    root:control_unit.py:88 вывод: H
  DEBUG    root:machine.py:28 TICK:   7,  PC:   6,  AR:   0,  MEM_OUT:  72,  TOS: [0]                   ,    inc        // print_str
  DEBUG    root:machine.py:28 TICK:   8,  PC:   7,  AR:   0,  MEM_OUT:  72,  TOS: [1]                   ,    jump -7    // print_str
  DEBUG    root:machine.py:28 TICK:   9,  PC:   1,  AR:   0,  MEM_OUT:  72,  TOS: [1]                   ,    dup        // print_str
  DEBUG    root:machine.py:28 TICK:  10,  PC:   2,  AR:   0,  MEM_OUT:  72,  TOS: [1, 1]                ,    load       // print_str
  DEBUG    root:machine.py:28 TICK:  12,  PC:   3,  AR:   1,  MEM_OUT: 101,  TOS: [101, 1]              ,    flags      // print_str
  DEBUG    root:machine.py:28 TICK:  13,  PC:   4,  AR:   1,  MEM_OUT: 101,  TOS: [101, 1]              ,    jump_zero 3 // print_str
  DEBUG    root:machine.py:28 TICK:  14,  PC:   5,  AR:   1,  MEM_OUT: 101,  TOS: [101, 1]              ,    write 0    // print_str
  DEBUG    root:control_unit.py:88 вывод: e
  DEBUG    root:machine.py:28 TICK:  15,  PC:   6,  AR:   1,  MEM_OUT: 101,  TOS: [1]                   ,    inc        // print_str
  DEBUG    root:machine.py:28 TICK:  16,  PC:   7,  AR:   1,  MEM_OUT: 101,  TOS: [2]                   ,    jump -7    // print_str
  DEBUG    root:machine.py:28 TICK:  17,  PC:   1,  AR:   1,  MEM_OUT: 101,  TOS: [2]                   ,    dup        // print_str
  DEBUG    root:machine.py:28 TICK:  18,  PC:   2,  AR:   1,  MEM_OUT: 101,  TOS: [2, 2]                ,    load       // print_str
  DEBUG    root:machine.py:28 TICK:  20,  PC:   3,  AR:   2,  MEM_OUT: 108,  TOS: [108, 2]              ,    flags      // print_str
  DEBUG    root:machine.py:28 TICK:  21,  PC:   4,  AR:   2,  MEM_OUT: 108,  TOS: [108, 2]              ,    jump_zero 3 // print_str
  DEBUG    root:machine.py:28 TICK:  22,  PC:   5,  AR:   2,  MEM_OUT: 108,  TOS: [108, 2]              ,    write 0    // print_str
  DEBUG    root:control_unit.py:88 вывод: l
  DEBUG    root:machine.py:28 TICK:  23,  PC:   6,  AR:   2,  MEM_OUT: 108,  TOS: [2]                   ,    inc        // print_str
  DEBUG    root:machine.py:28 TICK:  24,  PC:   7,  AR:   2,  MEM_OUT: 108,  TOS: [3]                   ,    jump -7    // print_str
  DEBUG    root:machine.py:28 TICK:  25,  PC:   1,  AR:   2,  MEM_OUT: 108,  TOS: [3]                   ,    dup        // print_str
  DEBUG    root:machine.py:28 TICK:  26,  PC:   2,  AR:   2,  MEM_OUT: 108,  TOS: [3, 3]                ,    load       // print_str
  DEBUG    root:machine.py:28 TICK:  28,  PC:   3,  AR:   3,  MEM_OUT: 108,  TOS: [108, 3]              ,    flags      // print_str
  DEBUG    root:machine.py:28 TICK:  29,  PC:   4,  AR:   3,  MEM_OUT: 108,  TOS: [108, 3]              ,    jump_zero 3 // print_str
  DEBUG    root:machine.py:28 TICK:  30,  PC:   5,  AR:   3,  MEM_OUT: 108,  TOS: [108, 3]              ,    write 0    // print_str
  DEBUG    root:control_unit.py:88 вывод: l
  DEBUG    root:machine.py:28 TICK:  31,  PC:   6,  AR:   3,  MEM_OUT: 108,  TOS: [3]                   ,    inc        // print_str
  DEBUG    root:machine.py:28 TICK:  32,  PC:   7,  AR:   3,  MEM_OUT: 108,  TOS: [4]                   ,    jump -7    // print_str
  DEBUG    root:machine.py:28 TICK:  33,  PC:   1,  AR:   3,  MEM_OUT: 108,  TOS: [4]                   ,    dup        // print_str
  DEBUG    root:machine.py:28 TICK:  34,  PC:   2,  AR:   3,  MEM_OUT: 108,  TOS: [4, 4]                ,    load       // print_str
  DEBUG    root:machine.py:28 TICK:  36,  PC:   3,  AR:   4,  MEM_OUT: 111,  TOS: [111, 4]              ,    flags      // print_str
  DEBUG    root:machine.py:28 TICK:  37,  PC:   4,  AR:   4,  MEM_OUT: 111,  TOS: [111, 4]              ,    jump_zero 3 // print_str
  DEBUG    root:machine.py:28 TICK:  38,  PC:   5,  AR:   4,  MEM_OUT: 111,  TOS: [111, 4]              ,    write 0    // print_str
  DEBUG    root:control_unit.py:88 вывод: o
  DEBUG    root:machine.py:28 TICK:  39,  PC:   6,  AR:   4,  MEM_OUT: 111,  TOS: [4]                   ,    inc        // print_str
  DEBUG    root:machine.py:28 TICK:  40,  PC:   7,  AR:   4,  MEM_OUT: 111,  TOS: [5]                   ,    jump -7    // print_str
  DEBUG    root:machine.py:28 TICK:  41,  PC:   1,  AR:   4,  MEM_OUT: 111,  TOS: [5]                   ,    dup        // print_str
  DEBUG    root:machine.py:28 TICK:  42,  PC:   2,  AR:   4,  MEM_OUT: 111,  TOS: [5, 5]                ,    load       // print_str
  DEBUG    root:machine.py:28 TICK:  44,  PC:   3,  AR:   5,  MEM_OUT:  32,  TOS: [32, 5]               ,    flags      // print_str
  DEBUG    root:machine.py:28 TICK:  45,  PC:   4,  AR:   5,  MEM_OUT:  32,  TOS: [32, 5]               ,    jump_zero 3 // print_str
  DEBUG    root:machine.py:28 TICK:  46,  PC:   5,  AR:   5,  MEM_OUT:  32,  TOS: [32, 5]               ,    write 0    // print_str
  DEBUG    root:control_unit.py:88 вывод:  
  DEBUG    root:machine.py:28 TICK:  47,  PC:   6,  AR:   5,  MEM_OUT:  32,  TOS: [5]                   ,    inc        // print_str
  DEBUG    root:machine.py:28 TICK:  48,  PC:   7,  AR:   5,  MEM_OUT:  32,  TOS: [6]                   ,    jump -7    // print_str
  DEBUG    root:machine.py:28 TICK:  49,  PC:   1,  AR:   5,  MEM_OUT:  32,  TOS: [6]                   ,    dup        // print_str
  DEBUG    root:machine.py:28 TICK:  50,  PC:   2,  AR:   5,  MEM_OUT:  32,  TOS: [6, 6]                ,    load       // print_str
  DEBUG    root:machine.py:28 TICK:  52,  PC:   3,  AR:   6,  MEM_OUT: 119,  TOS: [119, 6]              ,    flags      // print_str
  DEBUG    root:machine.py:28 TICK:  53,  PC:   4,  AR:   6,  MEM_OUT: 119,  TOS: [119, 6]              ,    jump_zero 3 // print_str
  DEBUG    root:machine.py:28 TICK:  54,  PC:   5,  AR:   6,  MEM_OUT: 119,  TOS: [119, 6]              ,    write 0    // print_str
  DEBUG    root:control_unit.py:88 вывод: w
  DEBUG    root:machine.py:28 TICK:  55,  PC:   6,  AR:   6,  MEM_OUT: 119,  TOS: [6]                   ,    inc        // print_str
  DEBUG    root:machine.py:28 TICK:  56,  PC:   7,  AR:   6,  MEM_OUT: 119,  TOS: [7]                   ,    jump -7    // print_str
  DEBUG    root:machine.py:28 TICK:  57,  PC:   1,  AR:   6,  MEM_OUT: 119,  TOS: [7]                   ,    dup        // print_str
  DEBUG    root:machine.py:28 TICK:  58,  PC:   2,  AR:   6,  MEM_OUT: 119,  TOS: [7, 7]                ,    load       // print_str
  DEBUG    root:machine.py:28 TICK:  60,  PC:   3,  AR:   7,  MEM_OUT: 111,  TOS: [111, 7]              ,    flags      // print_str
  DEBUG    root:machine.py:28 TICK:  61,  PC:   4,  AR:   7,  MEM_OUT: 111,  TOS: [111, 7]              ,    jump_zero 3 // print_str
  DEBUG    root:machine.py:28 TICK:  62,  PC:   5,  AR:   7,  MEM_OUT: 111,  TOS: [111, 7]              ,    write 0    // print_str
  DEBUG    root:control_unit.py:88 вывод: o
  DEBUG    root:machine.py:28 TICK:  63,  PC:   6,  AR:   7,  MEM_OUT: 111,  TOS: [7]                   ,    inc        // print_str
  DEBUG    root:machine.py:28 TICK:  64,  PC:   7,  AR:   7,  MEM_OUT: 111,  TOS: [8]                   ,    jump -7    // print_str
  DEBUG    root:machine.py:28 TICK:  65,  PC:   1,  AR:   7,  MEM_OUT: 111,  TOS: [8]                   ,    dup        // print_str
  DEBUG    root:machine.py:28 TICK:  66,  PC:   2,  AR:   7,  MEM_OUT: 111,  TOS: [8, 8]                ,    load       // print_str
  DEBUG    root:machine.py:28 TICK:  68,  PC:   3,  AR:   8,  MEM_OUT: 114,  TOS: [114, 8]              ,    flags      // print_str
  DEBUG    root:machine.py:28 TICK:  69,  PC:   4,  AR:   8,  MEM_OUT: 114,  TOS: [114, 8]              ,    jump_zero 3 // print_str
  DEBUG    root:machine.py:28 TICK:  70,  PC:   5,  AR:   8,  MEM_OUT: 114,  TOS: [114, 8]              ,    write 0    // print_str
  DEBUG    root:control_unit.py:88 вывод: r
  DEBUG    root:machine.py:28 TICK:  71,  PC:   6,  AR:   8,  MEM_OUT: 114,  TOS: [8]                   ,    inc        // print_str
  DEBUG    root:machine.py:28 TICK:  72,  PC:   7,  AR:   8,  MEM_OUT: 114,  TOS: [9]                   ,    jump -7    // print_str
  DEBUG    root:machine.py:28 TICK:  73,  PC:   1,  AR:   8,  MEM_OUT: 114,  TOS: [9]                   ,    dup        // print_str
  DEBUG    root:machine.py:28 TICK:  74,  PC:   2,  AR:   8,  MEM_OUT: 114,  TOS: [9, 9]                ,    load       // print_str
  DEBUG    root:machine.py:28 TICK:  76,  PC:   3,  AR:   9,  MEM_OUT: 108,  TOS: [108, 9]              ,    flags      // print_str
  DEBUG    root:machine.py:28 TICK:  77,  PC:   4,  AR:   9,  MEM_OUT: 108,  TOS: [108, 9]              ,    jump_zero 3 // print_str
  DEBUG    root:machine.py:28 TICK:  78,  PC:   5,  AR:   9,  MEM_OUT: 108,  TOS: [108, 9]              ,    write 0    // print_str
  DEBUG    root:control_unit.py:88 вывод: l
  DEBUG    root:machine.py:28 TICK:  79,  PC:   6,  AR:   9,  MEM_OUT: 108,  TOS: [9]                   ,    inc        // print_str
  DEBUG    root:machine.py:28 TICK:  80,  PC:   7,  AR:   9,  MEM_OUT: 108,  TOS: [10]                  ,    jump -7    // print_str
  DEBUG    root:machine.py:28 TICK:  81,  PC:   1,  AR:   9,  MEM_OUT: 108,  TOS: [10]                  ,    dup        // print_str
  DEBUG    root:machine.py:28 TICK:  82,  PC:   2,  AR:   9,  MEM_OUT: 108,  TOS: [10, 10]              ,    load       // print_str
  DEBUG    root:machine.py:28 TICK:  84,  PC:   3,  AR:  10,  MEM_OUT: 100,  TOS: [100, 10]             ,    flags      // print_str
  DEBUG    root:machine.py:28 TICK:  85,  PC:   4,  AR:  10,  MEM_OUT: 100,  TOS: [100, 10]             ,    jump_zero 3 // print_str
  DEBUG    root:machine.py:28 TICK:  86,  PC:   5,  AR:  10,  MEM_OUT: 100,  TOS: [100, 10]             ,    write 0    // print_str
  DEBUG    root:control_unit.py:88 вывод: d
  DEBUG    root:machine.py:28 TICK:  87,  PC:   6,  AR:  10,  MEM_OUT: 100,  TOS: [10]                  ,    inc        // print_str
  DEBUG    root:machine.py:28 TICK:  88,  PC:   7,  AR:  10,  MEM_OUT: 100,  TOS: [11]                  ,    jump -7    // print_str
  DEBUG    root:machine.py:28 TICK:  89,  PC:   1,  AR:  10,  MEM_OUT: 100,  TOS: [11]                  ,    dup        // print_str
  DEBUG    root:machine.py:28 TICK:  90,  PC:   2,  AR:  10,  MEM_OUT: 100,  TOS: [11, 11]              ,    load       // print_str
  DEBUG    root:machine.py:28 TICK:  92,  PC:   3,  AR:  11,  MEM_OUT:   0,  TOS: [0, 11]               ,    flags      // print_str
  DEBUG    root:machine.py:28 TICK:  93,  PC:   4,  AR:  11,  MEM_OUT:   0,  TOS: [0, 11]               ,    jump_zero 3 // print_str
  DEBUG    root:machine.py:28 TICK:  94,  PC:   8,  AR:  11,  MEM_OUT:   0,  TOS: [0, 11]               ,    pop        // print_str
  DEBUG    root:machine.py:28 TICK:  95,  PC:   9,  AR:  11,  MEM_OUT:   0,  TOS: [11]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:28 TICK:  96,  PC:  10,  AR:  11,  MEM_OUT:   0,  TOS: []                    ,    halt      
