in_source: |-
  (print_str "Hello world")

in_stdin: |
out_stdout: |
  ============================================================
  program counter: 59, ticks: 157.
  Вывод:
  Hello world

out_code: |-
  [
    {
      "index": 254,
      "opcode": "jump",
      "arg": 0,
      "term": null
    },
    {
      "index": 194,
      "opcode": "push",
      "arg": 72,
      "term": "(static string, char: H)"
    },
    {
      "index": 195,
      "opcode": "push",
      "arg": 0,
      "term": null
    },
    {
      "index": 196,
      "opcode": "store",
      "arg": null,
      "term": null
    },
    {
      "index": 197,
      "opcode": "pop",
      "arg": null,
      "term": null
    },
    {
      "index": 198,
      "opcode": "push",
      "arg": 101,
      "term": "(static string, char: e)"
    },
    {
      "index": 199,
      "opcode": "push",
      "arg": 1,
      "term": null
    },
    {
      "index": 200,
      "opcode": "store",
      "arg": null,
      "term": null
    },
    {
      "index": 201,
      "opcode": "pop",
      "arg": null,
      "term": null
    },
    {
      "index": 202,
      "opcode": "push",
      "arg": 108,
      "term": "(static string, char: l)"
    },
    {
      "index": 203,
      "opcode": "push",
      "arg": 2,
      "term": null
    },
    {
      "index": 204,
      "opcode": "store",
      "arg": null,
      "term": null
    },
    {
      "index": 205,
      "opcode": "pop",
      "arg": null,
      "term": null
    },
    {
      "index": 206,
      "opcode": "push",
      "arg": 108,
      "term": "(static string, char: l)"
    },
    {
      "index": 207,
      "opcode": "push",
      "arg": 3,
      "term": null
    },
    {
      "index": 208,
      "opcode": "store",
      "arg": null,
      "term": null
    },
    {
      "index": 209,
      "opcode": "pop",
      "arg": null,
      "term": null
    },
    {
      "index": 210,
      "opcode": "push",
      "arg": 111,
      "term": "(static string, char: o)"
    },
    {
      "index": 211,
      "opcode": "push",
      "arg": 4,
      "term": null
    },
    {
      "index": 212,
      "opcode": "store",
      "arg": null,
      "term": null
    },
    {
      "index": 213,
      "opcode": "pop",
      "arg": null,
      "term": null
    },
    {
      "index": 214,
      "opcode": "push",
      "arg": 32,
      "term": "(static string, char:  )"
    },
    {
      "index": 215,
      "opcode": "push",
      "arg": 5,
      "term": null
    },
    {
      "index": 216,
      "opcode": "store",
      "arg": null,
      "term": null
    },
    {
      "index": 217,
      "opcode": "pop",
      "arg": null,
      "term": null
    },
    {
      "index": 218,
      "opcode": "push",
      "arg": 119,
      "term": "(static string, char: w)"
    },
    {
      "index": 219,
      "opcode": "push",
      "arg": 6,
      "term": null
    },
    {
      "index": 220,
      "opcode": "store",
      "arg": null,
      "term": null
    },
    {
      "index": 221,
      "opcode": "pop",
      "arg": null,
      "term": null
    },
    {
      "index": 222,
      "opcode": "push",
      "arg": 111,
      "term": "(static string, char: o)"
    },
    {
      "index": 223,
      "opcode": "push",
      "arg": 7,
      "term": null
    },
    {
      "index": 224,
      "opcode": "store",
      "arg": null,
      "term": null
    },
    {
      "index": 225,
      "opcode": "pop",
      "arg": null,
      "term": null
    },
    {
      "index": 226,
      "opcode": "push",
      "arg": 114,
      "term": "(static string, char: r)"
    },
    {
      "index": 227,
      "opcode": "push",
      "arg": 8,
      "term": null
    },
    {
      "index": 228,
      "opcode": "store",
      "arg": null,
      "term": null
    },
    {
      "index": 229,
      "opcode": "pop",
      "arg": null,
      "term": null
    },
    {
      "index": 230,
      "opcode": "push",
      "arg": 108,
      "term": "(static string, char: l)"
    },
    {
      "index": 231,
      "opcode": "push",
      "arg": 9,
      "term": null
    },
    {
      "index": 232,
      "opcode": "store",
      "arg": null,
      "term": null
    },
    {
      "index": 233,
      "opcode": "pop",
      "arg": null,
      "term": null
    },
    {
      "index": 234,
      "opcode": "push",
      "arg": 100,
      "term": "(static string, char: d)"
    },
    {
      "index": 235,
      "opcode": "push",
      "arg": 10,
      "term": null
    },
    {
      "index": 236,
      "opcode": "store",
      "arg": null,
      "term": null
    },
    {
      "index": 237,
      "opcode": "pop",
      "arg": null,
      "term": null
    },
    {
      "index": 238,
      "opcode": "push",
      "arg": 0,
      "term": "(static string, 0-termination)"
    },
    {
      "index": 239,
      "opcode": "push",
      "arg": 11,
      "term": null
    },
    {
      "index": 240,
      "opcode": "store",
      "arg": null,
      "term": null
    },
    {
      "index": 241,
      "opcode": "pop",
      "arg": null,
      "term": null
    },
    {
      "index": 242,
      "opcode": "push",
      "arg": 0,
      "term": "(static string)"
    },
    {
      "index": 243,
      "opcode": "dup",
      "arg": null,
      "term": "print_str"
    },
    {
      "index": 244,
      "opcode": "load",
      "arg": null,
      "term": "print_str"
    },
    {
      "index": 245,
      "opcode": "flags",
      "arg": null,
      "term": "print_str"
    },
    {
      "index": 246,
      "opcode": "jump_zero",
      "arg": 3,
      "term": "print_str"
    },
    {
      "index": 247,
      "opcode": "write",
      "arg": 0,
      "term": "print_str"
    },
    {
      "index": 248,
      "opcode": "inc",
      "arg": null,
      "term": "print_str"
    },
    {
      "index": 249,
      "opcode": "jump",
      "arg": -7,
      "term": "print_str"
    },
    {
      "index": 250,
      "opcode": "pop",
      "arg": null,
      "term": "print_str"
    },
    {
      "index": 252,
      "opcode": "pop",
      "arg": null,
      "term": "(top-level expression)"
    },
    {
      "index": 253,
      "opcode": "halt",
      "arg": null,
      "term": null
    }
  ]
out_log: |
  DEBUG    root:machine.py:24 TICK:   0,  PC:   0,  AR:   0,  MEM_OUT:   0,  TOS: []                    ,    jump 0    
  DEBUG    root:machine.py:27 TICK:   1,  PC:   1,  AR:   0,  MEM_OUT:   0,  TOS: []                    ,    push 72    // (static string, char: H)
  DEBUG    root:machine.py:27 TICK:   2,  PC:   2,  AR:   0,  MEM_OUT:   0,  TOS: [72]                  ,    push 0    
  DEBUG    root:machine.py:27 TICK:   3,  PC:   3,  AR:   0,  MEM_OUT:   0,  TOS: [0, 72]               ,    store     
  DEBUG    root:machine.py:27 TICK:   5,  PC:   4,  AR:   0,  MEM_OUT:  72,  TOS: [72]                  ,    pop       
  DEBUG    root:machine.py:27 TICK:   6,  PC:   5,  AR:   0,  MEM_OUT:  72,  TOS: []                    ,    push 101   // (static string, char: e)
  DEBUG    root:machine.py:27 TICK:   7,  PC:   6,  AR:   0,  MEM_OUT:  72,  TOS: [101]                 ,    push 1    
  DEBUG    root:machine.py:27 TICK:   8,  PC:   7,  AR:   0,  MEM_OUT:  72,  TOS: [1, 101]              ,    store     
  DEBUG    root:machine.py:27 TICK:  10,  PC:   8,  AR:   1,  MEM_OUT: 101,  TOS: [101]                 ,    pop       
  DEBUG    root:machine.py:27 TICK:  11,  PC:   9,  AR:   1,  MEM_OUT: 101,  TOS: []                    ,    push 108   // (static string, char: l)
  DEBUG    root:machine.py:27 TICK:  12,  PC:  10,  AR:   1,  MEM_OUT: 101,  TOS: [108]                 ,    push 2    
  DEBUG    root:machine.py:27 TICK:  13,  PC:  11,  AR:   1,  MEM_OUT: 101,  TOS: [2, 108]              ,    store     
  DEBUG    root:machine.py:27 TICK:  15,  PC:  12,  AR:   2,  MEM_OUT: 108,  TOS: [108]                 ,    pop       
  DEBUG    root:machine.py:27 TICK:  16,  PC:  13,  AR:   2,  MEM_OUT: 108,  TOS: []                    ,    push 108   // (static string, char: l)
  DEBUG    root:machine.py:27 TICK:  17,  PC:  14,  AR:   2,  MEM_OUT: 108,  TOS: [108]                 ,    push 3    
  DEBUG    root:machine.py:27 TICK:  18,  PC:  15,  AR:   2,  MEM_OUT: 108,  TOS: [3, 108]              ,    store     
  DEBUG    root:machine.py:27 TICK:  20,  PC:  16,  AR:   3,  MEM_OUT: 108,  TOS: [108]                 ,    pop       
  DEBUG    root:machine.py:27 TICK:  21,  PC:  17,  AR:   3,  MEM_OUT: 108,  TOS: []                    ,    push 111   // (static string, char: o)
  DEBUG    root:machine.py:27 TICK:  22,  PC:  18,  AR:   3,  MEM_OUT: 108,  TOS: [111]                 ,    push 4    
  DEBUG    root:machine.py:27 TICK:  23,  PC:  19,  AR:   3,  MEM_OUT: 108,  TOS: [4, 111]              ,    store     
  DEBUG    root:machine.py:27 TICK:  25,  PC:  20,  AR:   4,  MEM_OUT: 111,  TOS: [111]                 ,    pop       
  DEBUG    root:machine.py:27 TICK:  26,  PC:  21,  AR:   4,  MEM_OUT: 111,  TOS: []                    ,    push 32    // (static string, char:  )
  DEBUG    root:machine.py:27 TICK:  27,  PC:  22,  AR:   4,  MEM_OUT: 111,  TOS: [32]                  ,    push 5    
  DEBUG    root:machine.py:27 TICK:  28,  PC:  23,  AR:   4,  MEM_OUT: 111,  TOS: [5, 32]               ,    store     
  DEBUG    root:machine.py:27 TICK:  30,  PC:  24,  AR:   5,  MEM_OUT:  32,  TOS: [32]                  ,    pop       
  DEBUG    root:machine.py:27 TICK:  31,  PC:  25,  AR:   5,  MEM_OUT:  32,  TOS: []                    ,    push 119   // (static string, char: w)
  DEBUG    root:machine.py:27 TICK:  32,  PC:  26,  AR:   5,  MEM_OUT:  32,  TOS: [119]                 ,    push 6    
  DEBUG    root:machine.py:27 TICK:  33,  PC:  27,  AR:   5,  MEM_OUT:  32,  TOS: [6, 119]              ,    store     
  DEBUG    root:machine.py:27 TICK:  35,  PC:  28,  AR:   6,  MEM_OUT: 119,  TOS: [119]                 ,    pop       
  DEBUG    root:machine.py:27 TICK:  36,  PC:  29,  AR:   6,  MEM_OUT: 119,  TOS: []                    ,    push 111   // (static string, char: o)
  DEBUG    root:machine.py:27 TICK:  37,  PC:  30,  AR:   6,  MEM_OUT: 119,  TOS: [111]                 ,    push 7    
  DEBUG    root:machine.py:27 TICK:  38,  PC:  31,  AR:   6,  MEM_OUT: 119,  TOS: [7, 111]              ,    store     
  DEBUG    root:machine.py:27 TICK:  40,  PC:  32,  AR:   7,  MEM_OUT: 111,  TOS: [111]                 ,    pop       
  DEBUG    root:machine.py:27 TICK:  41,  PC:  33,  AR:   7,  MEM_OUT: 111,  TOS: []                    ,    push 114   // (static string, char: r)
  DEBUG    root:machine.py:27 TICK:  42,  PC:  34,  AR:   7,  MEM_OUT: 111,  TOS: [114]                 ,    push 8    
  DEBUG    root:machine.py:27 TICK:  43,  PC:  35,  AR:   7,  MEM_OUT: 111,  TOS: [8, 114]              ,    store     
  DEBUG    root:machine.py:27 TICK:  45,  PC:  36,  AR:   8,  MEM_OUT: 114,  TOS: [114]                 ,    pop       
  DEBUG    root:machine.py:27 TICK:  46,  PC:  37,  AR:   8,  MEM_OUT: 114,  TOS: []                    ,    push 108   // (static string, char: l)
  DEBUG    root:machine.py:27 TICK:  47,  PC:  38,  AR:   8,  MEM_OUT: 114,  TOS: [108]                 ,    push 9    
  DEBUG    root:machine.py:27 TICK:  48,  PC:  39,  AR:   8,  MEM_OUT: 114,  TOS: [9, 108]              ,    store     
  DEBUG    root:machine.py:27 TICK:  50,  PC:  40,  AR:   9,  MEM_OUT: 108,  TOS: [108]                 ,    pop       
  DEBUG    root:machine.py:27 TICK:  51,  PC:  41,  AR:   9,  MEM_OUT: 108,  TOS: []                    ,    push 100   // (static string, char: d)
  DEBUG    root:machine.py:27 TICK:  52,  PC:  42,  AR:   9,  MEM_OUT: 108,  TOS: [100]                 ,    push 10   
  DEBUG    root:machine.py:27 TICK:  53,  PC:  43,  AR:   9,  MEM_OUT: 108,  TOS: [10, 100]             ,    store     
  DEBUG    root:machine.py:27 TICK:  55,  PC:  44,  AR:  10,  MEM_OUT: 100,  TOS: [100]                 ,    pop       
  DEBUG    root:machine.py:27 TICK:  56,  PC:  45,  AR:  10,  MEM_OUT: 100,  TOS: []                    ,    push 0     // (static string, 0-termination)
  DEBUG    root:machine.py:27 TICK:  57,  PC:  46,  AR:  10,  MEM_OUT: 100,  TOS: [0]                   ,    push 11   
  DEBUG    root:machine.py:27 TICK:  58,  PC:  47,  AR:  10,  MEM_OUT: 100,  TOS: [11, 0]               ,    store     
  DEBUG    root:machine.py:27 TICK:  60,  PC:  48,  AR:  11,  MEM_OUT:   0,  TOS: [0]                   ,    pop       
  DEBUG    root:machine.py:27 TICK:  61,  PC:  49,  AR:  11,  MEM_OUT:   0,  TOS: []                    ,    push 0     // (static string)
  DEBUG    root:machine.py:27 TICK:  62,  PC:  50,  AR:  11,  MEM_OUT:   0,  TOS: [0]                   ,    dup        // print_str
  DEBUG    root:machine.py:27 TICK:  63,  PC:  51,  AR:  11,  MEM_OUT:   0,  TOS: [0, 0]                ,    load       // print_str
  DEBUG    root:machine.py:27 TICK:  65,  PC:  52,  AR:   0,  MEM_OUT:  72,  TOS: [72, 0]               ,    flags      // print_str
  DEBUG    root:machine.py:27 TICK:  66,  PC:  53,  AR:   0,  MEM_OUT:  72,  TOS: [72, 0]               ,    jump_zero 3 // print_str
  DEBUG    root:machine.py:27 TICK:  67,  PC:  54,  AR:   0,  MEM_OUT:  72,  TOS: [72, 0]               ,    write 0    // print_str
  DEBUG    root:control_unit.py:79 вывод: H
  DEBUG    root:machine.py:27 TICK:  68,  PC:  55,  AR:   0,  MEM_OUT:  72,  TOS: [0]                   ,    inc        // print_str
  DEBUG    root:machine.py:27 TICK:  69,  PC:  56,  AR:   0,  MEM_OUT:  72,  TOS: [1]                   ,    jump -7    // print_str
  DEBUG    root:machine.py:27 TICK:  70,  PC:  50,  AR:   0,  MEM_OUT:  72,  TOS: [1]                   ,    dup        // print_str
  DEBUG    root:machine.py:27 TICK:  71,  PC:  51,  AR:   0,  MEM_OUT:  72,  TOS: [1, 1]                ,    load       // print_str
  DEBUG    root:machine.py:27 TICK:  73,  PC:  52,  AR:   1,  MEM_OUT: 101,  TOS: [101, 1]              ,    flags      // print_str
  DEBUG    root:machine.py:27 TICK:  74,  PC:  53,  AR:   1,  MEM_OUT: 101,  TOS: [101, 1]              ,    jump_zero 3 // print_str
  DEBUG    root:machine.py:27 TICK:  75,  PC:  54,  AR:   1,  MEM_OUT: 101,  TOS: [101, 1]              ,    write 0    // print_str
  DEBUG    root:control_unit.py:79 вывод: e
  DEBUG    root:machine.py:27 TICK:  76,  PC:  55,  AR:   1,  MEM_OUT: 101,  TOS: [1]                   ,    inc        // print_str
  DEBUG    root:machine.py:27 TICK:  77,  PC:  56,  AR:   1,  MEM_OUT: 101,  TOS: [2]                   ,    jump -7    // print_str
  DEBUG    root:machine.py:27 TICK:  78,  PC:  50,  AR:   1,  MEM_OUT: 101,  TOS: [2]                   ,    dup        // print_str
  DEBUG    root:machine.py:27 TICK:  79,  PC:  51,  AR:   1,  MEM_OUT: 101,  TOS: [2, 2]                ,    load       // print_str
  DEBUG    root:machine.py:27 TICK:  81,  PC:  52,  AR:   2,  MEM_OUT: 108,  TOS: [108, 2]              ,    flags      // print_str
  DEBUG    root:machine.py:27 TICK:  82,  PC:  53,  AR:   2,  MEM_OUT: 108,  TOS: [108, 2]              ,    jump_zero 3 // print_str
  DEBUG    root:machine.py:27 TICK:  83,  PC:  54,  AR:   2,  MEM_OUT: 108,  TOS: [108, 2]              ,    write 0    // print_str
  DEBUG    root:control_unit.py:79 вывод: l
  DEBUG    root:machine.py:27 TICK:  84,  PC:  55,  AR:   2,  MEM_OUT: 108,  TOS: [2]                   ,    inc        // print_str
  DEBUG    root:machine.py:27 TICK:  85,  PC:  56,  AR:   2,  MEM_OUT: 108,  TOS: [3]                   ,    jump -7    // print_str
  DEBUG    root:machine.py:27 TICK:  86,  PC:  50,  AR:   2,  MEM_OUT: 108,  TOS: [3]                   ,    dup        // print_str
  DEBUG    root:machine.py:27 TICK:  87,  PC:  51,  AR:   2,  MEM_OUT: 108,  TOS: [3, 3]                ,    load       // print_str
  DEBUG    root:machine.py:27 TICK:  89,  PC:  52,  AR:   3,  MEM_OUT: 108,  TOS: [108, 3]              ,    flags      // print_str
  DEBUG    root:machine.py:27 TICK:  90,  PC:  53,  AR:   3,  MEM_OUT: 108,  TOS: [108, 3]              ,    jump_zero 3 // print_str
  DEBUG    root:machine.py:27 TICK:  91,  PC:  54,  AR:   3,  MEM_OUT: 108,  TOS: [108, 3]              ,    write 0    // print_str
  DEBUG    root:control_unit.py:79 вывод: l
  DEBUG    root:machine.py:27 TICK:  92,  PC:  55,  AR:   3,  MEM_OUT: 108,  TOS: [3]                   ,    inc        // print_str
  DEBUG    root:machine.py:27 TICK:  93,  PC:  56,  AR:   3,  MEM_OUT: 108,  TOS: [4]                   ,    jump -7    // print_str
  DEBUG    root:machine.py:27 TICK:  94,  PC:  50,  AR:   3,  MEM_OUT: 108,  TOS: [4]                   ,    dup        // print_str
  DEBUG    root:machine.py:27 TICK:  95,  PC:  51,  AR:   3,  MEM_OUT: 108,  TOS: [4, 4]                ,    load       // print_str
  DEBUG    root:machine.py:27 TICK:  97,  PC:  52,  AR:   4,  MEM_OUT: 111,  TOS: [111, 4]              ,    flags      // print_str
  DEBUG    root:machine.py:27 TICK:  98,  PC:  53,  AR:   4,  MEM_OUT: 111,  TOS: [111, 4]              ,    jump_zero 3 // print_str
  DEBUG    root:machine.py:27 TICK:  99,  PC:  54,  AR:   4,  MEM_OUT: 111,  TOS: [111, 4]              ,    write 0    // print_str
  DEBUG    root:control_unit.py:79 вывод: o
  DEBUG    root:machine.py:27 TICK: 100,  PC:  55,  AR:   4,  MEM_OUT: 111,  TOS: [4]                   ,    inc        // print_str
  DEBUG    root:machine.py:27 TICK: 101,  PC:  56,  AR:   4,  MEM_OUT: 111,  TOS: [5]                   ,    jump -7    // print_str
  DEBUG    root:machine.py:27 TICK: 102,  PC:  50,  AR:   4,  MEM_OUT: 111,  TOS: [5]                   ,    dup        // print_str
  DEBUG    root:machine.py:27 TICK: 103,  PC:  51,  AR:   4,  MEM_OUT: 111,  TOS: [5, 5]                ,    load       // print_str
  DEBUG    root:machine.py:27 TICK: 105,  PC:  52,  AR:   5,  MEM_OUT:  32,  TOS: [32, 5]               ,    flags      // print_str
  DEBUG    root:machine.py:27 TICK: 106,  PC:  53,  AR:   5,  MEM_OUT:  32,  TOS: [32, 5]               ,    jump_zero 3 // print_str
  DEBUG    root:machine.py:27 TICK: 107,  PC:  54,  AR:   5,  MEM_OUT:  32,  TOS: [32, 5]               ,    write 0    // print_str
  DEBUG    root:control_unit.py:79 вывод:  
  DEBUG    root:machine.py:27 TICK: 108,  PC:  55,  AR:   5,  MEM_OUT:  32,  TOS: [5]                   ,    inc        // print_str
  DEBUG    root:machine.py:27 TICK: 109,  PC:  56,  AR:   5,  MEM_OUT:  32,  TOS: [6]                   ,    jump -7    // print_str
  DEBUG    root:machine.py:27 TICK: 110,  PC:  50,  AR:   5,  MEM_OUT:  32,  TOS: [6]                   ,    dup        // print_str
  DEBUG    root:machine.py:27 TICK: 111,  PC:  51,  AR:   5,  MEM_OUT:  32,  TOS: [6, 6]                ,    load       // print_str
  DEBUG    root:machine.py:27 TICK: 113,  PC:  52,  AR:   6,  MEM_OUT: 119,  TOS: [119, 6]              ,    flags      // print_str
  DEBUG    root:machine.py:27 TICK: 114,  PC:  53,  AR:   6,  MEM_OUT: 119,  TOS: [119, 6]              ,    jump_zero 3 // print_str
  DEBUG    root:machine.py:27 TICK: 115,  PC:  54,  AR:   6,  MEM_OUT: 119,  TOS: [119, 6]              ,    write 0    // print_str
  DEBUG    root:control_unit.py:79 вывод: w
  DEBUG    root:machine.py:27 TICK: 116,  PC:  55,  AR:   6,  MEM_OUT: 119,  TOS: [6]                   ,    inc        // print_str
  DEBUG    root:machine.py:27 TICK: 117,  PC:  56,  AR:   6,  MEM_OUT: 119,  TOS: [7]                   ,    jump -7    // print_str
  DEBUG    root:machine.py:27 TICK: 118,  PC:  50,  AR:   6,  MEM_OUT: 119,  TOS: [7]                   ,    dup        // print_str
  DEBUG    root:machine.py:27 TICK: 119,  PC:  51,  AR:   6,  MEM_OUT: 119,  TOS: [7, 7]                ,    load       // print_str
  DEBUG    root:machine.py:27 TICK: 121,  PC:  52,  AR:   7,  MEM_OUT: 111,  TOS: [111, 7]              ,    flags      // print_str
  DEBUG    root:machine.py:27 TICK: 122,  PC:  53,  AR:   7,  MEM_OUT: 111,  TOS: [111, 7]              ,    jump_zero 3 // print_str
  DEBUG    root:machine.py:27 TICK: 123,  PC:  54,  AR:   7,  MEM_OUT: 111,  TOS: [111, 7]              ,    write 0    // print_str
  DEBUG    root:control_unit.py:79 вывод: o
  DEBUG    root:machine.py:27 TICK: 124,  PC:  55,  AR:   7,  MEM_OUT: 111,  TOS: [7]                   ,    inc        // print_str
  DEBUG    root:machine.py:27 TICK: 125,  PC:  56,  AR:   7,  MEM_OUT: 111,  TOS: [8]                   ,    jump -7    // print_str
  DEBUG    root:machine.py:27 TICK: 126,  PC:  50,  AR:   7,  MEM_OUT: 111,  TOS: [8]                   ,    dup        // print_str
  DEBUG    root:machine.py:27 TICK: 127,  PC:  51,  AR:   7,  MEM_OUT: 111,  TOS: [8, 8]                ,    load       // print_str
  DEBUG    root:machine.py:27 TICK: 129,  PC:  52,  AR:   8,  MEM_OUT: 114,  TOS: [114, 8]              ,    flags      // print_str
  DEBUG    root:machine.py:27 TICK: 130,  PC:  53,  AR:   8,  MEM_OUT: 114,  TOS: [114, 8]              ,    jump_zero 3 // print_str
  DEBUG    root:machine.py:27 TICK: 131,  PC:  54,  AR:   8,  MEM_OUT: 114,  TOS: [114, 8]              ,    write 0    // print_str
  DEBUG    root:control_unit.py:79 вывод: r
  DEBUG    root:machine.py:27 TICK: 132,  PC:  55,  AR:   8,  MEM_OUT: 114,  TOS: [8]                   ,    inc        // print_str
  DEBUG    root:machine.py:27 TICK: 133,  PC:  56,  AR:   8,  MEM_OUT: 114,  TOS: [9]                   ,    jump -7    // print_str
  DEBUG    root:machine.py:27 TICK: 134,  PC:  50,  AR:   8,  MEM_OUT: 114,  TOS: [9]                   ,    dup        // print_str
  DEBUG    root:machine.py:27 TICK: 135,  PC:  51,  AR:   8,  MEM_OUT: 114,  TOS: [9, 9]                ,    load       // print_str
  DEBUG    root:machine.py:27 TICK: 137,  PC:  52,  AR:   9,  MEM_OUT: 108,  TOS: [108, 9]              ,    flags      // print_str
  DEBUG    root:machine.py:27 TICK: 138,  PC:  53,  AR:   9,  MEM_OUT: 108,  TOS: [108, 9]              ,    jump_zero 3 // print_str
  DEBUG    root:machine.py:27 TICK: 139,  PC:  54,  AR:   9,  MEM_OUT: 108,  TOS: [108, 9]              ,    write 0    // print_str
  DEBUG    root:control_unit.py:79 вывод: l
  DEBUG    root:machine.py:27 TICK: 140,  PC:  55,  AR:   9,  MEM_OUT: 108,  TOS: [9]                   ,    inc        // print_str
  DEBUG    root:machine.py:27 TICK: 141,  PC:  56,  AR:   9,  MEM_OUT: 108,  TOS: [10]                  ,    jump -7    // print_str
  DEBUG    root:machine.py:27 TICK: 142,  PC:  50,  AR:   9,  MEM_OUT: 108,  TOS: [10]                  ,    dup        // print_str
  DEBUG    root:machine.py:27 TICK: 143,  PC:  51,  AR:   9,  MEM_OUT: 108,  TOS: [10, 10]              ,    load       // print_str
  DEBUG    root:machine.py:27 TICK: 145,  PC:  52,  AR:  10,  MEM_OUT: 100,  TOS: [100, 10]             ,    flags      // print_str
  DEBUG    root:machine.py:27 TICK: 146,  PC:  53,  AR:  10,  MEM_OUT: 100,  TOS: [100, 10]             ,    jump_zero 3 // print_str
  DEBUG    root:machine.py:27 TICK: 147,  PC:  54,  AR:  10,  MEM_OUT: 100,  TOS: [100, 10]             ,    write 0    // print_str
  DEBUG    root:control_unit.py:79 вывод: d
  DEBUG    root:machine.py:27 TICK: 148,  PC:  55,  AR:  10,  MEM_OUT: 100,  TOS: [10]                  ,    inc        // print_str
  DEBUG    root:machine.py:27 TICK: 149,  PC:  56,  AR:  10,  MEM_OUT: 100,  TOS: [11]                  ,    jump -7    // print_str
  DEBUG    root:machine.py:27 TICK: 150,  PC:  50,  AR:  10,  MEM_OUT: 100,  TOS: [11]                  ,    dup        // print_str
  DEBUG    root:machine.py:27 TICK: 151,  PC:  51,  AR:  10,  MEM_OUT: 100,  TOS: [11, 11]              ,    load       // print_str
  DEBUG    root:machine.py:27 TICK: 153,  PC:  52,  AR:  11,  MEM_OUT:   0,  TOS: [0, 11]               ,    flags      // print_str
  DEBUG    root:machine.py:27 TICK: 154,  PC:  53,  AR:  11,  MEM_OUT:   0,  TOS: [0, 11]               ,    jump_zero 3 // print_str
  DEBUG    root:machine.py:27 TICK: 155,  PC:  57,  AR:  11,  MEM_OUT:   0,  TOS: [0, 11]               ,    pop        // print_str
  DEBUG    root:machine.py:27 TICK: 156,  PC:  58,  AR:  11,  MEM_OUT:   0,  TOS: [11]                  ,    pop        // (top-level expression)
  DEBUG    root:machine.py:27 TICK: 157,  PC:  59,  AR:  11,  MEM_OUT:   0,  TOS: []                    ,    halt      
